INSERT INTO dc_clien_scheme
(id, project_id, name, scheme_id, template_id, template_json, remarks, create_by, create_date, update_by, update_date, del_flag)
VALUES(1230000000000000004, 30000000, '部门管理', 1210000000000000011, 1324962226446794787, '{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 树型表结构\\n  return dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/org//department","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { tree{{table.className}}{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = [{{@ table.filter}}]\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''list-tree'' && item.__config__.locked}}\\n      if(validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      this.search.params.push({\\n      \\tcolumnName: ''{{item.__config__.associatedField}}'',\\n      \\tqueryType: ''{{item.__config__.operator}}'',\\n      \\tvalue: this.parentTable.id\\n      })\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      tree{{table.className}}(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableData = responseData.data ? responseData.data : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    async pageInit() {\\n      this.initOptions(this.queryModel)\\n      this.setLoad()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate(scope) {\\n      if(validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      let row={\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''list-tree'' && item.__config__.locked}}\\n            {{if item.__config__.associatedField && item.__config__.field}}\\n        ''{{item.__config__.field.javaField}}'': \\n              {{if item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This''}}\\n              {\\n                {{each item.__config__.field.childFields field}}\\n                {{field.value}}: this.parentTable.{{field.value}},           \\n              {{/each}}\\n              }\\n              {{else}}\\n              this.parentTable.id,\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      this.$refs.editForm.$emit(''openAddDialog'', scope.row, row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onChangeCurrentRow(currentRow, oldCurrentRow) {\\n      if(currentRow != oldCurrentRow) {\\n        this.parentTable = currentRow\\n        this.initOptions(this.queryModel)\\n        this.onSearch()\\n      }\\n    },\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[{"name":"","value":""}],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.09351286018796,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.8212494884055,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElContainer","designLayout":"function containerLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var Tag = \\"\\".concat(config.tag);\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''container-layout drawing-row-item active-from-item'' : ''container-layout drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var isContainer = Tag == ''el-container'';\\r\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function containerLayout(h) {\\r\\n  var _this2 = this;\\r\\n  function getDirection(val) {\\r\\n    var _this = this;\\r\\n    if (val === ''header-main'') {\\r\\n      this.activeData.direction = ''vertical'';\\r\\n      this.activeData.__config__.children.some(function (item, index) {\\r\\n        if (item.__config__.tag !== ''el-main'') {\\r\\n          item.__config__.tag = ''el-header'';\\r\\n          item.__config__.elName = ''ElHeader'';\\r\\n          item.__config__.componentName = \\"\\".concat(item.__config__.elName).concat(item.__config__.formId);\\r\\n          if (index > 0) {\\r\\n            _this.activeData.__config__.children.splice(index, 1);\\r\\n            _this.activeData.__config__.children.unshift(item);\\r\\n          }\\r\\n          return true;\\r\\n        }\\r\\n      });\\r\\n    } else if (val === ''main-header'') {\\r\\n      this.activeData.direction = ''vertical'';\\r\\n      this.activeData.__config__.children.some(function (item, index) {\\r\\n        if (item.__config__.tag !== ''el-main'') {\\r\\n          item.__config__.tag = ''el-header'';\\r\\n          item.__config__.elName = ''ElHeader'';\\r\\n          item.__config__.componentName = \\"\\".concat(item.__config__.elName).concat(item.__config__.formId);\\r\\n          if (index === 0) {\\r\\n            _this.activeData.__config__.children.splice(index, 1);\\r\\n            _this.activeData.__config__.children.push(item);\\r\\n          }\\r\\n          return true;\\r\\n        }\\r\\n      });\\r\\n    } else if (val === ''aside-main'') {\\r\\n      this.activeData.direction = ''horizontal'';\\r\\n      this.activeData.__config__.children.some(function (item, index) {\\r\\n        if (item.__config__.tag !== ''el-main'') {\\r\\n          item.__config__.tag = ''el-aside'';\\r\\n          item.__config__.elName = ''ElAside'';\\r\\n          item.__config__.componentName = \\"\\".concat(item.__config__.elName).concat(item.__config__.formId);\\r\\n          if (index > 0) {\\r\\n            _this.activeData.__config__.children.splice(index, 1);\\r\\n            _this.activeData.__config__.children.unshift(item);\\r\\n          }\\r\\n          return true;\\r\\n        }\\r\\n      });\\r\\n    } else if (val === ''main-aside'') {\\r\\n      this.activeData.direction = ''horizontal'';\\r\\n      this.activeData.__config__.children.some(function (item, index) {\\r\\n        if (item.__config__.tag !== ''el-main'') {\\r\\n          item.__config__.tag = ''el-aside'';\\r\\n          item.__config__.elName = ''ElAside'';\\r\\n          item.__config__.componentName = \\"\\".concat(item.__config__.elName).concat(item.__config__.formId);\\r\\n          if (index === 0) {\\r\\n            _this.activeData.__config__.children.splice(index, 1);\\r\\n            _this.activeData.__config__.children.push(item);\\r\\n          }\\r\\n          return true;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.container'', ''changeLayout'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.changeLayout,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"changeLayout\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": getDirection.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"header-main\\"\\r\\n    }\\r\\n  }, [h(\\"svg-icon\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon-class\\": this.activeData.__config__.changeLayout === ''header-main'' ? ''span1_w'' : ''span1''\\r\\n    }\\r\\n  })]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"main-header\\"\\r\\n    }\\r\\n  }, [h(\\"svg-icon\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon-class\\": this.activeData.__config__.changeLayout === ''main-header'' ? ''span2_w'' : ''span2''\\r\\n    }\\r\\n  })]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"aside-main\\"\\r\\n    }\\r\\n  }, [h(\\"svg-icon\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon-class\\": this.activeData.__config__.changeLayout === ''aside-main'' ? ''span3_w'' : ''span3''\\r\\n    }\\r\\n  })]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"main-aside\\"\\r\\n    }\\r\\n  }, [h(\\"svg-icon\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon-class\\": this.activeData.__config__.changeLayout === ''main-aside'' ? ''span4_w'' : ''span4''\\r\\n    }\\r\\n  })])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.container'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.container'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-container","tagIcon":"row","label":"Container布局","changeLayout":"aside-main","document":"https://element.eleme.io/2.15/#/zh-CN/component/container","children":[{"__config__":{"elName":"ElAside","designLayout":"function containerChildLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var Tag = \\"\\".concat(config.tag);\\n    return h(Tag, {\\n      \\"attrs\\": {\\n        \\"width\\": element.width,\\n        \\"height\\": element.height\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": \\"width:100%; height:100%\\",\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var isContainer = Tag == ''el-container'';\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\">\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function headerLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [this.activeData.__config__.elName == ''ElHeader'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度'',\\n      \\"guide\\": this.getHelp(''page.container'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入高度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.__config__.elName == ''ElAside'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.container'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.container'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.container'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-aside","children":[{"__config__":{"elName":"ListTree","designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function listTreeLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }];\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple'', ''File'', ''Image''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: ''name'',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: ''name'',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.label; // 说明\\r\\n      search.name = item.value; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1);\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.dcTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.dcTable.scheme.moduleName + ''/'' + (item.dcTable.scheme.subModuleName ? item.dcTable.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function addSearchConditions() {\\r\\n    // 初始循环添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    // this.params.activeSearchName.push(index)\\r\\n  }\\r\\n\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n\\r\\n  function onChangeModel(field) {\\r\\n    var _this = this;\\r\\n    this.activeData.__config__.tableColumnsChildFields = [];\\r\\n    this.activeData.__config__.searchList = [];\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.activeData['':api''] = {\\r\\n      baseURL: '''',\\r\\n      method: ''post'',\\r\\n      url: '''',\\r\\n      params: [],\\r\\n      data: null,\\r\\n      reqBefore: ''return config'',\\r\\n      reqResponse: '''',\\r\\n      reqError: ''console.error(error)''\\r\\n    };\\r\\n    if (field.javaType.value == ''Custom'') {\\r\\n      this.activeData.__config__.tableColumnsChildFields = field.childFields;\\r\\n      this.activeData['':api''].baseURL = \\"BASE_API\\";\\r\\n      this.activeData['':api''].url =\\r\\n      // ''/'' + field.customType.scheme.moduleName + ''/'' + (field.customType.scheme.subModuleName ? (field.customType.scheme.subModuleName + ''/''):\\"\\")  + (field.customType.isTreeTable?\\"tree\\":\\"list\\")\\r\\n      field.customType.scheme.moduleName + ''/'' + (field.customType.scheme.subModuleName ? field.customType.scheme.subModuleName + ''/'' : '''') + field.customType.className.charAt(0).toLowerCase() + field.customType.className.slice(1) + (field.customType.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n      this.activeData['':api''].data = field.customType.filter;\\r\\n      //添加查询字段\\r\\n      this.activeData.__config__.tableColumnsChildFields.forEach(function (item, index) {\\r\\n        addSearchConditions.call(_this);\\r\\n        onChangeSearchColumn.call(_this, item, index);\\r\\n      });\\r\\n    } else if (field.javaType.value == ''This'') {\\r\\n      this.activeData.__config__.tableColumnsChildFields = field.childFields;\\r\\n      if (this.dbModel.table.name == field.currentSchemeTable) {\\r\\n        this.activeData['':api''].url =\\r\\n        // ''/'' + this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? (this.dbModel.table.scheme.subModuleName + ''/'') : \\"\\") + (this.dbModel.table.isTreeTable ? \\"tree\\" : \\"list\\")\\r\\n        this.dbModel.customType.scheme.moduleName + ''/'' + (this.dbModel.customType.scheme.subModuleName ? this.dbModel.customType.scheme.subModuleName + ''/'' : '''') + this.dbModel.customType.className.charAt(0).toLowerCase() + this.dbModel.customType.className.slice(1) + (this.dbModel.table.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n        this.activeData['':api''].params = this.dbModel.table.filter;\\r\\n      }\\r\\n      this.dbModel.childTables.forEach(function (element) {\\r\\n        if (element.name == field.currentSchemeTable) {\\r\\n          _this.activeData['':api''].url =\\r\\n          // ''/'' + element.scheme.moduleName + ''/'' + (element.scheme.subModuleName ? (element.scheme.subModuleName + ''/'') : \\"\\") + (element.isTreeTable ? \\"tree\\" : \\"list\\")\\r\\n          element.scheme.moduleName + ''/'' + (element.scheme.subModuleName ? element.scheme.subModuleName + ''/'' : '''') + element.className.charAt(0).toLowerCase() + element.className.slice(1) + (element.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n          _this.activeData['':api''].params = element.filter;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"field\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示字段（v-model）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示字段'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''field'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入显示字段\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列表名'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入列表名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''格式化'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"关联数据\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''associatedField'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.associatedField\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''关联字段'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''associatedField'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择关联字段\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.associatedField,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"associatedField\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.name,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.name\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''查询方式'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this2.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this2.activeData.__config__.tableColumnsChildFields.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.value, \\": \\").concat(item.label),\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this2, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this2, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this2.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this2, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this2.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this2.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this2.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this2, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this2.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this2, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''头对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"api\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"RequestApi\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData['':api''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, '':api'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"7\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function listTreeData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.tag == ''list-tree'' && scheme.__config__.locked) {\\r\\n      list.push(''parentTable: {},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"list-tree","label":"列表","tagIcon":"table","associatedField":"company_id","operator":"=","document":"http://www.umyui.com/umycomponent/uxGridApi","tableColumnsChildFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"searchList":[{"tag":"el-input","name":"id","javaType":"String","comments":"标识","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple","File","Image"]},{"tag":"el-input","name":"name","javaType":"String","comments":"名称","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple","File","Image"]}],"formId":123,"renderKey":123.52580554215363,"componentName":"ListTree123","locked":true,"field":{"id":"1331142598487023637","name":"company_id","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"公司","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","comments":"公司","filter":"{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}","isTreeTable":true,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"company","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":["NotNull(message=\\"公司不能为空\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":21,"isType":false}},"v-if":null,"v-show":null,"ref":"listTree","height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","v-on:current-change":"onChangeCurrentRow","v-on:row-click":"","title":"公司","field":"name","data-render":null,"align":"left","header-align":"center","show-overflow":true,":tree-config":{"children":"children","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""},":api":{"baseURL":"BASE_API","method":"post","url":"org/company/tree","params":[],"data":"return {\\n        params: [{\\"columnName\\":\\"id\\", \\"queryType\\": \\"=\\", \\"value\\": currentUser.company.id === \\"0\\" ? \\"\\":currentUser.company.id}]\\n      }","reqBefore":"config.headers[\\"X-Token\\"] = sessionStorage.getItem(\\"token\\")\\n    return config","reqResponse":"if (response.data.code == 100) {\\n          \\n\\treturn response.data.data\\n}","reqError":"console.error(error)"}}],"isInner":true,"formId":104,"renderKey":104.09993461490126,"componentName":"ElAside104","locked":true},"width":"200px","height":"60px","v-if":null,"v-show":"currentUser.company.id == 0"},{"__config__":{"elName":"ElMain","designLayout":"function containerChildLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var Tag = \\"\\".concat(config.tag);\\n    return h(Tag, {\\n      \\"attrs\\": {\\n        \\"width\\": element.width,\\n        \\"height\\": element.height\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": \\"width:100%; height:100%\\",\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var isContainer = Tag == ''el-container'';\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\">\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function mainLayout(h) {\\n    return h(\\"info\\", {\\n      \\"attrs\\": {\\n        \\"text\\": \\"暂无可定义属性！\\"\\n      }\\n    });\\n  }","tag":"el-main","children":[{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionTagLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''事件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:search''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":108,"renderKey":108.8740876840402,"componentName":"ElConditionTag108","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            list.push(h(\\"el-tooltip\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"effect\\": item.__config__.effect,\\r\\n                \\"content\\": item.__config__.content,\\r\\n                \\"placement\\": item.__config__.placement\\r\\n              }\\r\\n            }, [h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled,\\r\\n                \\"plain\\": item.plain == true ? true : false\\r\\n              }\\r\\n            }, [item.__slot__.default])]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"plain\\": item.plain == true ? true : false,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled\\r\\n              }\\r\\n            }, [item.__slot__.default]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\r\\n    var conf = element;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": conf,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode = h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        textAlign: element.align\\r\\n      }\\r\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\r\\n    var _this = this;\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__;\\r\\n      if (slot && slot.options && slot.options.length) {\\r\\n        slot.options.forEach(function (item) {\\r\\n          item.size = scheme.__config__.size;\\r\\n          var attrs = _this.getAttrs(item, isView);\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            var obj = {\\r\\n              effect: item.__config__.effect,\\r\\n              content: item.__config__.content,\\r\\n              placement: item.__config__.placement\\r\\n            };\\r\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\r\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\r\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\r\\n          } else {\\r\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\r\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\r\\n  var _this = this;\\r\\n  function addReg() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      __config__: {\\r\\n        tooltip: false,\\r\\n        // 是否增加按钮提示\\r\\n        effect: '''',\\r\\n        // 提示主题\\r\\n        content: '''',\\r\\n        // 提示内容\\r\\n        placement: '''' // 提示方向\\r\\n      },\\r\\n\\r\\n      __slot__: {\\r\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\r\\n      },\\r\\n      ''v-on:click'': '''',\\r\\n      type: ''primary'',\\r\\n      icon: null,\\r\\n      '':disabled'': undefined,\\r\\n      ''v-if'': undefined,\\r\\n      ''v-show'': undefined\\r\\n    });\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"对齐方式\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"按钮\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!item.__config__.locked && h(\\"span\\", {\\r\\n      \\"directives\\": [{\\r\\n        name: \\"show\\",\\r\\n        value: \\"activeData.__slot__.options.length > 2\\"\\r\\n      }],\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮文字\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__slot__.default,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮图标\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\r\\n      }\\r\\n    }), h(\\"IconInput\\", {\\r\\n      \\"model\\": {\\r\\n        value: item.icon,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"icon\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮类型\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"primary\\",\\r\\n        \\"value\\": \\"primary\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"success\\",\\r\\n        \\"value\\": \\"success\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"warning\\",\\r\\n        \\"value\\": \\"warning\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"danger\\",\\r\\n        \\"value\\": \\"danger\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"info\\",\\r\\n        \\"value\\": \\"info\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"text\\",\\r\\n        \\"value\\": \\"text\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"默认\\",\\r\\n        \\"value\\": \\"\\"\\r\\n      }\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"是否提示\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\r\\n      }\\r\\n    }), h(\\"el-switch\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"inactive-value\\": ''undefined''\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__config__.tooltip,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"activeData\\": item.__config__\\r\\n      }\\r\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"点击事件\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": item.__config__.locked,\\r\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-on:click''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-on:click'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''禁用条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item['':disabled''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, '':disabled'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''渲染条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-if''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-if'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-show''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-show'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addReg.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\r\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":109,"renderKey":109.1509349908936,"componentName":"ButtonGroup109","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"left"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":107,"renderKey":107.58076002599529,"componentName":"ElRow107","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\r\\n  var _this = this;\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.comments; // 说明\\r\\n      search.name = item.name; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1);\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.currentTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"className\\": \\"condition-panel\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入字段名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''字段名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入字段名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':conditionColumns''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.some(function (item) {\\r\\n      if (item.name == search.name) {\\r\\n        custProperties = item.childFields;\\r\\n        return true;\\r\\n      }\\r\\n    }) && custProperties.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.locked) return list;\\r\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\r\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\r\\n      scheme.__config__.searchList.forEach(function (search) {\\r\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\r\\n      });\\r\\n    }\\r\\n    list.push(''],'');\\r\\n    return list;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"code","javaType":"String","comments":"编号","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"ids","javaType":"String","comments":"全标识","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"sort","javaType":"String","comments":"排序","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"director","javaType":"Custom","comments":"总监","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1331142598487023634","apiPath":"admin/user"}},{"name":"manager","javaType":"Custom","comments":"经理","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1331142598487023634","apiPath":"admin/user"}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"Date","comments":"创建时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"Date","comments":"更新时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}}],"formId":119,"renderKey":119.46125606817425,"componentName":"ElConditionPanel119","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function queryFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单名'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":125,"renderKey":125.00035665077098,"componentName":"SingleInput125"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"autocomplete":"undefined"}],"id":"formItemQ","span":8,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":124,"renderKey":124.07111716886601,"componentName":"SingleInput124","field":{"id":"1331142598487023641","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":128}},"label":"名称","v-if":null,"v-show":null},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":140,"renderKey":140.1499295951124,"componentName":"SingleInput140"},"__slot__":{"prepend":"","append":""},"__vModel__":"code","v-model":"queryFormData.code",":maxLength":128,"placeholder":"请输入编号","prefix-icon":"","suffix-icon":"","clearable":true,"autocomplete":"undefined"}],"id":"formItemQ","span":8,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":139,"renderKey":139.85104251097468,"componentName":"SingleInput139","field":{"id":"1331142598487023638","name":"code","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":64,"isType":false,"isChecked":false}},"label":"编号","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":110,"renderKey":110.97133639001837,"componentName":"ElQueryForm110","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":113,"renderKey":113.06277679611655,"componentName":"Button113","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":112,"renderKey":112.585382606724,"componentName":"Button112","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":111,"renderKey":111.60273243483888,"componentName":"ElRow111","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function queryTableLayout(h) {\\r\\n  var _this = this;\\r\\n  // 注册监听， 设置树形配置\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表格名'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''最大高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高亮当前行'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展开后图标\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行变化\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''排序'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:sort-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列宽'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:header-dragend''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''单元格点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:cell-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":126,"renderKey":126.01558411953505,"componentName":"ElTableColumn126","field":{"id":"1331142598487023637","name":"company.name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"公司.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","comments":"公司","filter":"{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}","isTreeTable":true,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"company.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":["NotNull(message=\\"公司不能为空\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"tree-node":true,"resizable":true,"visible":false,"label":"公司.名称","prop":"company.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":127,"renderKey":127.99948012652727,"componentName":"ElTableColumn127","field":{"id":"1331142598487023638","name":"code","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":64}},"tree-node":true,"resizable":true,"visible":"undefined","label":"编号","prop":"code","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":130,"renderKey":130.60823204486638,"componentName":"ElTableColumn130","field":{"id":"1331142598487023641","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":128}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":128,"renderKey":128.82096245048587,"componentName":"ElTableColumn128","field":{"id":"1331142598487023639","name":"parent.name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"父级.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"org_department","currentTable":{"id":"1331142598487023634","name":"org_department","className":"Department","comments":"部门","isTreeTable":false,"delFlagExists":true,"columnList":[]},"javaField":"parent.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1290602453716598804","name":"org_department","scheme":{"name":"部门管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1290602453716598804","name":"org_department","scheme":{"name":"部门管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"Department","isNotBaseField":false,"simpleAnnotationList":["NotNull(message=\\"父级不能为空\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"tree-node":true,"resizable":true,"visible":false,"label":"上级部门","prop":"parent.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":131,"renderKey":131.09537899158428,"componentName":"ElTableColumn131","field":{"id":"1331142598487023642","name":"sort","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"排序","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"sort","childFields":[],"associatedField":"","defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":["Length(min=1, max=21, message=\\"排序长度必须介于 1 和 21 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"tree-node":true,"resizable":true,"visible":"undefined","label":"排序","prop":"sort","width":null,"min-width":"70px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":132,"renderKey":132.6469441830445,"componentName":"ElTableColumn132","field":{"id":"1331142598487023643","name":"director.name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"总监.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"director.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"tree-node":true,"resizable":true,"visible":"undefined","label":"总监","prop":"director.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":133,"renderKey":133.33172820932054,"componentName":"ElTableColumn133","field":{"id":"1331142598487023644","name":"manager.name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"经理.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"manager.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"tree-node":true,"resizable":true,"visible":"undefined","label":"经理","prop":"manager.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":134,"renderKey":134.2708371524494,"componentName":"ElTableColumn134","field":{"id":"1331142598487023645","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"associatedField":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":255}},"tree-node":true,"resizable":true,"visible":false,"label":"备注信息","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":135,"renderKey":135.3563553849746,"componentName":"ElTableColumn135","field":{"id":"1331142598487023646","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isEditableField":false,"decimalLenth":0,"dataLength":64}},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"140px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":136,"renderKey":136.89002109258578,"componentName":"ElTableColumn136","field":{"id":"1331142598487023647","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"创建时间","jdbcType":"datetime","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isEditableField":false,"decimalLenth":0,"dataLength":-1}},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"140px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":137,"renderKey":137.8675009491683,"componentName":"ElTableColumn137","field":{"id":"1331142598487023648","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isEditableField":false,"decimalLenth":0,"dataLength":64}},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"140px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":138,"renderKey":138.20033944329325,"componentName":"ElTableColumn138","field":{"id":"1331142598487023649","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"更新时间","jdbcType":"datetime","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isEditableField":false,"decimalLenth":0,"dataLength":-1}},"tree-node":true,"resizable":true,"visible":false,"label":"更新时间","prop":"updateDate","width":null,"min-width":"140px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\r\\n\\r\\n    // 以 slot 属性来存储\\r\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\r\\n    var conf = Object.assign({}, element, {\\r\\n      width: ''''\\r\\n    });\\r\\n    child = h(\\"render\\", {\\r\\n      \\"class\\": ''popover-item-container'',\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": conf\\r\\n      }\\r\\n    });\\r\\n    var slotChildren = element.__slot__.__config__.children;\\r\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\r\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\r\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\r\\n    var copyItem = itemBtns.children[1];\\r\\n    var DeleteItem = itemBtns.children.pop();\\r\\n    return h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, h(\\"div\\", {\\r\\n      \\"class\\": ''drawing-item-btns''\\r\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\r\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function popoverLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件ref'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入ref名称\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示位置'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\",\\r\\n      \\"value\\": \\"top\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-start\\",\\r\\n      \\"value\\": \\"top-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-end\\",\\r\\n      \\"value\\": \\"top-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\",\\r\\n      \\"value\\": \\"bottom\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-start\\",\\r\\n      \\"value\\": \\"bottom-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-end\\",\\r\\n      \\"value\\": \\"bottom-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\",\\r\\n      \\"value\\": \\"left\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-start\\",\\r\\n      \\"value\\": \\"left-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-end\\",\\r\\n      \\"value\\": \\"left-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\",\\r\\n      \\"value\\": \\"right\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-start\\",\\r\\n      \\"value\\": \\"right-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-end\\",\\r\\n      \\"value\\": \\"right-end\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"位置偏移\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''位置偏移'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.offset,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"添加类名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''添加类名'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''popper-class''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''触发方式'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.trigger,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"click\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"focus激活\\",\\r\\n      \\"value\\": \\"focus\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"hover激活\\",\\r\\n      \\"value\\": \\"hover\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''show'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-enter'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-enter''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''hide'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:hide''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-leave'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-leave''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"保存回调\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:save-column-view''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"全部显示\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-all-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"恢复默认\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-default-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":155,"renderKey":155.0786276773961,"componentName":"ViewColumnsSelect155","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":153,"renderKey":153.1526104647693,"componentName":"ElPopover153","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":154,"renderKey":154.98739397411754,"componentName":"IconButton154"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"提示信息","placement":"bottom","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":156,"renderKey":156.35827682959257,"componentName":"IconButton156","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.4610292263482,"componentName":"TableOptColumnHeader116","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.09155423020522,"componentName":"IconButton124","locked":true},"v-on:click":"onCreate(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"添加下级","placement":"top","icon-name":"el-icon-circle-plus-outline"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove && (!(scope.row.children) || scope.row.children.length <=0)","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":117,"renderKey":117.51577847407832,"componentName":"TableOptColumnMain117","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":115,"renderKey":115.61374949597628,"componentName":"ElTableOptColumn115","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":114,"renderKey":114.67388189984723,"componentName":"QueryTable114","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":" onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"children","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}}],"isInner":true,"formId":105,"renderKey":105.60729514277783,"componentName":"ElMain105","locked":true}}],"formId":103,"renderKey":103.39945702248502,"componentName":"ElContainer103","locked":true},"direction":"horizontal","v-if":null,"v-show":null}]},"maxFormId":140,"locked":true,"version":73,"code":"<template>\\n  <el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n    <history ref=\\"history\\" :bussObject=\\"curentRow\\"></history>\\n    <edit-form\\n      ref=\\"editForm\\"\\n      v-on:save-finished=\\"getList\\"\\n      v-on:before-load=\\"setLoad\\"\\n      v-on:after-load=\\"resetLoad\\"\\n      :permission=\\"permission\\"\\n    ></edit-form>\\n    <el-container direction=\\"horizontal\\" class=\\"dc-el-container_ElContainer\\">\\n      <el-aside width=\\"200px\\" height=\\"60px\\" v-show=\\"currentUser.company.id == 0\\">\\n        <el-row>\\n          <list-tree\\n            ref=\\"listTree\\"\\n            border\\n            v-on:current-change=\\"onChangeCurrentRow\\"\\n            title=\\"公司\\"\\n            field=\\"name\\"\\n            align=\\"left\\"\\n            header-align=\\"center\\"\\n            show-overflow\\n            :tree-config=\\"{\\n              children: ''children'',\\n              indent: 20,\\n              accordion: false,\\n              line: false,\\n              showIcon: true,\\n              iconOpen: '''',\\n              iconClose: ''''\\n            }\\"\\n            :api=\\"{\\n              baseURL: ''BASE_API'',\\n              method: ''post'',\\n              url: ''org/company/tree'',\\n              params: [],\\n              data: ''return {\\\\n        params: [{&quot;columnName&quot;:&quot;id&quot;, &quot;queryType&quot;: &quot;=&quot;, &quot;value&quot;: currentUser.company.id === &quot;0&quot; ? &quot;&quot;:currentUser.company.id}]\\\\n      }'',\\n              reqBefore: ''config.headers[&quot;X-Token&quot;] = sessionStorage.getItem(&quot;token&quot;)\\\\n    return config'',\\n              reqResponse: ''if (response.data.code == 100) {\\\\n          \\\\n\\\\treturn response.data.data\\\\n}'',\\n              reqError: ''console.error(error)''\\n            }\\"\\n            class=\\"dc-list-tree_ListTree\\"\\n          ></list-tree>\\n        </el-row>\\n      </el-aside>\\n      <el-main>\\n        <el-row>\\n          <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"start\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n            <el-col :span=\\"24\\">\\n              <query-tag\\n                ref=\\"queryTag\\"\\n                v-model=\\"queryEditObject\\"\\n                :moreParm=\\"moreParm\\"\\n                :routerId=\\"$route && $route.meta.routerId\\"\\n                :isQueryConditionPanel=\\"isQueryConditionPanel\\"\\n                v-on:queryTagPanel=\\"onQueryTagPanel\\"\\n                v-on:queryTagClick=\\"onQueryTagClick\\"\\n                v-on:search=\\"onSearch\\"\\n                class=\\"dc-query-tag_ElConditionTag\\"\\n              ></query-tag>\\n            </el-col>\\n            <el-col :span=\\"6\\">\\n              <div style=\\"text-align: left\\">\\n                <el-button-group class=\\"dc-el-button-group_ButtonGroup\\">\\n                  <el-tooltip effect=\\"dark\\" content=\\"搜索\\" placement=\\"top\\">\\n                    <el-button v-on:click=\\"onSearch\\" type=\\"primary\\" icon=\\"el-icon-search\\"></el-button>\\n                  </el-tooltip>\\n                  <el-tooltip effect=\\"dark\\" content=\\"重置\\" placement=\\"top\\">\\n                    <el-button\\n                      v-on:click=\\"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()\\"\\n                      type=\\"primary\\"\\n                      icon=\\"el-icon-refresh-right\\"\\n                    ></el-button>\\n                  </el-tooltip>\\n                  <el-tooltip effect=\\"dark\\" content=\\"更多\\" placement=\\"top\\">\\n                    <el-button\\n                      v-on:click=\\"onQueryConditionPanel(''query'')\\"\\n                      type=\\"primary\\"\\n                      icon=\\"el-icon-d-arrow-right\\"\\n                    ></el-button>\\n                  </el-tooltip>\\n                </el-button-group>\\n              </div>\\n            </el-col>\\n          </el-row>\\n          <query-condition-panel\\n            v-if=\\"isQueryConditionPanel\\"\\n            ref=\\"conditionPanel\\"\\n            :conditionColumns=\\"\\n              metadata.find((item) => {\\n                return item.type == ''main''\\n              }).conditionPanel\\n            \\"\\n            v-model=\\"moreParm\\"\\n            :routerId=\\"$route.meta.routerId\\"\\n            class=\\"dc-query-condition-panel_ElConditionPanel\\"\\n          ></query-condition-panel>\\n          <el-form\\n            ref=\\"queryForm\\"\\n            :model=\\"queryFormData\\"\\n            label-width=\\"100px\\"\\n            v-if=\\"!isQueryConditionPanel\\"\\n            class=\\"dc-el-form_ElQueryForm\\"\\n          >\\n            <el-row>\\n              <el-col :span=\\"8\\">\\n                <el-form-item prop=\\"name\\" label=\\"名称\\" class=\\"dc-el-form-item_SingleInput\\">\\n                  <el-input\\n                    v-model=\\"queryFormData.name\\"\\n                    :maxLength=\\"128\\"\\n                    placeholder=\\"请输入名称\\"\\n                    clearable\\n                    class=\\"dc-el-input_SingleInput\\"\\n                  ></el-input>\\n                </el-form-item>\\n              </el-col>\\n              <el-col :span=\\"8\\">\\n                <el-form-item prop=\\"code\\" label=\\"编号\\" class=\\"dc-el-form-item_SingleInput\\">\\n                  <el-input\\n                    v-model=\\"queryFormData.code\\"\\n                    :maxLength=\\"128\\"\\n                    placeholder=\\"请输入编号\\"\\n                    clearable\\n                    class=\\"dc-el-input_SingleInput\\"\\n                  ></el-input>\\n                </el-form-item>\\n              </el-col>\\n            </el-row>\\n          </el-form>\\n          <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"end\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n            <el-tooltip v-show=\\"permission.add\\" disabled class=\\"dc-el-tooltip_Button\\">\\n              <el-button type=\\"primary\\" icon=\\"el-icon-plus\\" v-on:click=\\"onCreate\\">添加</el-button>\\n            </el-tooltip>\\n          </el-row>\\n          <ux-grid\\n            column-key\\n            ref=\\"table\\"\\n            :data=\\"tableData\\"\\n            border\\n            v-on:sort-change=\\"onSortChange\\"\\n            v-on:header-dragend=\\"onWidthChange($refs.table)\\"\\n            :tree-config=\\"{\\n              children: ''children'',\\n              indent: 20,\\n              accordion: false,\\n              line: false,\\n              showIcon: true,\\n              iconOpen: '''',\\n              iconClose: ''''\\n            }\\"\\n            class=\\"dc-ux-grid_QueryTable\\"\\n          >\\n            <ux-table-column\\n              :field=\\"tableColumns[''126''].field\\"\\n              :title=\\"tableColumns[''126''].title\\"\\n              :width=\\"tableColumns[''126''].width\\"\\n              :visible=\\"tableColumns[''126''].visible\\"\\n              :params=\\"{ sortId: ''126'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''127''].field\\"\\n              :title=\\"tableColumns[''127''].title\\"\\n              :width=\\"tableColumns[''127''].width\\"\\n              :visible=\\"tableColumns[''127''].visible\\"\\n              :params=\\"{ sortId: ''127'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''130''].field\\"\\n              :title=\\"tableColumns[''130''].title\\"\\n              :width=\\"tableColumns[''130''].width\\"\\n              :visible=\\"tableColumns[''130''].visible\\"\\n              :params=\\"{ sortId: ''130'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''128''].field\\"\\n              :title=\\"tableColumns[''128''].title\\"\\n              :width=\\"tableColumns[''128''].width\\"\\n              :visible=\\"tableColumns[''128''].visible\\"\\n              :params=\\"{ sortId: ''128'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''131''].field\\"\\n              :title=\\"tableColumns[''131''].title\\"\\n              :width=\\"tableColumns[''131''].width\\"\\n              :visible=\\"tableColumns[''131''].visible\\"\\n              :params=\\"{ sortId: ''131'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"70px\\"\\n              align=\\"right\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''132''].field\\"\\n              :title=\\"tableColumns[''132''].title\\"\\n              :width=\\"tableColumns[''132''].width\\"\\n              :visible=\\"tableColumns[''132''].visible\\"\\n              :params=\\"{ sortId: ''132'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''133''].field\\"\\n              :title=\\"tableColumns[''133''].title\\"\\n              :width=\\"tableColumns[''133''].width\\"\\n              :visible=\\"tableColumns[''133''].visible\\"\\n              :params=\\"{ sortId: ''133'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''134''].field\\"\\n              :title=\\"tableColumns[''134''].title\\"\\n              :width=\\"tableColumns[''134''].width\\"\\n              :visible=\\"tableColumns[''134''].visible\\"\\n              :params=\\"{ sortId: ''134'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''135''].field\\"\\n              :title=\\"tableColumns[''135''].title\\"\\n              :width=\\"tableColumns[''135''].width\\"\\n              :visible=\\"tableColumns[''135''].visible\\"\\n              :params=\\"{ sortId: ''135'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"140px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''136''].field\\"\\n              :title=\\"tableColumns[''136''].title\\"\\n              :width=\\"tableColumns[''136''].width\\"\\n              :visible=\\"tableColumns[''136''].visible\\"\\n              :params=\\"{ sortId: ''136'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"140px\\"\\n              align=\\"right\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''137''].field\\"\\n              :title=\\"tableColumns[''137''].title\\"\\n              :width=\\"tableColumns[''137''].width\\"\\n              :visible=\\"tableColumns[''137''].visible\\"\\n              :params=\\"{ sortId: ''137'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"140px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''138''].field\\"\\n              :title=\\"tableColumns[''138''].title\\"\\n              :width=\\"tableColumns[''138''].width\\"\\n              :visible=\\"tableColumns[''138''].visible\\"\\n              :params=\\"{ sortId: ''138'' }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"140px\\"\\n              align=\\"right\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              title=\\"操作\\"\\n              :params=\\"{ sortId: ''115'' }\\"\\n              tree-node\\n              resizable\\n              width=\\"160px\\"\\n              min-width=\\"160px\\"\\n              fixed=\\"right\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              class=\\"dc-ux-table-column_ElTableOptColumn\\"\\n            >\\n              <template v-slot:header=\\"scope\\">\\n                <span>操作</span>\\n                <el-popover\\n                  ref=\\"popover\\"\\n                  width=\\"10\\"\\n                  trigger=\\"click\\"\\n                  placement=\\"bottom\\"\\n                  offset=\\"0\\"\\n                  class=\\"dc-el-popover_ElPopover\\"\\n                >\\n                  <view-columns-select\\n                    v-model=\\"tableColumns\\"\\n                    ref=\\"viewColumnsSelect\\"\\n                    v-on:save-column-view=\\"saveColumn($event, ''table'')\\"\\n                    v-on:show-all-column=\\"showAllColumn($event, ''table'')\\"\\n                    v-on:show-default-column=\\"showDefaultColumn(''table'')\\"\\n                    class=\\"dc-view-columns-select_ViewColumnsSelect\\"\\n                  ></view-columns-select>\\n                  <template slot=\\"reference\\">\\n                    <OperationIcon\\n                      type=\\"primary\\"\\n                      content=\\"提示信息\\"\\n                      placement=\\"bottom\\"\\n                      icon-name=\\"el-icon-tickets\\"\\n                    ></OperationIcon>\\n                  </template>\\n                </el-popover>\\n                <OperationIcon\\n                  v-on:click=\\"onExport(tableData)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.export\\"\\n                  content=\\"导出excel文件\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-download\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n              </template>\\n              <template slot-scope=\\"scope\\">\\n                <OperationIcon\\n                  v-on:click=\\"onView(scope)\\"\\n                  type=\\"info\\"\\n                  v-show=\\"permission.view\\"\\n                  content=\\"查看\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-view\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onCreate(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.add\\"\\n                  content=\\"添加下级\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-circle-plus-outline\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onEdit(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.edit\\"\\n                  content=\\"编辑\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-edit\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onCopy(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.add\\"\\n                  content=\\"复制\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-document\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onDelete(scope)\\"\\n                  type=\\"danger\\"\\n                  v-show=\\"permission.remove && (!scope.row.children || scope.row.children.length <= 0)\\"\\n                  content=\\"删除\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-delete\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onShowHistory(scope)\\"\\n                  type=\\"info\\"\\n                  v-show=\\"permission.view\\"\\n                  content=\\"历史记录\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-info\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n              </template>\\n            </ux-table-column>\\n          </ux-grid>\\n        </el-row>\\n      </el-main>\\n    </el-container>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { treeDepartment, deleteDepartment } from ''@/api/org/department''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from ''@/views/components/history''\\nimport EditForm from ''./form''\\nimport QueryTag from ''@/views/components/queryTag''\\nimport QueryConditionPanel from ''@/views/components/queryConditionPanel''\\nimport ViewColumnsSelect from ''@/views/components/DcViewColumnsSelect''\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\n    EditForm,\\n    QueryTag,\\n    QueryConditionPanel,\\n    ViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      parentTable: {},\\n      queryFormData: {\\n        name: '''', // 名称\\n        code: '''' // 编号\\n      },\\n      tableData: [],\\n      // 查询表格列头\\n      tableColumns: {\\n        126: {\\n          title: ''公司.名称'',\\n          field: ''company.name'',\\n          visible: false,\\n          order: 0\\n        },\\n        127: {\\n          title: ''编号'',\\n          field: ''code'',\\n          visible: true,\\n          order: 1\\n        },\\n        130: {\\n          title: ''名称'',\\n          field: ''name'',\\n          visible: true,\\n          order: 2\\n        },\\n        128: {\\n          title: ''上级部门'',\\n          field: ''parent.name'',\\n          visible: false,\\n          order: 3\\n        },\\n        131: {\\n          title: ''排序'',\\n          field: ''sort'',\\n          visible: true,\\n          order: 4\\n        },\\n        132: {\\n          title: ''总监'',\\n          field: ''director.name'',\\n          visible: true,\\n          order: 5\\n        },\\n        133: {\\n          title: ''经理'',\\n          field: ''manager.name'',\\n          visible: true,\\n          order: 6\\n        },\\n        134: {\\n          title: ''备注信息'',\\n          field: ''remarks'',\\n          visible: false,\\n          order: 7\\n        },\\n        135: {\\n          title: ''创建者'',\\n          field: ''createBy'',\\n          visible: false,\\n          order: 8\\n        },\\n        136: {\\n          title: ''创建时间'',\\n          field: ''createDate'',\\n          visible: false,\\n          order: 9\\n        },\\n        137: {\\n          title: ''更新者'',\\n          field: ''updateBy'',\\n          visible: false,\\n          order: 10\\n        },\\n        138: {\\n          title: ''更新时间'',\\n          field: ''updateDate'',\\n          visible: false,\\n          order: 11\\n        },\\n        115: {\\n          title: ''操作'',\\n          width: ''160px'',\\n          visible: true,\\n          order: 12\\n        }\\n      },\\n      // 选项变量\\n\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 73,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''', // 排序字段名\\n        order: '''' // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1220000000000000014'',\\n      schemeId: ''1210000000000000011''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n\\n      if (validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      this.search.params.push({\\n        columnName: ''company_id'',\\n        queryType: ''='',\\n        value: this.parentTable.id\\n      })\\n\\n      if (this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        this.search.params.push({\\n          columnName: ''name'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''code'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.code) ? this.queryFormData.code : null\\n        })\\n      }\\n      // 数据权限: 部门org_department\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      treeDepartment(this.search)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.tableData = responseData.data ? responseData.data : []\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onSearch() {\\n      if (this.isQueryConditionPanel) {\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate((valid) => {\\n          if (valid) {\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    async pageInit() {\\n      this.initOptions(this.queryModel)\\n      this.setLoad()\\n      listResourcePermission(this.$route.meta.routerId)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.permission.view = responseData.data.find((item) => {\\n              return item.permission === ''department:read''\\n            })\\n            this.permission.export = responseData.data.find((item) => {\\n              return item.permission === ''department:export''\\n            })\\n\\n            this.permission.add = responseData.data.find((item) => {\\n              return item.permission === ''department:create''\\n            })\\n            this.permission.edit = responseData.data.find((item) => {\\n              return item.permission === ''department:update''\\n            })\\n            this.permission.remove = responseData.data.find((item) => {\\n              return item.permission === ''department:delete''\\n            })\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate(scope) {\\n      if (validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      let row = {\\n        company: {\\n          id: this.parentTable.id,\\n\\n          name: this.parentTable.name\\n        }\\n      }\\n      this.$refs.editForm.$emit(''openAddDialog'', scope.row, row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      })\\n        .then(() => {\\n          this.setLoad()\\n          deleteDepartment(scope.row)\\n            .then((responseData) => {\\n              if (responseData.code == 100) {\\n                this.getList()\\n                this.showMessage({\\n                  type: ''success'',\\n                  msg: ''删除成功''\\n                })\\n              } else {\\n                this.showMessage(responseData)\\n              }\\n              this.resetLoad()\\n            })\\n            .catch((error) => {\\n              this.outputError(error)\\n            })\\n        })\\n        .catch(() => {})\\n    },\\n\\n    onChangeCurrentRow(currentRow, oldCurrentRow) {\\n      if (currentRow != oldCurrentRow) {\\n        this.parentTable = currentRow\\n        this.initOptions(this.queryModel)\\n        this.onSearch()\\n      }\\n    },\\n    onSortChange(orderby) {\\n      if (validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {}\\n  },\\n  watch: {},\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/org//department","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      editFormData: this.initEditData(),\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n          if(validatenull(form.parent)) {\\n            form.parent = {id: null}\\n          }\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // 字段对应表上filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onParentChange() {\\n      let nodes = this.$refs[''parentCascader''].getCheckedNodes()\\n      if(nodes.length > 0) {\\n        if(nodes[0] && nodes[0].data && nodes[0].data.children) {\\n          this.editFormData.sort = (nodes[0].data.children.length + 1) * 10000\\n        } else if(nodes[0]){\\n            this.editFormData.sort = 10000\\n        } else {\\n          this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n        }\\n      }else{\\n        this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n      }\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    parentOptions(newVal, oldVal) {\\n      if(newVal != oldVal && this.action == ''add'' ) {\\n        this.$nextTick(() => {\\n          this.onParentChange()\\n        })\\n      }\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function(thisParent, parentTable) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {...this.initEditData(thisParent), ...parentTable}\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n    //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\r\\n          list.push(h(\\"el-button\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"type\\": item.type,\\r\\n              \\"size\\": conf.__config__.size,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }, [item.__slot__.default]));\\r\\n        });\\r\\n        if (conf.__config__.footerAlign != ''null'') {\\r\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [h(\\"div\\", {\\r\\n            \\"style\\": footerAlign\\r\\n          }, [list])]);\\r\\n        } else {\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [list]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": \\"overflow: hidden\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    // 设计模式下显示对话框\\r\\n    var confDesigner = Object.assign({\\r\\n      visible: true,\\r\\n      modal: false,\\r\\n      class: ''el-dialog__wrapper_cust'',\\r\\n      width: element.width\\r\\n    }, element);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": confDesigner,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\r\\n    var _this2 = this;\\r\\n    var config = scheme.__config__;\\r\\n    var btnWrapper = function btnWrapper() {\\r\\n      // 获取dialog组件 底部按钮数组\\r\\n      var list = [];\\r\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\r\\n        item.size = scheme.__config__.size;\\r\\n        var attrs = _this2.getAttrs(item, isView);\\r\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\r\\n        list.push(str);\\r\\n      });\\r\\n      var style = '''';\\r\\n      if (config.footerAlign) {\\r\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\r\\n      }\\r\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\r\\n      return list.length > 0 ? btnWrapperStr : '''';\\r\\n    };\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\r\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\r\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\r\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\r\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function dialogLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否是全屏'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fullscreen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''open'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:open''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"close\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''close'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:close''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"底部按钮\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''按钮布局'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.footerAlign,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 对话框属性变量'');\\r\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\r\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\r\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\r\\n    list.push(''},'');\\r\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\r\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n    });\\r\\n    return list;\\r\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field && scheme.__config__.field.associatedField ? scheme.__config__.field.associatedField : \\"id\\"}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field.associatedField}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"CascaderInput","label":"级联选择","tag":"el-form-item","tagIcon":"cascader","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"CascaderInput","label":"级联选择","url":"https://www.fastmock.site/mock/f8d7a54fb1e60561e2f720d5a810009d/fg/cascaderList","method":"get","dataKey":"list","showLabel":true,"tag":"el-cascader","tagIcon":"cascader","designLayout":"function generalFieldLayout(h, element, index, parent) {\\r\\n    var _this = this;\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function CascaderData(scheme, parent, isView, loop, filters) {\\r\\n    var _this2 = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"// \\".concat(parent.label));\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this2.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function CascaderOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme['':options''], \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme['':options''], \\": [\\"));\\r\\n      var arr = loopOptions(scheme.__config__.options);\\r\\n      list.push.apply(list, arr);\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","span":24,"options":[{"id":1,"value":"1","label":"选项1","children":[{"id":2,"value":"2","label":"选项1-1"}]}],"apiFn":"treeCompany","apiFrom":"@/api/org/company.js","optionParams":"{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}","document":"https://element.eleme.cn/#/zh-CN/component/cascader","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":104,"renderKey":104.71021757164186,"componentName":"CascaderInput104"},"ref":"cascader104","__vModel__":"company",":options":"companyOptions","v-model":"editFormData.company.id",":style":{"width":"100%"},"placeholder":"请选择公司",":props":{"label":"name","value":"id","children":"children","checkStrictly":true,"emitPath":false},"show-all-levels":"undefined","clearable":true,"filterable":true,"separator":"/","v-on:change":"",":disabled":"true"}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemCascaderLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__config__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.name === ''parent_id'') {\\r\\n      // 上级选择时，初始化级联框ref值\\r\\n      this.activeData.__config__.children[0].ref = ''parentCascader'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    if (this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'')) {\\r\\n      this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    }\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-cascader\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"options\\": selectOptions,\\r\\n      \\"separator\\": this.activeData.__config__.children[0].separator,\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''ref'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"级联ref\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入ref值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-all-levels'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展示全路径\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''show-all-levels'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''show-all-levels''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''show-all-levels'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''checkStrictly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"任选层级\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''checkStrictly'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].checkStrictly,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"checkStrictly\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''emitPath'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"返回值数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''emitPath'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].emitPath,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"emitPath\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''separator'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项分隔符\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''separator'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入选项分隔符\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].separator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"separator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], '':options'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0]::options\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':options'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':options''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':options'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"TreeNodeDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.options,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"options\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入标签键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''value'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入值键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].value,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"value\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''children'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"子级键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入子级键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''v-on:change'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"change事件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-on:change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"级联框change事件\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''v-on:change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''v-on:change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.29306169150296,"componentName":"CascaderInput103","field":{"id":"1331142598487023637","name":"company_id","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"公司","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","comments":"公司","filter":"{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}","isTreeTable":true,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"company","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":["NotNull(message=\\"公司不能为空\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"label":"所属公司","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"所属公司不能为空\\", trigger: \\"change\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":106,"renderKey":106.51723883057073,"componentName":"SingleInput106"},"__slot__":{"prepend":"","append":""},"__vModel__":"code","v-model":"editFormData.code",":maxLength":64,"placeholder":"请输入编号","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":105,"renderKey":105.98235833909246,"componentName":"SingleInput105","field":{"id":"1331142598487023638","name":"code","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":64}},"label":"编号","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"编号不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":110,"renderKey":110.12767327735575,"componentName":"SingleInput110"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":109,"renderKey":109.4962410697505,"componentName":"SingleInput109","field":{"id":"1331142598487023641","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"decimalLenth":0,"dataLength":128}},"label":"名称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field && scheme.__config__.field.associatedField ? scheme.__config__.field.associatedField : \\"id\\"}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field.associatedField}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"CascaderInput","label":"级联选择","tag":"el-form-item","tagIcon":"cascader","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"CascaderInput","label":"级联选择","url":"https://www.fastmock.site/mock/f8d7a54fb1e60561e2f720d5a810009d/fg/cascaderList","method":"get","dataKey":"list","showLabel":true,"tag":"el-cascader","tagIcon":"cascader","designLayout":"function generalFieldLayout(h, element, index, parent) {\\r\\n    var _this = this;\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function CascaderData(scheme, parent, isView, loop, filters) {\\r\\n    var _this2 = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      if (field.name == ''parent_id'') {\\r\\n        list.push(\\"// \\".concat(parent.label));\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n        field.childFields && field.childFields.forEach(function (child) {\\r\\n          if (child.value.indexOf(''.'') === -1) {\\r\\n            list.push(\\"\\".concat(_this2.camelCase(child.value, \\"_\\"), \\": validatenull(This) || validatenull(This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\") ? null : This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\",\\"));\\r\\n          } else {\\r\\n            list.push(\\"\\".concat(_this2.camelCase(child.value.substring(0, child.value.indexOf(''.'')), \\"_\\"), \\": {''\\").concat(child.value.substring(child.value.indexOf(''.'') + 1, child.value.length), \\"'': validatenull(This) || validatenull(This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\") ? null : This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\"},\\"));\\r\\n          }\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      } else {\\r\\n        list.push(\\"// \\".concat(parent.label));\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n        field.childFields && field.childFields.forEach(function (child) {\\r\\n          list.push(\\"\\".concat(_this2.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function CascaderOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme['':options''], \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme['':options''], \\": [\\"));\\r\\n      var arr = loopOptions(scheme.__config__.options);\\r\\n      list.push.apply(list, arr);\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","span":24,"options":[{"id":1,"value":"1","label":"选项1","children":[{"id":2,"value":"2","label":"选项1-1"}]}],"apiFn":"treeDepartment","apiFrom":"@/api/org/department.js","optionParams":"{ ''columnName'': ''company_id'', ''queryType'': ''='', ''value'': this.editFormData.company ? this.editFormData.company.id : null },\\n { ''columnName'': ''ids'', ''queryType'': ''not like'', ''value'': this.editFormData.id ? this.editFormData.id : null }","document":"https://element.eleme.cn/#/zh-CN/component/cascader","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":132,"renderKey":132.8867930188164,"componentName":"CascaderInput132","optionLabel":"","optionValue":""},"ref":"parentCascader","__vModel__":"parent",":options":"parentOptions","v-model":"editFormData.parent.id",":style":{"width":"100%"},"placeholder":"请选择父级",":props":{"label":"name","value":"id","children":"children","checkStrictly":true,"emitPath":false},"show-all-levels":"undefined","clearable":true,"filterable":true,"separator":"/","v-on:change":"",":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemCascaderLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__config__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.name === ''parent_id'') {\\r\\n      // 上级选择时，初始化级联框ref值\\r\\n      this.activeData.__config__.children[0].ref = ''parentCascader'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    if (this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'')) {\\r\\n      this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    }\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-cascader\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"options\\": selectOptions,\\r\\n      \\"separator\\": this.activeData.__config__.children[0].separator,\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''ref'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"级联ref\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入ref值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-all-levels'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展示全路径\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''show-all-levels'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''show-all-levels''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''show-all-levels'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''checkStrictly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"任选层级\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''checkStrictly'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].checkStrictly,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"checkStrictly\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''emitPath'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"返回值数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''emitPath'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].emitPath,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"emitPath\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''separator'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项分隔符\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''separator'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入选项分隔符\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].separator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"separator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], '':options'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0]::options\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':options'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':options''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':options'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"TreeNodeDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.options,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"options\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入标签键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''value'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入值键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].value,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"value\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''children'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"子级键名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入子级键名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':props''].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''v-on:change'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"change事件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-on:change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"级联框change事件\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''v-on:change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''v-on:change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":131,"renderKey":131.95588315999333,"componentName":"CascaderInput131","field":{"id":"1331142598487023639","name":"parent_id","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-06 10:55:53","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"父级","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"org_department","currentTable":{"id":"1331142598487023634","name":"org_department","className":"Department","comments":"部门","isTreeTable":false,"delFlagExists":true,"columnList":[]},"javaField":"parent","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1290602453716598804","name":"org_department","scheme":{"name":"部门管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1290602453716598804","name":"org_department","scheme":{"name":"部门管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isNotBaseField":false,"isEditableField":true,"simpleJavaType":"Department","simpleAnnotationList":["NotNull(message=\\"父级不能为空\\")"],"decimalLenth":0,"dataLength":21,"isType":false,"isChecked":false}},"label":"上级部门","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"0","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":134,"renderKey":134.25776821138285,"componentName":"SingleInput134"},"__slot__":{"prepend":"","append":""},"__vModel__":"sort","v-model":"editFormData.sort",":maxLength":21,"placeholder":"请输入排序","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":133,"renderKey":133.21853555664592,"componentName":"SingleInput133","field":{"id":"1331142598487023642","name":"sort","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-06 10:55:53","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"排序","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"sort","childFields":[],"associatedField":"","defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","decimalLenth":0,"dataLength":21,"simpleAnnotationList":["Length(min=1, max=21, message=\\"排序长度必须介于 1 和 21 之间\\")"],"simpleJavaType":"String","isEditableField":true,"isNotBaseField":false,"isType":false,"isChecked":false}},"label":"排序","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"排序不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"{ ''columnName'': ''department_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }","loopArray":"directorOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":114,"renderKey":114.7418399104924,"componentName":"SelectInput114"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"director","v-model":"editFormData.director",":style":{"width":"100%"},"placeholder":"请选择总监","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":113,"renderKey":113.9400094549525,"componentName":"SelectInput113","field":{"id":"1331142598487023643","name":"director","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"总监","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"director","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"label":"总监","v-if":"action != \\"add\\"","v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"{ ''columnName'': ''department_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }","loopArray":"managerOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":116,"renderKey":116.4621018061374,"componentName":"SelectInput116"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"manager","v-model":"editFormData.manager",":style":{"width":"100%"},"placeholder":"请选择经理","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":115,"renderKey":115.13966493986027,"componentName":"SelectInput115","field":{"id":"1331142598487023644","name":"manager","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"经理","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"manager","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"Custom","isNotBaseField":true,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":21}},"label":"经理","v-if":"action != \\"add\\"","v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":118,"renderKey":118.28729193886645,"componentName":"MutilpleInput118"},"__vModel__":"remarks","v-model":"editFormData.remarks","type":"textarea","placeholder":"请输入备注信息","rows":2,":maxLength":255,":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val !== -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","formId":117,"renderKey":117.29366101260563,"componentName":"MutilpleInput117","field":{"id":"1331142598487023645","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-05 19:17:30","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:31","dcTable":{"id":"1331142598487023634","name":"org_department","scheme":{"name":"部门管理.v2","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Department","isTreeTable":true,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"associatedField":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"simpleAnnotationList":[],"isEditableField":true,"decimalLenth":0,"dataLength":255}},"label":"备注信息","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.8584622285258,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.72371527440953,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"部门","v-loading":"loading","width":"30%","fullscreen":false}]},"maxFormId":134,"locked":true,"version":73,"code":"<template>\\n  <el-row class=\\"dc-container\\">\\n    <el-dialog\\n      v-on:open=\\"onDialogOpen\\"\\n      v-on:close=\\"onDialogClose\\"\\n      v-loading=\\"loading\\"\\n      width=\\"30%\\"\\n      :fullscreen=\\"false\\"\\n      :title=\\"dialogProps.title\\"\\n      :visible.sync=\\"dialogProps.visible\\"\\n      :close-on-click-modal=\\"false\\"\\n      class=\\"dc-el-dialog_ElDialog\\"\\n    >\\n      <el-row>\\n        <el-form\\n          ref=\\"editForm\\"\\n          :model=\\"editFormData\\"\\n          label-width=\\"100px\\"\\n          :disabled=\\"action == ''view''\\"\\n          class=\\"dc-el-form_ElEditForm\\"\\n        >\\n          <el-row>\\n            <el-form-item\\n              prop=\\"company.id\\"\\n              label=\\"所属公司\\"\\n              :rules=\\"[{ required: true, message: ''所属公司不能为空'', trigger: ''change'' }]\\"\\n              class=\\"dc-el-form-item_CascaderInput\\"\\n            >\\n              <el-cascader\\n                ref=\\"cascader104\\"\\n                :options=\\"companyOptions\\"\\n                v-model=\\"editFormData.company.id\\"\\n                :style=\\"{ width: ''100%'' }\\"\\n                placeholder=\\"请选择公司\\"\\n                :props=\\"{ label: ''name'', value: ''id'', children: ''children'', checkStrictly: true, emitPath: false }\\"\\n                clearable\\n                filterable\\n                separator=\\"/\\"\\n                :disabled=\\"true\\"\\n                class=\\"dc-el-cascader_CascaderInput\\"\\n              ></el-cascader>\\n            </el-form-item>\\n            <el-form-item\\n              prop=\\"code\\"\\n              label=\\"编号\\"\\n              :rules=\\"[{ required: true, message: ''编号不能为空'', trigger: ''blur'' }]\\"\\n              class=\\"dc-el-form-item_SingleInput\\"\\n            >\\n              <el-input\\n                v-model=\\"editFormData.code\\"\\n                :maxLength=\\"64\\"\\n                placeholder=\\"请输入编号\\"\\n                clearable\\n                autocomplete=\\"new-password\\"\\n                class=\\"dc-el-input_SingleInput\\"\\n              ></el-input>\\n            </el-form-item>\\n            <el-form-item\\n              prop=\\"name\\"\\n              label=\\"名称\\"\\n              :rules=\\"[{ required: true, message: ''名称不能为空'', trigger: ''blur'' }]\\"\\n              class=\\"dc-el-form-item_SingleInput\\"\\n            >\\n              <el-input\\n                v-model=\\"editFormData.name\\"\\n                :maxLength=\\"128\\"\\n                placeholder=\\"请输入名称\\"\\n                clearable\\n                class=\\"dc-el-input_SingleInput\\"\\n              ></el-input>\\n            </el-form-item>\\n            <el-form-item prop=\\"parent.id\\" label=\\"上级部门\\" class=\\"dc-el-form-item_CascaderInput\\">\\n              <el-cascader\\n                ref=\\"parentCascader\\"\\n                :options=\\"parentOptions\\"\\n                v-model=\\"editFormData.parent.id\\"\\n                :style=\\"{ width: ''100%'' }\\"\\n                placeholder=\\"请选择父级\\"\\n                :props=\\"{ label: ''name'', value: ''id'', children: ''children'', checkStrictly: true, emitPath: false }\\"\\n                clearable\\n                filterable\\n                separator=\\"/\\"\\n                class=\\"dc-el-cascader_CascaderInput\\"\\n              ></el-cascader>\\n            </el-form-item>\\n            <el-form-item\\n              prop=\\"sort\\"\\n              label=\\"排序\\"\\n              :rules=\\"[{ required: true, message: ''排序不能为空'', trigger: ''blur'' }]\\"\\n              class=\\"dc-el-form-item_SingleInput\\"\\n            >\\n              <el-input\\n                v-model=\\"editFormData.sort\\"\\n                :maxLength=\\"21\\"\\n                placeholder=\\"请输入排序\\"\\n                clearable\\n                class=\\"dc-el-input_SingleInput\\"\\n              ></el-input>\\n            </el-form-item>\\n            <el-form-item prop=\\"director\\" label=\\"总监\\" v-if=\\"action != ''add''\\" class=\\"dc-el-form-item_SelectInput\\">\\n              <el-select\\n                v-model=\\"editFormData.director\\"\\n                :style=\\"{ width: ''100%'' }\\"\\n                placeholder=\\"请选择总监\\"\\n                clearable\\n                value-key=\\"id\\"\\n                filterable\\n                class=\\"dc-el-select_SelectInput\\"\\n              >\\n                <el-option v-for=\\"(item, index) in directorOptions\\" :key=\\"index\\" :label=\\"item.name\\" :value=\\"item\\"></el-option>\\n              </el-select>\\n            </el-form-item>\\n            <el-form-item prop=\\"manager\\" label=\\"经理\\" v-if=\\"action != ''add''\\" class=\\"dc-el-form-item_SelectInput\\">\\n              <el-select\\n                v-model=\\"editFormData.manager\\"\\n                :style=\\"{ width: ''100%'' }\\"\\n                placeholder=\\"请选择经理\\"\\n                clearable\\n                value-key=\\"id\\"\\n                filterable\\n                class=\\"dc-el-select_SelectInput\\"\\n              >\\n                <el-option v-for=\\"(item, index) in managerOptions\\" :key=\\"index\\" :label=\\"item.name\\" :value=\\"item\\"></el-option>\\n              </el-select>\\n            </el-form-item>\\n            <el-form-item prop=\\"remarks\\" label=\\"备注信息\\" class=\\"dc-el-form-item_MutilpleInput\\">\\n              <el-input\\n                v-model=\\"editFormData.remarks\\"\\n                type=\\"textarea\\"\\n                placeholder=\\"请输入备注信息\\"\\n                rows=\\"2\\"\\n                :maxLength=\\"255\\"\\n                class=\\"dc-el-input_MutilpleInput\\"\\n              ></el-input>\\n            </el-form-item>\\n          </el-row>\\n        </el-form>\\n      </el-row>\\n      <span slot=\\"footer\\" class=\\"dialog-footer\\">\\n        <el-button v-on:click=\\"onSubmit\\" type=\\"primary\\" v-show=\\"action != ''view''\\">保存</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action != ''view''\\">取消</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action == ''view''\\">关闭</el-button>\\n      </span>\\n    </el-dialog>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\nimport { treeCompany } from ''@/api/org/company.js''\\nimport { treeDepartment } from ''@/api/org/department.js''\\nimport { listUserAll } from ''@/api/admin/user.js''\\n/** 根据用户界面配置import组件 结束 */\\nimport { getDepartmentById, saveDepartment } from ''@/api/org/department''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''department-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      editFormData: this.initEditData(),\\n      /** 根据用户界面配置生成data数据 开始 */\\n      // 对话框属性变量\\n      dialogProps: {\\n        visible: false,\\n        title: ''部门''\\n      },\\n      dialogTitle: ''部门'',\\n      // 选项变量\\n      // 所属公司选项\\n      companyOptions: [],\\n      // 上级部门选项\\n      parentOptions: [],\\n      // 总监选项\\n      directorOptions: [],\\n      // 经理选项\\n      managerOptions: [],\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    onSubmit() {\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      })\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      saveDepartment(this.editFormData)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.dialogProps.visible = false\\n            this.showMessage({\\n              type: ''success'',\\n              msg: ''保存成功''\\n            })\\n            this.$emit(''save-finished'')\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n        getDepartmentById(id)\\n          .then((responseData) => {\\n            let form = {}\\n            if (responseData.code == 100) {\\n              form = responseData.data\\n              if (validatenull(form.parent)) {\\n                form.parent = {\\n                  id: null\\n                }\\n              }\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n            resolve(form)\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n\\n    listCompanyOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // 字段对应表上filter条件\\n      search_List.params.push.apply(search_List.params, [\\n        {\\n          columnName: ''id'',\\n          queryType: ''='',\\n          value: currentUser.company.id == ''0'' ? '''' : currentUser.company.id\\n        }\\n      ])\\n\\n      // 数据权限: 公司org_company\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1287908822026887245'')\\n\\n      treeCompany(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.companyOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    listParentOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // 字段对应表上filter条件\\n      search_List.params.push.apply(search_List.params, [\\n        {\\n          columnName: ''company_id'',\\n          queryType: ''='',\\n          value: this.editFormData.company ? this.editFormData.company.id : null\\n        },\\n        {\\n          columnName: ''ids'',\\n          queryType: ''not like'',\\n          value: this.editFormData.id ? this.editFormData.id : null\\n        }\\n      ])\\n\\n      // 数据权限: 部门org_department\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1331142598487023634'')\\n\\n      treeDepartment(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.parentOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    listDirectorOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // 字段对应表上filter条件\\n      search_List.params.push.apply(search_List.params, [\\n        {\\n          columnName: ''department_id'',\\n          queryType: ''='',\\n          value: this.editFormData.id ? this.editFormData.id : null\\n        }\\n      ])\\n\\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1289059804542828547'')\\n\\n      listUserAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.directorOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    listManagerOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // 字段对应表上filter条件\\n      search_List.params.push.apply(search_List.params, [\\n        {\\n          columnName: ''department_id'',\\n          queryType: ''='',\\n          value: this.editFormData.id ? this.editFormData.id : null\\n        }\\n      ])\\n\\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1289059804542828547'')\\n\\n      listUserAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.managerOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n\\n      this.listCompanyOptions()\\n\\n      this.listParentOptions()\\n\\n      this.listDirectorOptions()\\n\\n      this.listManagerOptions()\\n    },\\n    onParentChange() {\\n      let nodes = this.$refs[''parentCascader''].getCheckedNodes()\\n      if (nodes.length > 0) {\\n        if (nodes[0] && nodes[0].data && nodes[0].data.children) {\\n          this.editFormData.sort = (nodes[0].data.children.length + 1) * 10000\\n        } else if (nodes[0]) {\\n          this.editFormData.sort = 10000\\n        } else {\\n          this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n        }\\n      } else {\\n        this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n      }\\n    },\\n    initEditData(This) {\\n      return {\\n        // 所属公司\\n        company: {\\n          id: null,\\n          name: null\\n        },\\n        code: '''', // 编号\\n        name: '''', // 名称\\n        // 上级部门\\n        parent: {\\n          id: validatenull(This) || validatenull(This.id) ? null : This.id,\\n          name: validatenull(This) || validatenull(This.name) ? null : This.name\\n        },\\n        sort:\\n          This && This.children\\n            ? (This.children.length + 1) * 10000\\n            : this.parentOptions\\n            ? (this.parentOptions.length + 1) * 10000\\n            : 10000,\\n        director: {\\n          id: null,\\n          name: null\\n        },\\n        manager: {\\n          id: null,\\n          name: null\\n        },\\n        remarks: '''' // 备注信息\\n      }\\n    }\\n  },\\n  watch: {\\n    parentOptions(newVal, oldVal) {\\n      if (newVal != oldVal && this.action == ''add'') {\\n        this.$nextTick(() => {\\n          this.onParentChange()\\n        })\\n      }\\n    }\\n  },\\n  mounted: function () {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function (id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function (id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function (thisParent, parentTable) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(thisParent),\\n          ...parentTable\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function (id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null //把id设置为空，添加一个新的\\n\\n        this.dialogProps.visible = true\\n      })\\n    })\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/org//department","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n          {{else if item.__config__.elName == ''ListTree'' && item.__config__.locked}}\\r\\n            const parentConditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    },\\r\\n    <% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ListTree'' && item.__config__.locked}}\\r\\n            {{if item.__config__.field}}\\r\\n              {{if item.__config__.field.javaType && item.__config__.field.javaType.value == ''Custom''}}\\r\\n  {\\r\\n    id: ''{{item.__config__.field.customType.id}}'',\\r\\n    schemeId: ''{{item.__config__.field.customType.scheme.id}}'',\\r\\n    name: ''{{item.__config__.field.customType.comments}}'',\\r\\n    conditionPanel: parentConditions,\\r\\n    type: ''parent'',\\r\\n    dataRules:[]\\r\\n  },\\r\\n              {{else if item.__config__.field.javaType && item.__config__.field.javaType.value == ''This''}}\\r\\n  {\\r\\n    id: ''{{item.__config__.field.currentTable.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{item.__config__.field.currentTable.comments}}'',\\r\\n    conditionPanel: parentConditions,\\r\\n    type: ''parent'',\\r\\n    dataRules:[]\\r\\n  }, \\r\\n              {{/if}}\\r\\n            {{/if}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":73,"code":"const parentConditions = [\\n  {\\n    name: ''id'',\\n    comments: ''标识'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''名称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  }\\n]\\n\\nconst conditions = [\\n  {\\n    name: ''code'',\\n    comments: ''编号'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''ids'',\\n    comments: ''全标识'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''名称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''sort'',\\n    comments: ''排序'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''director'',\\n    comments: ''总监'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: { labelField: ''name'', className: ''User'', fieldId: ''id'', tableId: ''1331142598487023634'', apiPath: ''admin/user'' }\\n  },\\n\\n  {\\n    name: ''manager'',\\n    comments: ''经理'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: { labelField: ''name'', className: ''User'', fieldId: ''id'', tableId: ''1331142598487023634'', apiPath: ''admin/user'' }\\n  },\\n\\n  {\\n    name: ''remarks'',\\n    comments: ''备注信息'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_by'',\\n    comments: ''创建者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_date'',\\n    comments: ''创建时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  },\\n\\n  {\\n    name: ''update_by'',\\n    comments: ''更新者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''update_date'',\\n    comments: ''更新时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  }\\n]\\n\\nconst metadata = [\\n  {\\n    id: ''1220000000000000014'',\\n    schemeId: ''1210000000000000011'',\\n    name: ''部门'',\\n    conditionPanel: conditions,\\n    type: ''main'',\\n    dataRules: []\\n  },\\n\\n  {\\n    id: ''1287908822026887245'',\\n    schemeId: '''',\\n    name: ''公司'',\\n    conditionPanel: parentConditions,\\n    type: ''parent'',\\n    dataRules: []\\n  }\\n]\\nexport default metadata\\n"}],"version":73}', '', '超级管理员(super)', '2022-12-12 16:07:53', '超级管理员(super)', '2023-03-23 14:50:50', '0');
INSERT INTO dc_clien_scheme
(id, project_id, name, scheme_id, template_id, template_json, remarks, create_by, create_date, update_by, update_date, del_flag)
VALUES(1230000000000000008, 30000000, '公司管理', 1210000000000000000, 1324748199636492336, '{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 树型表结构\\n  return dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/org//company","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { tree{{table.className}}{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = [{{@ table.filter}}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      tree{{table.className}}(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableData = responseData.data ? responseData.data : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{{@ table.filter}}]\\n        // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [list{{table.className}}RespData, listPermissionRespData] = await Promise.all([\\n          tree{{table.className}}(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(list{{table.className}}RespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableData = list{{table.className}}RespData.data ? list{{table.className}}RespData.data :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : list{{table.className}}RespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate(scope) {\\n      this.$refs.editForm.$emit(''openAddDialog'', scope.row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.24616716414435,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.45733890137195,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionTagLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''事件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:search''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.12552052076437,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            list.push(h(\\"el-tooltip\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"effect\\": item.__config__.effect,\\r\\n                \\"content\\": item.__config__.content,\\r\\n                \\"placement\\": item.__config__.placement\\r\\n              }\\r\\n            }, [h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled,\\r\\n                \\"plain\\": item.plain == true ? true : false\\r\\n              }\\r\\n            }, [item.__slot__.default])]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"plain\\": item.plain == true ? true : false,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled\\r\\n              }\\r\\n            }, [item.__slot__.default]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\r\\n    var conf = element;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": conf,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode = h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        textAlign: element.align\\r\\n      }\\r\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\r\\n    var _this = this;\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__;\\r\\n      if (slot && slot.options && slot.options.length) {\\r\\n        slot.options.forEach(function (item) {\\r\\n          item.size = scheme.__config__.size;\\r\\n          var attrs = _this.getAttrs(item, isView);\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            var obj = {\\r\\n              effect: item.__config__.effect,\\r\\n              content: item.__config__.content,\\r\\n              placement: item.__config__.placement\\r\\n            };\\r\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\r\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\r\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\r\\n          } else {\\r\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\r\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\r\\n  var _this = this;\\r\\n  function addReg() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      __config__: {\\r\\n        tooltip: false,\\r\\n        // 是否增加按钮提示\\r\\n        effect: '''',\\r\\n        // 提示主题\\r\\n        content: '''',\\r\\n        // 提示内容\\r\\n        placement: '''' // 提示方向\\r\\n      },\\r\\n\\r\\n      __slot__: {\\r\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\r\\n      },\\r\\n      ''v-on:click'': '''',\\r\\n      type: ''primary'',\\r\\n      icon: null,\\r\\n      '':disabled'': undefined,\\r\\n      ''v-if'': undefined,\\r\\n      ''v-show'': undefined\\r\\n    });\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"对齐方式\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"按钮\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!item.__config__.locked && h(\\"span\\", {\\r\\n      \\"directives\\": [{\\r\\n        name: \\"show\\",\\r\\n        value: \\"activeData.__slot__.options.length > 2\\"\\r\\n      }],\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮文字\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__slot__.default,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮图标\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\r\\n      }\\r\\n    }), h(\\"IconInput\\", {\\r\\n      \\"model\\": {\\r\\n        value: item.icon,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"icon\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮类型\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"primary\\",\\r\\n        \\"value\\": \\"primary\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"success\\",\\r\\n        \\"value\\": \\"success\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"warning\\",\\r\\n        \\"value\\": \\"warning\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"danger\\",\\r\\n        \\"value\\": \\"danger\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"info\\",\\r\\n        \\"value\\": \\"info\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"text\\",\\r\\n        \\"value\\": \\"text\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"默认\\",\\r\\n        \\"value\\": \\"\\"\\r\\n      }\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"是否提示\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\r\\n      }\\r\\n    }), h(\\"el-switch\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"inactive-value\\": ''undefined''\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__config__.tooltip,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"activeData\\": item.__config__\\r\\n      }\\r\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"点击事件\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": item.__config__.locked,\\r\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-on:click''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-on:click'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''禁用条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item['':disabled''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, '':disabled'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''渲染条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-if''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-if'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-show''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-show'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addReg.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\r\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.98878160150285,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.68515307513567,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\r\\n  var _this = this;\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.comments; // 说明\\r\\n      search.name = item.name; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1);\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.currentTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"className\\": \\"condition-panel\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入字段名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''字段名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入字段名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':conditionColumns''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.some(function (item) {\\r\\n      if (item.name == search.name) {\\r\\n        custProperties = item.childFields;\\r\\n        return true;\\r\\n      }\\r\\n    }) && custProperties.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.locked) return list;\\r\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\r\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\r\\n      scheme.__config__.searchList.forEach(function (search) {\\r\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\r\\n      });\\r\\n    }\\r\\n    list.push(''],'');\\r\\n    return list;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"code","javaType":"String","comments":"编号","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"full_name","javaType":"String","comments":"全称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"parent_id","javaType":"This","comments":"父级","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"Company","fieldId":"id","tableId":"1287908822026887245","apiPath":"org/company"}},{"name":"ids","javaType":"String","comments":"全标识","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"sort","javaType":"String","comments":"排序","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"chairman","javaType":"Custom","comments":"董事长","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1287908822026887245","apiPath":"admin/user"}},{"name":"manager","javaType":"Custom","comments":"总经理","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1287908822026887245","apiPath":"admin/user"}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"String","comments":"创建时间","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"String","comments":"更新时间","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}}],"formId":115,"renderKey":115.79891233201501,"componentName":"ElConditionPanel115","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function queryFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单名'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":117,"renderKey":117.08936217441048,"componentName":"SingleInput117"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"autocomplete":"undefined"}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":116,"renderKey":116.80022897369399,"componentName":"SingleInput116","field":{"id":"1287908822026887252","name":"name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":128,"decimalLenth":0}},"label":"名称","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.31991925672966,"componentName":"ElQueryForm107","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":110,"renderKey":110.04582711687581,"componentName":"Button110","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":109,"renderKey":109.90923605488729,"componentName":"Button109","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":108,"renderKey":108.91189860482646,"componentName":"ElRow108","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function queryTableLayout(h) {\\r\\n  var _this = this;\\r\\n  // 注册监听， 设置树形配置\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表格名'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''最大高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高亮当前行'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展开后图标\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行变化\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''排序'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:sort-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列宽'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:header-dragend''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''单元格点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:cell-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":118,"renderKey":118.12373528144745,"componentName":"ElTableColumn118","field":{"id":"1287908822026887248","name":"code","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":64,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"编号","prop":"code","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":119,"renderKey":119.99356817784259,"componentName":"ElTableColumn119","field":{"id":"1287908822026887249","name":"full_name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"全称","jdbcType":"varchar(512)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"fullName","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=512, message=\\"全称长度必须介于 1 和 512 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":512,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"全称","prop":"fullName","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":120,"renderKey":120.17355237044646,"componentName":"ElTableColumn120","field":{"id":"1287908822026887250","name":"parent.name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"父级.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"org_company","currentTable":{"id":"1287908822026887245","name":"org_company","className":"Company","comments":"公司","isTreeTable":false,"delFlagExists":true,"columnList":[]},"javaField":"parent.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["NotNull(message=\\"父级不能为空\\")"],"isNotBaseField":false,"simpleJavaType":"Company","dataLength":21,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"上级公司名称","prop":"parent.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":121,"renderKey":121.7262031342244,"componentName":"ElTableColumn121","field":{"id":"1287908822026887251","name":"ids","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"全标识","jdbcType":"varchar(2048)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"ids","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":false,"simpleAnnotationList":["Length(min=1, max=2048, message=\\"全标识长度必须介于 1 和 2048 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":2048,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"上级公司标识","prop":"ids","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":122,"renderKey":122.18558916171435,"componentName":"ElTableColumn122","field":{"id":"1287908822026887252","name":"name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":128,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":123,"renderKey":123.59935558541771,"componentName":"ElTableColumn123","field":{"id":"1287908822026887253","name":"sort","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"排序","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"sort","childFields":[],"associatedField":"","defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=21, message=\\"排序长度必须介于 1 和 21 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":21,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"排序","prop":"sort","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":124,"renderKey":124.21141952320312,"componentName":"ElTableColumn124","field":{"id":"1287908822026887254","name":"chairman.name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"董事长.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"chairman.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":true,"simpleJavaType":"Custom","dataLength":21,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"董事长","prop":"chairman.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":125,"renderKey":125.07289811868746,"componentName":"ElTableColumn125","field":{"id":"1287908822026887255","name":"manager.name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"总经理.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"manager.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":true,"simpleJavaType":"Custom","dataLength":21,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"总经理","prop":"manager.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":126,"renderKey":126.767317518985,"componentName":"ElTableColumn126","field":{"id":"1287908822026887256","name":"remarks","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"associatedField":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":false,"simpleJavaType":"String","dataLength":255,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"备注信息","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":127,"renderKey":127.59485844455656,"componentName":"ElTableColumn127","field":{"id":"1287908822026887257","name":"create_by","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","isEditableField":false,"simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":64,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":128,"renderKey":128.8450339457236,"componentName":"ElTableColumn128","field":{"id":"1287908822026887258","name":"create_date","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"创建时间","jdbcType":"datetime","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","isEditableField":false,"simpleAnnotationList":["Length(min=1, max=-1, message=\\"创建时间长度必须介于 1 和 -1 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":-1,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":129,"renderKey":129.9842813889945,"componentName":"ElTableColumn129","field":{"id":"1287908822026887259","name":"update_by","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":false,"simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":64,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":130,"renderKey":130.52472396473178,"componentName":"ElTableColumn130","field":{"id":"1287908822026887260","name":"update_date","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"更新时间","jdbcType":"datetime","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":false,"simpleAnnotationList":["Length(min=1, max=-1, message=\\"更新时间长度必须介于 1 和 -1 之间\\")"],"isNotBaseField":false,"simpleJavaType":"String","dataLength":-1,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"更新时间","prop":"updateDate","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\r\\n\\r\\n    // 以 slot 属性来存储\\r\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\r\\n    var conf = Object.assign({}, element, {\\r\\n      width: ''''\\r\\n    });\\r\\n    child = h(\\"render\\", {\\r\\n      \\"class\\": ''popover-item-container'',\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": conf\\r\\n      }\\r\\n    });\\r\\n    var slotChildren = element.__slot__.__config__.children;\\r\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\r\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\r\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\r\\n    var copyItem = itemBtns.children[1];\\r\\n    var DeleteItem = itemBtns.children.pop();\\r\\n    return h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, h(\\"div\\", {\\r\\n      \\"class\\": ''drawing-item-btns''\\r\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\r\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function popoverLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件ref'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入ref名称\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示位置'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\",\\r\\n      \\"value\\": \\"top\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-start\\",\\r\\n      \\"value\\": \\"top-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-end\\",\\r\\n      \\"value\\": \\"top-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\",\\r\\n      \\"value\\": \\"bottom\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-start\\",\\r\\n      \\"value\\": \\"bottom-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-end\\",\\r\\n      \\"value\\": \\"bottom-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\",\\r\\n      \\"value\\": \\"left\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-start\\",\\r\\n      \\"value\\": \\"left-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-end\\",\\r\\n      \\"value\\": \\"left-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\",\\r\\n      \\"value\\": \\"right\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-start\\",\\r\\n      \\"value\\": \\"right-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-end\\",\\r\\n      \\"value\\": \\"right-end\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"位置偏移\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''位置偏移'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.offset,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"添加类名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''添加类名'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''popper-class''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''触发方式'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.trigger,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"click\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"focus激活\\",\\r\\n      \\"value\\": \\"focus\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"hover激活\\",\\r\\n      \\"value\\": \\"hover\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''show'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-enter'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-enter''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''hide'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:hide''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-leave'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-leave''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"保存回调\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:save-column-view''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"全部显示\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-all-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"恢复默认\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-default-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":150,"renderKey":150.82688292278914,"componentName":"ViewColumnsSelect150","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":148,"renderKey":148.78774755789289,"componentName":"ElPopover148","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":149,"renderKey":149.70262940241759,"componentName":"IconButton149"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":151,"renderKey":151.48107507431013,"componentName":"IconButton151","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":113,"renderKey":113.19670691945878,"componentName":"TableOptColumnHeader113","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.09155423020522,"componentName":"IconButton124","locked":true},"v-on:click":"onCreate(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"添加下级","placement":"top","icon-name":"el-icon-circle-plus-outline"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove && (!(scope.row.children) || scope.row.children.length <=0)","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":114,"renderKey":114.76180457598501,"componentName":"TableOptColumnMain114","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":112,"renderKey":112.01844571170803,"componentName":"ElTableOptColumn112","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":111,"renderKey":111.02438581478732,"componentName":"QueryTable111","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"children","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}}]},"maxFormId":130,"locked":true,"version":20,"code":"<template>\\n<el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n<history  ref=''history''  :bussObject=\\"curentRow\\">\\n    </history>\\n<edit-form  ref=''editForm''  v-on:save-finished=\\"getList\\" v-on:before-load=\\"setLoad\\" v-on:after-load=\\"resetLoad\\" :permission=\\"permission\\">\\n    </edit-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''start'' align=''top'' class=''dc-el-row_ElRow''><el-col :span=\\"24\\">\\n      <query-tag  ref=''queryTag'' v-model=''queryEditObject'' :moreParm=''moreParm'' :routerId=''$route && $route.meta.routerId'' :isQueryConditionPanel=''isQueryConditionPanel'' v-on:queryTagPanel=''onQueryTagPanel'' v-on:queryTagClick=''onQueryTagClick'' v-on:search=''onSearch'' class=''dc-query-tag_ElConditionTag''></query-tag>\\n    </el-col>\\n<el-col :span=\\"6\\">\\n      <div style=\\"text-align: right\\"><el-button-group  class=''dc-el-button-group_ButtonGroup''>\\n<el-tooltip  effect=''dark'' content=''搜索'' placement=''top''>\\n            <el-button  v-on:click=''onSearch'' type=''primary'' icon=''el-icon-search'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''重置'' placement=''top''>\\n            <el-button  v-on:click=''isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()'' type=''primary'' icon=''el-icon-refresh-right'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''更多'' placement=''top''>\\n            <el-button  v-on:click=''onQueryConditionPanel(\\"query\\")'' type=''primary'' icon=''el-icon-d-arrow-right'' ></el-button>\\n          </el-tooltip>\\n</el-button-group></div>\\n    </el-col></el-row>\\n<query-condition-panel  v-if=''isQueryConditionPanel'' ref=''conditionPanel'' :conditionColumns=''(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel'' v-model=''moreParm'' :routerId=''$route.meta.routerId'' class=''dc-query-condition-panel_ElConditionPanel''></query-condition-panel>\\n<el-form  ref=''queryForm'' :model=''queryFormData'' label-width=''100px'' v-if=''!isQueryConditionPanel'' class=''dc-el-form_ElQueryForm''>\\n      <el-row>\\n        <el-col :span=\\"6\\">\\n      <el-form-item prop=\\"name\\"  label=''名称'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''queryFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n    </el-col>\\n      </el-row>\\n    </el-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''end'' align=''top'' class=''dc-el-row_ElRow''><el-tooltip  v-show=''permission.add'' disabled class=''dc-el-tooltip_Button''><el-button  type=''primary'' icon=''el-icon-plus'' v-on:click=''onCreate''>添加</el-button></el-tooltip></el-row>\\n<ux-grid column-key  ref=''table'' :data=''tableData'' border v-on:sort-change=''onSortChange'' v-on:header-dragend=''onWidthChange($refs.table)'' :tree-config=''{\\"children\\":\\"children\\",\\"indent\\":20,\\"accordion\\":false,\\"line\\":false,\\"showIcon\\":true,\\"iconOpen\\":\\"\\",\\"iconClose\\":\\"\\"}'' class=''dc-ux-grid_QueryTable''>\\n        <ux-table-column :field=\\"tableColumns[''118''].field\\"\\n      :title=\\"tableColumns[''118''].title\\"\\n      :width=\\"tableColumns[''118''].width\\"\\n      :visible=\\"tableColumns[''118''].visible\\"\\n      :params=\\"{sortId: ''118''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''119''].field\\"\\n      :title=\\"tableColumns[''119''].title\\"\\n      :width=\\"tableColumns[''119''].width\\"\\n      :visible=\\"tableColumns[''119''].visible\\"\\n      :params=\\"{sortId: ''119''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''120''].field\\"\\n      :title=\\"tableColumns[''120''].title\\"\\n      :width=\\"tableColumns[''120''].width\\"\\n      :visible=\\"tableColumns[''120''].visible\\"\\n      :params=\\"{sortId: ''120''}\\" tree-node resizable min-width=''120px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''121''].field\\"\\n      :title=\\"tableColumns[''121''].title\\"\\n      :width=\\"tableColumns[''121''].width\\"\\n      :visible=\\"tableColumns[''121''].visible\\"\\n      :params=\\"{sortId: ''121''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''122''].field\\"\\n      :title=\\"tableColumns[''122''].title\\"\\n      :width=\\"tableColumns[''122''].width\\"\\n      :visible=\\"tableColumns[''122''].visible\\"\\n      :params=\\"{sortId: ''122''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''123''].field\\"\\n      :title=\\"tableColumns[''123''].title\\"\\n      :width=\\"tableColumns[''123''].width\\"\\n      :visible=\\"tableColumns[''123''].visible\\"\\n      :params=\\"{sortId: ''123''}\\" tree-node resizable min-width=''120px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''124''].field\\"\\n      :title=\\"tableColumns[''124''].title\\"\\n      :width=\\"tableColumns[''124''].width\\"\\n      :visible=\\"tableColumns[''124''].visible\\"\\n      :params=\\"{sortId: ''124''}\\" tree-node resizable min-width=''120px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''125''].field\\"\\n      :title=\\"tableColumns[''125''].title\\"\\n      :width=\\"tableColumns[''125''].width\\"\\n      :visible=\\"tableColumns[''125''].visible\\"\\n      :params=\\"{sortId: ''125''}\\" tree-node resizable min-width=''120px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''126''].field\\"\\n      :title=\\"tableColumns[''126''].title\\"\\n      :width=\\"tableColumns[''126''].width\\"\\n      :visible=\\"tableColumns[''126''].visible\\"\\n      :params=\\"{sortId: ''126''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''127''].field\\"\\n      :title=\\"tableColumns[''127''].title\\"\\n      :width=\\"tableColumns[''127''].width\\"\\n      :visible=\\"tableColumns[''127''].visible\\"\\n      :params=\\"{sortId: ''127''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''128''].field\\"\\n      :title=\\"tableColumns[''128''].title\\"\\n      :width=\\"tableColumns[''128''].width\\"\\n      :visible=\\"tableColumns[''128''].visible\\"\\n      :params=\\"{sortId: ''128''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''129''].field\\"\\n      :title=\\"tableColumns[''129''].title\\"\\n      :width=\\"tableColumns[''129''].width\\"\\n      :visible=\\"tableColumns[''129''].visible\\"\\n      :params=\\"{sortId: ''129''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''130''].field\\"\\n      :title=\\"tableColumns[''130''].title\\"\\n      :width=\\"tableColumns[''130''].width\\"\\n      :visible=\\"tableColumns[''130''].visible\\"\\n      :params=\\"{sortId: ''130''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column title=''操作'' :params=\\"{sortId: ''112''}\\"  tree-node resizable width=''160px'' min-width=''160px'' fixed=''right'' align=''left'' header-align=''center'' class=''dc-ux-table-column_ElTableOptColumn''>\\n                   <template v-slot:header=\\"scope\\">\\n                    <span>操作</span>\\n                    <el-popover  ref=''popover'' width=''10'' trigger=''click'' placement=''bottom'' offset=''0'' class=''dc-el-popover_ElPopover''>\\n      <view-columns-select  v-model=''tableColumns'' ref=''viewColumnsSelect'' v-on:save-column-view=''saveColumn($event, \\"table\\")'' v-on:show-all-column=''showAllColumn($event, \\"table\\")'' v-on:show-default-column=''showDefaultColumn(\\"table\\")'' class=''dc-view-columns-select_ViewColumnsSelect''></view-columns-select>\\n      <template slot=\\"reference\\">\\n        <OperationIcon  type=''primary'' content=''自定义列'' placement=''top'' icon-name=''el-icon-tickets''></OperationIcon>\\n      </template>\\n    </el-popover>\\n<OperationIcon  v-on:click=''onExport(tableData)'' type=''primary'' v-show=''permission.export'' content=''导出excel文件'' placement=''top'' icon-name=''el-icon-download'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                  <template slot-scope=\\"scope\\">\\n                  <OperationIcon  v-on:click=''onView(scope)'' type=''info'' v-show=''permission.view'' content=''查看'' placement=''top'' icon-name=''el-icon-view'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onCreate(scope)'' type=''primary'' v-show=''permission.add'' content=''添加下级'' placement=''top'' icon-name=''el-icon-circle-plus-outline'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onEdit(scope)'' type=''primary'' v-show=''permission.edit'' content=''编辑'' placement=''top'' icon-name=''el-icon-edit'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onCopy(scope)'' type=''primary'' v-show=''permission.add'' content=''复制'' placement=''top'' icon-name=''el-icon-document'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onDelete(scope)'' type=''danger'' v-show=''permission.remove && (!(scope.row.children) || scope.row.children.length <=0)'' content=''删除'' placement=''top'' icon-name=''el-icon-delete'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onShowHistory(scope)'' type=''info'' v-show=''permission.view'' content=''历史记录'' placement=''top'' icon-name=''el-icon-info'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                </ux-table-column>\\n      </ux-grid>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { treeCompany, deleteCompany } from ''@/api/org/company''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from \\"@/views/components/history\\"\\nimport EditForm from \\"./form\\"\\nimport QueryTag from \\"@/views/components/queryTag\\"\\nimport QueryConditionPanel from \\"@/views/components/queryConditionPanel\\"\\nimport ViewColumnsSelect from \\"@/views/components/DcViewColumnsSelect\\"\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\nEditForm,\\nQueryTag,\\nQueryConditionPanel,\\nViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      queryFormData: {\\nname: '''', // 名称\\n},\\ntableData: [],\\n// 查询表格列头\\ntableColumns: {\\n118: {\\ntitle: ''编号'',\\nfield: ''code'',\\nvisible: true,\\norder: 0\\n},\\n119: {\\ntitle: ''全称'',\\nfield: ''fullName'',\\nvisible: true,\\norder: 1\\n},\\n120: {\\ntitle: ''上级公司名称'',\\nfield: ''parent.name'',\\nvisible: false,\\norder: 2\\n},\\n121: {\\ntitle: ''上级公司标识'',\\nfield: ''ids'',\\nvisible: false,\\norder: 3\\n},\\n122: {\\ntitle: ''名称'',\\nfield: ''name'',\\nvisible: true,\\norder: 4\\n},\\n123: {\\ntitle: ''排序'',\\nfield: ''sort'',\\nvisible: true,\\norder: 5\\n},\\n124: {\\ntitle: ''董事长'',\\nfield: ''chairman.name'',\\nvisible: true,\\norder: 6\\n},\\n125: {\\ntitle: ''总经理'',\\nfield: ''manager.name'',\\nvisible: true,\\norder: 7\\n},\\n126: {\\ntitle: ''备注信息'',\\nfield: ''remarks'',\\nvisible: false,\\norder: 8\\n},\\n127: {\\ntitle: ''创建者'',\\nfield: ''createBy'',\\nvisible: false,\\norder: 9\\n},\\n128: {\\ntitle: ''创建时间'',\\nfield: ''createDate'',\\nvisible: false,\\norder: 10\\n},\\n129: {\\ntitle: ''更新者'',\\nfield: ''updateBy'',\\nvisible: false,\\norder: 11\\n},\\n130: {\\ntitle: ''更新时间'',\\nfield: ''updateDate'',\\nvisible: true,\\norder: 12\\n},\\n112: {\\ntitle: ''操作'',\\nwidth: ''160px'',\\nvisible: true,\\norder: 13\\n},\\n},\\n\\n      // 选项变量\\n      \\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 20,\\n\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n\\n      tableId: ''1287908822026887245'',\\n      schemeId: ''1287908822026887243''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = [{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        \\n      \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n                this.search.params.push({\\n                  columnName: ''name'',\\n                  queryType: ''like'',\\n                  \\n                    value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n                  \\n                })\\n              \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n      }\\n      // 数据权限: 公司org_company\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      treeCompany(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableData = responseData.data ? responseData.data : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{''columnName'':''id'', ''queryType'': ''='', ''value'': currentUser.company.id==''0'' ? '''': currentUser.company.id}]\\n        // 数据权限: 公司org_company\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [listCompanyRespData, listPermissionRespData] = await Promise.all([\\n          treeCompany(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(listCompanyRespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableData = listCompanyRespData.data ? listCompanyRespData.data :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''company:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''company:export''\\n          })\\n\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''company:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''company:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''company:delete''\\n          })\\n\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : listCompanyRespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate(scope) {\\n      this.$refs.editForm.$emit(''openAddDialog'', scope.row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        deleteCompany(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    },\\n  },\\n  watch: {\\n    \\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/org//company","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n          if(validatenull(form.parent)) {\\n            form.parent = {id: null}\\n          } \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onParentChange() {\\n      let nodes = this.$refs[''parentCascader''].getCheckedNodes()\\n      if(nodes.length > 0) {\\n        if(nodes[0] && nodes[0].data && nodes[0].data.children) {\\n          this.editFormData.sort = (nodes[0].data.children.length + 1) * 10000\\n        } else if(nodes[0]){\\n            this.editFormData.sort = 10000\\n        } else {\\n          this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n        }\\n      }else{\\n        this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n      }\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    parentOptions(newVal, oldVal) {\\n      if(newVal != oldVal && this.action == ''add'' ) {\\n        this.$nextTick(() => {\\n          this.onParentChange()\\n        })\\n      }\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function(parent) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData(parent)\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n    //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\r\\n          list.push(h(\\"el-button\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"type\\": item.type,\\r\\n              \\"size\\": conf.__config__.size,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }, [item.__slot__.default]));\\r\\n        });\\r\\n        if (conf.__config__.footerAlign != ''null'') {\\r\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [h(\\"div\\", {\\r\\n            \\"style\\": footerAlign\\r\\n          }, [list])]);\\r\\n        } else {\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [list]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": \\"overflow: hidden\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    // 设计模式下显示对话框\\r\\n    var confDesigner = Object.assign({\\r\\n      visible: true,\\r\\n      modal: false,\\r\\n      class: ''el-dialog__wrapper_cust'',\\r\\n      width: element.width\\r\\n    }, element);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": confDesigner,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\r\\n    var _this2 = this;\\r\\n    var config = scheme.__config__;\\r\\n    var btnWrapper = function btnWrapper() {\\r\\n      // 获取dialog组件 底部按钮数组\\r\\n      var list = [];\\r\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\r\\n        item.size = scheme.__config__.size;\\r\\n        var attrs = _this2.getAttrs(item, isView);\\r\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\r\\n        list.push(str);\\r\\n      });\\r\\n      var style = '''';\\r\\n      if (config.footerAlign) {\\r\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\r\\n      }\\r\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\r\\n      return list.length > 0 ? btnWrapperStr : '''';\\r\\n    };\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\r\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\r\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\r\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\r\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function dialogLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否是全屏'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fullscreen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''open'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:open''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"close\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''close'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:close''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"底部按钮\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''按钮布局'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.footerAlign,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 对话框属性变量'');\\r\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\r\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\r\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\r\\n    list.push(''},'');\\r\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\r\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n    });\\r\\n    return list;\\r\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":104,"renderKey":104.79030451767156,"componentName":"SingleInput104"},"__slot__":{"prepend":"","append":""},"__vModel__":"code","v-model":"editFormData.code",":maxLength":64,"placeholder":"请输入编号","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.50254523616492,"componentName":"SingleInput103","field":{"id":"1287908822026887248","name":"code","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":64,"decimalLenth":0}},"label":"编号","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"编号不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":106,"renderKey":106.5732652241602,"componentName":"SingleInput106"},"__slot__":{"prepend":"","append":""},"__vModel__":"fullName","v-model":"editFormData.fullName",":maxLength":512,"placeholder":"请输入全称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":105,"renderKey":105.39955796894881,"componentName":"SingleInput105","field":{"id":"1287908822026887249","name":"full_name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"全称","jdbcType":"varchar(512)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"fullName","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=512, message=\\"全称长度必须介于 1 和 512 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":512,"decimalLenth":0}},"label":"全称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"全称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field && scheme.__config__.field.associatedField ? scheme.__config__.field.associatedField : \\"id\\"}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}.${scheme.__config__.field.associatedField}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    // 编辑表格中的field存放在column的config下\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\n    var ruleTrigger = {\\n      ''el-input'': ''blur'',\\n      ''el-input-number'': ''blur'',\\n      ''number-input'': ''blur'',\\n      ''el-select'': ''change'',\\n      ''el-radio-group'': ''change'',\\n      ''el-checkbox-group'': ''change'',\\n      ''el-cascader'': ''change'',\\n      ''el-time-picker'': ''change'',\\n      ''el-date-picker'': ''change'',\\n      ''el-rate'': ''change'',\\n      ''el-color-picker'': ''change'',\\n      ''el-switch'': ''change'',\\n      ''el-slider'': ''change'',\\n      tinymce: ''blur''\\n    };\\n    var getFormRules = function getFormRules() {\\n      var rules = [];\\n      var childConfig = scheme.__config__.children[0].__config__;\\n      if (scheme.required) {\\n        // 是否为空校验\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\n        rules.push(rule);\\n      }\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\n        // 表达式校验\\n        config.regList.forEach(function (child) {\\n          if (child.pattern) {\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\n            rules.push(_rule);\\n          }\\n        });\\n      }\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\n    };\\n    var handleVModel = function handleVModel() {\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\n      if (config.valueExp) {\\n        config.children[0]['':value''] = eval(config.valueExp);\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\n      } else {\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\n      }\\n    };\\n\\n    var tag = config.tag;\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\n      // form-item增加rules校验\\n      getFormRules();\\n    }\\n    // 处理form-item，prop和子级的v-model\\n    handleVModel();\\n    var prop = eval(config.propStrExp);\\n    // 属性 通过rules实现验证，排除required属性\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","elName":"CascaderInput","label":"级联选择","tag":"el-form-item","tagIcon":"cascader","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"CascaderInput","label":"级联选择","url":"https://www.fastmock.site/mock/f8d7a54fb1e60561e2f720d5a810009d/fg/cascaderList","method":"get","dataKey":"list","showLabel":true,"tag":"el-cascader","tagIcon":"cascader","designLayout":"function generalFieldLayout(h, element, index, parent) {\\n    var _this = this;\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          _this.$set(config, ''defaultValue'', event);\\n        }\\n      }\\n    });\\n\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"class\\": className,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputData":"function CascaderData(scheme, parent, isView, loop, filters) {\\n    var _this2 = this;\\n    var list = [];\\n    if (this.validatenull(scheme.__vModel__)) return [];\\n    var field = parent.__config__.field;\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\n      if (field.name == ''parent_id'') {\\n        list.push(\\"// \\".concat(parent.label));\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\n        field.childFields && field.childFields.forEach(function (child) {\\n          if (child.value.indexOf(''.'') === -1) {\\n            list.push(\\"\\".concat(_this2.camelCase(child.value, \\"_\\"), \\": validatenull(This) || validatenull(This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\") ? null : This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\",\\"));\\n          } else {\\n            list.push(\\"\\".concat(_this2.camelCase(child.value.substring(0, child.value.indexOf(''.'')), \\"_\\"), \\": {''\\").concat(child.value.substring(child.value.indexOf(''.'') + 1, child.value.length), \\"'': validatenull(This) || validatenull(This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\") ? null : This.\\").concat(_this2.camelCase(child.value, \\"_\\"), \\"},\\"));\\n          }\\n        });\\n        list.push(''},'');\\n      } else {\\n        list.push(\\"// \\".concat(parent.label));\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\n        field.childFields && field.childFields.forEach(function (child) {\\n          list.push(\\"\\".concat(_this2.camelCase(child.value, \\"_\\"), \\": null,\\"));\\n        });\\n        list.push(''},'');\\n      }\\n    } else {\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\n    }\\n    return list;\\n  }","outputOptions":"function CascaderOptions(scheme, parent, isView) {\\n    var list = [];\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\n    if (scheme.__config__.dataType == ''dynamic'') {\\n      list.push(\\"\\".concat(scheme['':options''], \\": [],\\"));\\n    } else {\\n      list.push(\\"\\".concat(scheme['':options''], \\": [\\"));\\n      var arr = loopOptions(scheme.__config__.options);\\n      list.push.apply(list, arr);\\n      list.push(''],'');\\n    }\\n    return list;\\n  }","defaultValue":"","dataType":"dynamic","span":24,"options":[{"id":1,"value":"1","label":"选项1","children":[{"id":2,"value":"2","label":"选项1-1"}]}],"apiFn":"treeCompany","apiFrom":"@/api/org/company.js","optionParams":"{ ''columnName'': ''ids'', ''queryType'': ''not like'', ''value'': this.editFormData.id ? this.editFormData.id : null }","document":"https://element.eleme.cn/#/zh-CN/component/cascader","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":134,"renderKey":134.15418659694603,"componentName":"CascaderInput134","optionLabel":"","optionValue":""},"ref":"parentCascader","__vModel__":"parent",":options":"parentOptions","v-model":"editFormData.parent.id",":style":{"width":"100%"},"placeholder":"请选择父级",":props":{"label":"name","value":"id","children":"children","checkStrictly":true,"emitPath":false},"show-all-levels":"undefined","clearable":true,"filterable":true,"separator":"/","v-on:change":"",":disabled":"currentUser.company.id != \\"0\\""}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemCascaderLayout(h) {\\n  var _this2 = this;\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\n    label: ''In'',\\n    value: ''in''\\n  }, {\\n    label: ''Not In'',\\n    value: ''not in''\\n  }] : [{\\n    label: ''='',\\n    value: ''=''\\n  }, {\\n    label: ''!='',\\n    value: ''!=''\\n  }];\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__config__.options : [];\\n  function onChangeModel(field) {\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\n    this.activeData.label = field.comments;\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\n    if (field.name === ''parent_id'') {\\n      // 上级选择时，初始化级联框ref值\\n      this.activeData.__config__.children[0].ref = ''parentCascader'';\\n    }\\n    // 记录子段信息\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\n    // 获取选项数据\\n    this.setOptions(this.activeData.__config__.children[0], field);\\n    // 设置禁用字段\\n    this.filterTableColumns();\\n  }\\n\\n  // 切换静态/动态类型时触发表单校验\\n  function onDataTypeChange() {\\n    var _this = this;\\n    this.$nextTick(function () {\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\n        delete _this.activeData.valid;\\n      }\\n      _this.handleValid(_this.activeData);\\n    });\\n  }\\n  function multipleChange(val) {\\n    if (this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'')) {\\n      this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\n    }\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this2.activeNames,\\n      callback: function callback($$v) {\\n        _this2.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请选择字段名'',\\n        trigger: ''change''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"字段名\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''__vModel__'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"filterable\\": true,\\n      \\"placeholder\\": \\"请选择字段名\\"\\n    },\\n    \\"style\\": \\"width: 100%\\",\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\n      }\\n    }\\n  }, [this.tableColumns.map(function (item, index) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.javaField,\\n      \\"attrs\\": {\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n        \\"value\\": item.javaField,\\n        \\"disabled\\": _this2.handelDisabled(item)\\n      },\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          onChangeModel.call(_this2, item);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"style\\": \\"padding-left: 6px;\\"\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\n      \\"style\\": \\"float: right;\\",\\n      \\"attrs\\": {\\n        \\"className\\": \\"filed-tip\\"\\n      }\\n    }, [item.isType && h(\\"el-tag\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"danger\\"\\n      }\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"warning\\"\\n      }\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.label,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"查询方式\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''operator'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请选择查询方式\\"\\n    },\\n    \\"style\\": \\"width: 100%\\",\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\n      }\\n    }\\n  }, [queryTypes.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"占位提示\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''placeholder'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].placeholder,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认值\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''defaultValue'')\\n    }\\n  }), h(\\"el-cascader\\", {\\n    \\"attrs\\": {\\n      \\"options\\": selectOptions,\\n      \\"separator\\": this.activeData.__config__.children[0].separator,\\n      \\"clearable\\": true\\n    },\\n    \\"style\\": \\"width: 100%\\",\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''ref'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"级联ref\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入ref值\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].ref,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"ref\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否必填\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''required'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this2.activeData.required,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"能否清空\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''clearable'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].clearable,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否搜索\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''filterable'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].filterable,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-all-levels'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"展示全路径\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''show-all-levels'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0][''show-all-levels''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], ''show-all-levels'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''checkStrictly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"任选层级\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''checkStrictly'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':props''].checkStrictly,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"checkStrictly\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''emitPath'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"返回值数组\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''emitPath'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':props''].emitPath,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"emitPath\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''separator'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"选项分隔符\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''separator'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入选项分隔符\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].separator,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"separator\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"val-watch\\", {\\n    \\"attrs\\": {\\n      \\"element\\": this.activeData.__config__.children[0],\\n      \\"tableColumns\\": this.tableColumns,\\n      \\"getHelp\\": this.getHelp,\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\n    }\\n  }), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"选项\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"div\\", {\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"small\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onDataTypeChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"static\\"\\n    }\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"dynamic\\"\\n    }\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\n    \\"attrs\\": {\\n      \\"element\\": this.activeData.__config__.children[0],\\n      \\"tableColumns\\": this.tableColumns,\\n      \\"getHelp\\": this.getHelp,\\n      \\"watchName\\": ''optWatchs'',\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\n    }\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入函数名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"接口函数\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFn'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"函数名称\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入函数地址'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"地址\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''apiFrom'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"函数地址\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\n      }\\n    }\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], '':options'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0]::options\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入选项数组'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"选项数组\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':options'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请输入选项数组\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':options''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], '':options'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"TreeNodeDialog\\", {\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.options,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"options\\", $$v);\\n      }\\n    }\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签键名\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请输入标签键名\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':props''].label,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"label\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''value'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"值键名\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''value'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请输入值键名\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':props''].value,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"value\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':props'') && this.hasOwnProperty(this.activeData.__config__.children[0]['':props''], ''children'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"子级键名\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请输入子级键名\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':props''].children,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0]['':props''], \\"children\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"选项参数\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''optionParams'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请输入选项参数\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''v-on:change'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"change事件\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-on:change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"级联框change事件\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0][''v-on:change''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], ''v-on:change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"禁用条件\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''formE.cascaderInput'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this2.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","formId":133,"renderKey":133.03602774152054,"componentName":"CascaderInput133","field":{"id":"1287908822026887250","name":"parent_id","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","isTreeTable":true,"columnList":[]},"comments":"父级","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"org_company","currentTable":{"className":"Company","isTreeTable":false,"delFlagExists":true,"columnList":[]},"javaField":"parent","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["NotNull(message=\\"父级不能为空\\")"],"isNotBaseField":false,"decimalLenth":0,"dataLength":21,"isType":false,"isChecked":false}},"label":"父级","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":110,"renderKey":110.10414884066468,"componentName":"SingleInput110"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":109,"renderKey":109.4941599130027,"componentName":"SingleInput109","field":{"id":"1287908822026887252","name":"name","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"simpleJavaType":"String","dataLength":128,"decimalLenth":0}},"label":"名称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    // 编辑表格中的field存放在column的config下\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\n    var ruleTrigger = {\\n      ''el-input'': ''blur'',\\n      ''el-input-number'': ''blur'',\\n      ''number-input'': ''blur'',\\n      ''el-select'': ''change'',\\n      ''el-radio-group'': ''change'',\\n      ''el-checkbox-group'': ''change'',\\n      ''el-cascader'': ''change'',\\n      ''el-time-picker'': ''change'',\\n      ''el-date-picker'': ''change'',\\n      ''el-rate'': ''change'',\\n      ''el-color-picker'': ''change'',\\n      ''el-switch'': ''change'',\\n      ''el-slider'': ''change'',\\n      tinymce: ''blur''\\n    };\\n    var getFormRules = function getFormRules() {\\n      var rules = [];\\n      var childConfig = scheme.__config__.children[0].__config__;\\n      if (scheme.required) {\\n        // 是否为空校验\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\n        rules.push(rule);\\n      }\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\n        // 表达式校验\\n        config.regList.forEach(function (child) {\\n          if (child.pattern) {\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\n            rules.push(_rule);\\n          }\\n        });\\n      }\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\n    };\\n    var handleVModel = function handleVModel() {\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\n      if (config.valueExp) {\\n        config.children[0]['':value''] = eval(config.valueExp);\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\n      } else {\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\n      }\\n    };\\n\\n    var tag = config.tag;\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\n      // form-item增加rules校验\\n      getFormRules();\\n    }\\n    // 处理form-item，prop和子级的v-model\\n    handleVModel();\\n    var prop = eval(config.propStrExp);\\n    // 属性 通过rules实现验证，排除required属性\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"0","designLayout":"function inputLayout(h, element, index, parent) {\\n    var _this3 = this;\\n    var slots = {\\n      prepend: function prepend(h, conf, key) {\\n        return h(\\"template\\", {\\n          \\"slot\\": \\"prepend\\"\\n        }, [conf.__slot__[key]]);\\n      },\\n      append: function append(h, conf, key) {\\n        return h(\\"template\\", {\\n          \\"slot\\": \\"append\\"\\n        }, [conf.__slot__[key]]);\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var ele;\\n    if (element[''show-password''] == true) {\\n      ele = Object.assign({\\n        autocomplete: ''new-password''\\n      }, element);\\n    } else {\\n      ele = element;\\n    }\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": ele,\\n        \\"slots\\": slots\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          _this3.$set(config, ''defaultValue'', event);\\n        }\\n      }\\n    });\\n\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      elNode = h(\\"el-col\\", {\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"class\\": className,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var children = [];\\n    var slot = scheme.__slot__;\\n    if (slot && slot.prepend) {\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\n    }\\n    if (slot && slot.append) {\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\n    }\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    var field = parent.__config__.field;\\n    if (this.validatenull(scheme.__vModel__)) return list;\\n    if (field && field.name == ''sort'') {\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\n    } else {\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\n      } else {\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\n      }\\n    }\\n    return list;\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":136,"renderKey":136.19501945845832,"componentName":"SingleInput136"},"__slot__":{"prepend":"","append":""},"__vModel__":"sort","v-model":"editFormData.sort",":maxLength":21,"placeholder":"请输入排序","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"modelExp":"`${parent[\\":model\\"]}${scheme.__config__.childClassName ? \\".\\" + scheme.__config__.childClassName + \\"List[0]\\" : \\"\\"}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.childClassName ? scheme.__config__.childClassName + \\"List[0].\\" : \\"\\"}${scheme.__config__.children[0].__vModel__}\\"`","id":"formItemE","span":24,"field":{"id":"1287908822026887253","name":"sort","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","replace":false,"dcTableList":[]},"className":"Company","comments":"公司","isTreeTable":false,"columnList":[]},"comments":"排序","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","javaField":"sort","childFields":[],"associatedField":"","defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=21, message=\\"排序长度必须介于 1 和 21 之间\\")"],"isEditableField":true,"isNotBaseField":true,"isType":false,"isChecked":false},"childClassName":"","regList":[],"propertyLayout":"function itemSingleInputLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var queryTypes = [{\\n    label: ''Like'',\\n    value: ''like''\\n  }, {\\n    label: ''Left Like'',\\n    value: ''left_like''\\n  }, {\\n    label: ''Right Like'',\\n    value: ''right_like''\\n  }];\\n  function onChangeModel(field, group) {\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\n    this.activeData.label = field.comments;\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\n    this.filterTableColumns();\\n  }\\n  function onMaxLengthChange(val) {\\n    if (val != -1) {\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\n    }\\n  }\\n  function onPasswordChange(val) {\\n    if (val == true) {\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\n      } else {\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\n      }\\n    } else {\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\n      } else {\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\n      }\\n    }\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"字段名\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"value-key\\": ''id'',\\n      \\"filterable\\": true,\\n      \\"placeholder\\": \\"请选择字段名\\"\\n    },\\n    \\"style\\": \\"width: 100%\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.field,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"field\\", $$v);\\n      }\\n    }\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\n    return h(\\"el-option-group\\", {\\n      \\"key\\": groupIndex,\\n      \\"attrs\\": {\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n        \\"value\\": groupIndex\\n      }\\n    }, [group.tableColumns.map(function (item, index) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.id,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item,\\n          \\"disabled\\": _this.handelDisabled(item)\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            if (!_this.handelDisabled(item)) {\\n              onChangeModel.call(_this, item, group);\\n            }\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [h(\\"span\\", {\\n        \\"style\\": \\"padding-left: 6px;\\"\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\n        \\"style\\": \\"float: right;\\",\\n        \\"attrs\\": {\\n          \\"className\\": \\"filed-tip\\"\\n        }\\n      }, [item.isType && h(\\"el-tag\\", {\\n        \\"attrs\\": {\\n          \\"type\\": \\"danger\\"\\n        }\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\n        \\"attrs\\": {\\n          \\"type\\": \\"warning\\"\\n        }\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\n    })]);\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.javaField,\\n      \\"attrs\\": {\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n        \\"value\\": item,\\n        \\"disabled\\": _this.handelDisabled(item)\\n      },\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          if (!_this.handelDisabled(item)) {\\n            onChangeModel.call(_this, item);\\n          }\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"style\\": \\"padding-left: 6px;\\"\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\n      \\"style\\": \\"float: right;\\",\\n      \\"attrs\\": {\\n        \\"className\\": \\"filed-tip\\"\\n      }\\n    }, [item.isType && h(\\"el-tag\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"danger\\"\\n      }\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"warning\\"\\n      }\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请选择查询方式'',\\n        trigger: ''change''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"查询方式\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请选择查询方式\\"\\n    },\\n    \\"style\\": \\"width: 100%\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\n      }\\n    }\\n  }, [queryTypes.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"占位提示\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].placeholder,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认值\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\n      \\"placeholder\\": \\"请输入默认值\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大长度\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": -1,\\n      \\"precision\\": 0,\\n      \\"placeholder\\": \\"最大输入长度\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onMaxLengthChange.bind(this)\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否必填\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.required,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"密码框\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''show-password''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onPasswordChange.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否自动补全\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\n    }\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined'',\\n      \\"inactive-value\\": ''new-password''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\n      }\\n    }\\n  }) : h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''on'',\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"能否清空\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].clearable,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"val-watch\\", {\\n    \\"attrs\\": {\\n      \\"element\\": this.activeData.__config__.children[0],\\n      \\"tableColumns\\": this.tableColumns,\\n      \\"getHelp\\": this.getHelp,\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\n      \\"parent\\": this.activeData,\\n      \\"hasOneZOne\\": hasOneZOne\\n    }\\n  }), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"前图标\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"后图标\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"前缀\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入前缀\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"后缀\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入后缀\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"只读条件\\",\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"校验\\",\\n      \\"name\\": \\"6\\"\\n    }\\n  }, [h(\\"FormRules\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])])]);\\n}","formId":135,"renderKey":135.7836526415267,"componentName":"SingleInput135"},"label":"排序","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"排序不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"{ ''columnName'': ''company_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }","loopArray":"chairmanOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":114,"renderKey":114.22066839658419,"componentName":"SelectInput114"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"chairman","v-model":"editFormData.chairman",":style":{"width":"100%"},"placeholder":"请选择董事长","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":113,"renderKey":113.83376221676106,"componentName":"SelectInput113","field":{"id":"1287908822026887254","name":"chairman","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"董事长","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"chairman","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":true,"simpleJavaType":"Custom","dataLength":21,"decimalLenth":0}},"label":"董事长","v-if":"action != \\"add\\"","v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"{ ''columnName'': ''company_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }","loopArray":"managerOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":116,"renderKey":116.52435102049861,"componentName":"SelectInput116"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"manager","v-model":"editFormData.manager",":style":{"width":"100%"},"placeholder":"请选择总经理","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":115,"renderKey":115.57841533102278,"componentName":"SelectInput115","field":{"id":"1287908822026887255","name":"manager","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"总经理","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"manager","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","dcTableList":[],"replace":false},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":true,"simpleJavaType":"Custom","dataLength":21,"decimalLenth":0}},"label":"总经理","v-if":"action != \\"add\\"","v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":118,"renderKey":118.27482659428458,"componentName":"MutilpleInput118"},"__vModel__":"remarks","v-model":"editFormData.remarks","type":"textarea","placeholder":"请输入备注信息","rows":2,":maxLength":255,":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val !== -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","formId":117,"renderKey":117.31692889474392,"componentName":"MutilpleInput117","field":{"id":"1287908822026887256","name":"remarks","createBy":"超级管理员(super)","createDate":"2022-12-07 17:23:41","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:49:42","dcTable":{"id":"1287908822026887245","name":"org_company","scheme":{"name":"公司管理","packageName":"com.geeke","moduleName":"org","subModuleName":"","dcTableList":[],"replace":false},"className":"Company","isTreeTable":true,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"associatedField":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","isEditableField":true,"simpleAnnotationList":[],"isNotBaseField":false,"simpleJavaType":"String","dataLength":255,"decimalLenth":0}},"label":"备注信息","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.95941050627269,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.17846353103346,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"公司","v-loading":"loading","width":"30%","fullscreen":false}]},"maxFormId":136,"locked":true,"version":20,"code":"<template>\\n<el-row class=\\"dc-container\\" >\\n<el-dialog  v-on:open=''onDialogOpen'' v-on:close=''onDialogClose'' v-loading=''loading'' width=''30%'' :fullscreen=''false'' :title=\\"dialogProps.title\\" :visible.sync=\\"dialogProps.visible\\" :close-on-click-modal=\\"false\\" class=''dc-el-dialog_ElDialog''>\\n        <el-row>\\n          <el-form  ref=''editForm'' :model=''editFormData'' label-width=''100px'' :disabled=''action == \\"view\\"'' class=''dc-el-form_ElEditForm''>\\n      <el-row>\\n        <el-form-item prop=\\"code\\"  label=''编号'' :rules=''[{required: true,  message: \\"编号不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.code'' :maxLength=''64'' placeholder=''请输入编号'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"fullName\\"  label=''全称'' :rules=''[{required: true,  message: \\"全称不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.fullName'' :maxLength=''512'' placeholder=''请输入全称'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"parent.id\\"  label=''父级'' class=''dc-el-form-item_CascaderInput''>\\n      <el-cascader  ref=''parentCascader'' :options=''parentOptions'' v-model=''editFormData.parent.id'' :style=''{\\"width\\":\\"100%\\"}'' placeholder=''请选择父级'' :props=''{\\"label\\":\\"name\\",\\"value\\":\\"id\\",\\"children\\":\\"children\\",\\"checkStrictly\\":true,\\"emitPath\\":false}'' clearable filterable separator=''/'' :disabled=''currentUser.company.id != \\"0\\"'' class=''dc-el-cascader_CascaderInput''></el-cascader>\\n    </el-form-item>\\n<el-form-item prop=\\"name\\"  label=''名称'' :rules=''[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"sort\\"  label=''排序'' :rules=''[{required: true,  message: \\"排序不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.sort'' :maxLength=''21'' placeholder=''请输入排序'' clearable class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"chairman\\"  label=''董事长'' v-if=''action != \\"add\\"'' class=''dc-el-form-item_SelectInput''>\\n      <el-select  v-model=''editFormData.chairman'' :style=''{\\"width\\":\\"100%\\"}'' placeholder=''请选择董事长'' clearable value-key=''id'' filterable class=''dc-el-select_SelectInput''> <el-option\\n            v-for=\\"(item, index) in chairmanOptions\\"\\n            :key=\\"index\\"\\n            :label=\\"item.name\\"\\n            :value=\\"item\\"></el-option></el-select>\\n    </el-form-item>\\n<el-form-item prop=\\"manager\\"  label=''总经理'' v-if=''action != \\"add\\"'' class=''dc-el-form-item_SelectInput''>\\n      <el-select  v-model=''editFormData.manager'' :style=''{\\"width\\":\\"100%\\"}'' placeholder=''请选择总经理'' clearable value-key=''id'' filterable class=''dc-el-select_SelectInput''> <el-option\\n            v-for=\\"(item, index) in managerOptions\\"\\n            :key=\\"index\\"\\n            :label=\\"item.name\\"\\n            :value=\\"item\\"></el-option></el-select>\\n    </el-form-item>\\n<el-form-item prop=\\"remarks\\"  label=''备注信息'' class=''dc-el-form-item_MutilpleInput''>\\n      <el-input  v-model=''editFormData.remarks'' type=''textarea'' placeholder=''请输入备注信息'' rows=''2'' :maxLength=''255'' class=''dc-el-input_MutilpleInput''> </el-input>\\n    </el-form-item>\\n      </el-row>\\n    </el-form>\\n        </el-row>\\n        <span slot=\\"footer\\" class=\\"dialog-footer\\" >\\n                              <el-button  v-on:click=''onSubmit'' type=''primary'' v-show=''action != \\"view\\"''>\\n        保存\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action != \\"view\\"''>\\n        取消\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action == \\"view\\"''>\\n        关闭\\n     </el-button>\\n                            </span>\\n      </el-dialog>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\nimport { treeCompany } from ''@/api/org/company.js''\\nimport { listUserAll } from ''@/api/admin/user.js''\\n/** 根据用户界面配置import组件 结束 */\\nimport { getCompanyById, saveCompany } from ''@/api/org/company''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''company-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    \\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      // 对话框属性变量\\ndialogProps: {\\nvisible: false,\\ntitle: ''公司''\\n},\\ndialogTitle: ''公司'',\\n      // 选项变量\\n      // 父级选项\\nparentOptions: [],\\n// 董事长选项\\nchairmanOptions: [],\\n// 总经理选项\\nmanagerOptions: [],\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      saveCompany(this.editFormData).then(responseData => {\\n\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    \\n\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       getCompanyById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n          if(validatenull(form.parent)) {\\n            form.parent = {id: null}\\n          } \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n                \\n    listParentOptions() {\\n                \\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{ ''columnName'': ''ids'', ''queryType'': ''not like'', ''value'': this.editFormData.id ? this.editFormData.id : null }])\\n      \\n        \\n      // 数据权限: \\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, undefined)\\n        \\n      \\n      treeCompany(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          \\n            this.parentOptions = responseData.data\\n          \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n                \\n    listChairmanOptions() {\\n                \\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{ ''columnName'': ''company_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }])\\n      \\n        \\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, \\"1289059804542828547\\")\\n        \\n      \\n      listUserAll(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          \\n            this.chairmanOptions = responseData.data\\n          \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n                \\n    listManagerOptions() {\\n                \\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{ ''columnName'': ''company_id'', ''queryType'': ''='', ''value'': this.editFormData.id ? this.editFormData.id : null }])\\n      \\n        \\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, \\"1289059804542828547\\")\\n        \\n      \\n      listUserAll(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          \\n            this.managerOptions = responseData.data\\n          \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n      this.listParentOptions()\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n      this.listChairmanOptions()\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n              \\n      this.listManagerOptions()\\n              \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    },\\n    onParentChange() {\\n      let nodes = this.$refs[''parentCascader''].getCheckedNodes()\\n      if(nodes.length > 0) {\\n        if(nodes[0] && nodes[0].data && nodes[0].data.children) {\\n          this.editFormData.sort = (nodes[0].data.children.length + 1) * 10000\\n        } else if(nodes[0]){\\n            this.editFormData.sort = 10000\\n        } else {\\n          this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n        }\\n      }else{\\n        this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n      }\\n    },\\n    initEditData(This) {\\n      return {\\n        code: '''', // 编号\\nfullName: '''', // 全称\\n// 父级\\nparent: {\\nid: validatenull(This) || validatenull(This.id) ? null : This.id,\\nname: validatenull(This) || validatenull(This.name) ? null : This.name,\\n},\\nname: '''', // 名称\\nsort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\nchairman: {\\nid: null,\\nname: null,\\n},\\nmanager: {\\nid: null,\\nname: null,\\n},\\nremarks: '''', // 备注信息\\n      }\\n    }\\n  },\\n  watch: {\\n    \\n    parentOptions(newVal, oldVal) {\\n      if(newVal != oldVal && this.action == ''add'' ) {\\n        this.$nextTick(() => {\\n          this.onParentChange()\\n        })\\n      }\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function(parent) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData(parent)\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        \\n      \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n    \\n        this.dialogProps.visible = true\\n      })\\n\\n    })\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/org//company","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":20,"code":"\\r\\n      \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            const conditions = [\\n            \\n              \\n              {\\n                name: ''code'',\\n                comments: ''编号'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''full_name'',\\n                comments: ''全称'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''parent_id'',\\n                comments: ''父级'',\\n                tag: ''el-select'',\\n                queryType: ''='',\\n                operations: [{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"},{\\"value\\":\\"in\\",\\"label\\":\\"在列表\\"},{\\"value\\":\\"not in\\",\\"label\\":\\"不在列表\\"}],\\n                attribute: {\\"labelField\\":\\"name\\",\\"className\\":\\"Company\\",\\"fieldId\\":\\"id\\",\\"tableId\\":\\"1287908822026887245\\",\\"apiPath\\":\\"org/company\\"}\\n              },\\n              \\n              {\\n                name: ''ids'',\\n                comments: ''全标识'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''name'',\\n                comments: ''名称'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''sort'',\\n                comments: ''排序'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''chairman'',\\n                comments: ''董事长'',\\n                tag: ''el-select'',\\n                queryType: ''='',\\n                operations: [{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"},{\\"value\\":\\"in\\",\\"label\\":\\"在列表\\"},{\\"value\\":\\"not in\\",\\"label\\":\\"不在列表\\"}],\\n                attribute: {\\"labelField\\":\\"name\\",\\"className\\":\\"User\\",\\"fieldId\\":\\"id\\",\\"tableId\\":\\"1287908822026887245\\",\\"apiPath\\":\\"admin/user\\"}\\n              },\\n              \\n              {\\n                name: ''manager'',\\n                comments: ''总经理'',\\n                tag: ''el-select'',\\n                queryType: ''='',\\n                operations: [{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"},{\\"value\\":\\"in\\",\\"label\\":\\"在列表\\"},{\\"value\\":\\"not in\\",\\"label\\":\\"不在列表\\"}],\\n                attribute: {\\"labelField\\":\\"name\\",\\"className\\":\\"User\\",\\"fieldId\\":\\"id\\",\\"tableId\\":\\"1287908822026887245\\",\\"apiPath\\":\\"admin/user\\"}\\n              },\\n              \\n              {\\n                name: ''remarks'',\\n                comments: ''备注信息'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''create_by'',\\n                comments: ''创建者'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''create_date'',\\n                comments: ''创建时间'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''update_by'',\\n                comments: ''更新者'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n              {\\n                name: ''update_date'',\\n                comments: ''更新时间'',\\n                tag: ''el-input'',\\n                queryType: ''like'',\\n                operations: [{\\"value\\":\\"like\\",\\"label\\":\\"包含\\"},{\\"value\\":\\"not like\\",\\"label\\":\\"不包含\\"},{\\"value\\":\\"=\\",\\"label\\":\\"等于\\"},{\\"value\\":\\"<>\\",\\"label\\":\\"不等于\\"}],\\n                attribute: {}\\n              },\\n              \\n            \\n            ]\\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''1287908822026887245'',\\r\\n        schemeId: ''1287908822026887243'',\\r\\n        name: ''公司'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata"}],"version":20}', '', '超级管理员(super)', '2023-01-05 19:42:12', '超级管理员(super)', '2023-02-28 14:35:49', '0');
INSERT INTO dc_clien_scheme
(id, project_id, name, scheme_id, template_id, template_json, remarks, create_by, create_date, update_by, update_date, del_flag)
VALUES(1230000000000000009, 30000000, '系统主题', 1210000000000000010, 1318709630237024338, '{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/sys//theme","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = [{{@ table.filter}}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{{@ table.filter}}]\\n        // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [list{{table.className}}RespData, listPermissionRespData] = await Promise.all([\\n          list{{table.className}}Page(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(list{{table.className}}RespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = list{{table.className}}RespData.data.total\\n          this.tableData = list{{table.className}}RespData.data.rows ? list{{table.className}}RespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : list{{table.className}}RespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.46251171279611,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.08386336942895,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionTagLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''事件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:search''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.79825800414977,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            list.push(h(\\"el-tooltip\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"effect\\": item.__config__.effect,\\r\\n                \\"content\\": item.__config__.content,\\r\\n                \\"placement\\": item.__config__.placement\\r\\n              }\\r\\n            }, [h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled,\\r\\n                \\"plain\\": item.plain == true ? true : false\\r\\n              }\\r\\n            }, [item.__slot__.default])]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"plain\\": item.plain == true ? true : false,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled\\r\\n              }\\r\\n            }, [item.__slot__.default]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\r\\n    var conf = element;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": conf,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode = h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        textAlign: element.align\\r\\n      }\\r\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\r\\n    var _this = this;\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__;\\r\\n      if (slot && slot.options && slot.options.length) {\\r\\n        slot.options.forEach(function (item) {\\r\\n          item.size = scheme.__config__.size;\\r\\n          var attrs = _this.getAttrs(item, isView);\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            var obj = {\\r\\n              effect: item.__config__.effect,\\r\\n              content: item.__config__.content,\\r\\n              placement: item.__config__.placement\\r\\n            };\\r\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\r\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\r\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\r\\n          } else {\\r\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\r\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\r\\n  var _this = this;\\r\\n  function addReg() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      __config__: {\\r\\n        tooltip: false,\\r\\n        // 是否增加按钮提示\\r\\n        effect: '''',\\r\\n        // 提示主题\\r\\n        content: '''',\\r\\n        // 提示内容\\r\\n        placement: '''' // 提示方向\\r\\n      },\\r\\n\\r\\n      __slot__: {\\r\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\r\\n      },\\r\\n      ''v-on:click'': '''',\\r\\n      type: ''primary'',\\r\\n      icon: null,\\r\\n      '':disabled'': undefined,\\r\\n      ''v-if'': undefined,\\r\\n      ''v-show'': undefined\\r\\n    });\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"对齐方式\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"按钮\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!item.__config__.locked && h(\\"span\\", {\\r\\n      \\"directives\\": [{\\r\\n        name: \\"show\\",\\r\\n        value: \\"activeData.__slot__.options.length > 2\\"\\r\\n      }],\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮文字\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__slot__.default,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮图标\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\r\\n      }\\r\\n    }), h(\\"IconInput\\", {\\r\\n      \\"model\\": {\\r\\n        value: item.icon,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"icon\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮类型\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"primary\\",\\r\\n        \\"value\\": \\"primary\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"success\\",\\r\\n        \\"value\\": \\"success\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"warning\\",\\r\\n        \\"value\\": \\"warning\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"danger\\",\\r\\n        \\"value\\": \\"danger\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"info\\",\\r\\n        \\"value\\": \\"info\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"text\\",\\r\\n        \\"value\\": \\"text\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"默认\\",\\r\\n        \\"value\\": \\"\\"\\r\\n      }\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"是否提示\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\r\\n      }\\r\\n    }), h(\\"el-switch\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"inactive-value\\": ''undefined''\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__config__.tooltip,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"activeData\\": item.__config__\\r\\n      }\\r\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"点击事件\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": item.__config__.locked,\\r\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-on:click''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-on:click'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''禁用条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item['':disabled''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, '':disabled'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''渲染条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-if''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-if'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-show''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-show'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addReg.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\r\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.46269633356056,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.9343443321748,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\r\\n  var _this = this;\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.comments; // 说明\\r\\n      search.name = item.name; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1);\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.currentTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"className\\": \\"condition-panel\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入字段名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''字段名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入字段名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':conditionColumns''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.some(function (item) {\\r\\n      if (item.name == search.name) {\\r\\n        custProperties = item.childFields;\\r\\n        return true;\\r\\n      }\\r\\n    }) && custProperties.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.locked) return list;\\r\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\r\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\r\\n      scheme.__config__.searchList.forEach(function (search) {\\r\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\r\\n      });\\r\\n    }\\r\\n    list.push(''],'');\\r\\n    return list;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"id","javaType":"String","comments":"标识","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"theme","javaType":"String","comments":"主题","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"is_default","javaType":"String","comments":"默认","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"Date","comments":"创建时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"Date","comments":"更新时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}}],"formId":127,"renderKey":127.02690361279011,"componentName":"ElConditionPanel127","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function queryFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单名'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":129,"renderKey":129.4310724733941,"componentName":"SingleInput129"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":128,"renderKey":128.36400202002267,"componentName":"SingleInput128","field":{"id":"1331132582623264775","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"isNotBaseField":true}},"label":"名称","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":108,"renderKey":108.52444451593873,"componentName":"ElQueryForm108","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":""},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":111,"renderKey":111.17572051124648,"componentName":"Button111","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":110,"renderKey":110.20574909972895,"componentName":"Button110","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":109,"renderKey":109.95984262566932,"componentName":"ElRow109","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function queryTableLayout(h) {\\r\\n  var _this = this;\\r\\n  // 注册监听， 设置树形配置\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表格名'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''最大高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高亮当前行'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展开后图标\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行变化\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''排序'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:sort-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列宽'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:header-dragend''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''单元格点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:cell-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":130,"renderKey":130.72483617578698,"componentName":"ElTableColumn130","field":{"id":"1331132582623264775","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"isNotBaseField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":"switch (cellValue) {case \\"0\\": return \\"\\";case \\"1\\": return \\"<span style=\\"+\\"color:red\\"+\\">√</span>\\"; default: return \\"\\";}","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":132,"renderKey":132.88694964882208,"componentName":"ElTableColumn132","field":{"id":"1331132582623264777","name":"is_default","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"默认","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"isDefault","childFields":[],"associatedField":"","defVal":"1","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=0, max=1, message=\\"默认长度必须介于 0 和 1 之间\\")"],"isEditableField":true,"isNotBaseField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"默认","prop":"isDefault","width":null,"min-width":"70px","fixed":"undefined","align":"center","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":137,"renderKey":137.72050636760463,"componentName":"ElTableColumn137","field":{"id":"1331132582623264782","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isEditableField":false,"isNotBaseField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"更新时间","prop":"updateDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\r\\n\\r\\n    // 以 slot 属性来存储\\r\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\r\\n    var conf = Object.assign({}, element, {\\r\\n      width: ''''\\r\\n    });\\r\\n    child = h(\\"render\\", {\\r\\n      \\"class\\": ''popover-item-container'',\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": conf\\r\\n      }\\r\\n    });\\r\\n    var slotChildren = element.__slot__.__config__.children;\\r\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\r\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\r\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\r\\n    var copyItem = itemBtns.children[1];\\r\\n    var DeleteItem = itemBtns.children.pop();\\r\\n    return h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, h(\\"div\\", {\\r\\n      \\"class\\": ''drawing-item-btns''\\r\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\r\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function popoverLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件ref'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入ref名称\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示位置'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\",\\r\\n      \\"value\\": \\"top\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-start\\",\\r\\n      \\"value\\": \\"top-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-end\\",\\r\\n      \\"value\\": \\"top-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\",\\r\\n      \\"value\\": \\"bottom\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-start\\",\\r\\n      \\"value\\": \\"bottom-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-end\\",\\r\\n      \\"value\\": \\"bottom-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\",\\r\\n      \\"value\\": \\"left\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-start\\",\\r\\n      \\"value\\": \\"left-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-end\\",\\r\\n      \\"value\\": \\"left-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\",\\r\\n      \\"value\\": \\"right\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-start\\",\\r\\n      \\"value\\": \\"right-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-end\\",\\r\\n      \\"value\\": \\"right-end\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"位置偏移\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''位置偏移'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.offset,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"添加类名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''添加类名'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''popper-class''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''触发方式'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.trigger,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"click\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"focus激活\\",\\r\\n      \\"value\\": \\"focus\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"hover激活\\",\\r\\n      \\"value\\": \\"hover\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''show'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-enter'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-enter''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''hide'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:hide''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-leave'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-leave''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"保存回调\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:save-column-view''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"全部显示\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-all-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"恢复默认\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-default-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":119,"renderKey":119.91584943676851,"componentName":"ViewColumnsSelect119","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":117,"renderKey":117.94459849233819,"componentName":"ElPopover117","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.80204589631406,"componentName":"IconButton118"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":120,"renderKey":120.99308197488548,"componentName":"IconButton120","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.23031507843295,"componentName":"TableOptColumnHeader115","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":121,"renderKey":121.90536209441461,"componentName":"IconButton121","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":122,"renderKey":122.66478246681099,"componentName":"IconButton122","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":123,"renderKey":123.85268543353997,"componentName":"IconButton123","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.80794715895684,"componentName":"IconButton124","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":"scope.row.isDefault==\\"0\\"","v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":125,"renderKey":125.3980851069734,"componentName":"IconButton125","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.84635625741926,"componentName":"TableOptColumnMain116","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":114,"renderKey":114.23998415707428,"componentName":"ElTableOptColumn114","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"140px","min-width":"140px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":112,"renderKey":112.46469119130208,"componentName":"QueryTable112","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function paginationLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''总条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"总条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':total''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':total'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''当前页数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"当前页数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':current-page''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''每页条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"每页条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':page-size''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否背景色'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.background,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''上一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"上一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''prev-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"下一页文字\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''下一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"下一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''next-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''size-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:size-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''current-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''prev-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:prev-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''next-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:next-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 分页属性'');\\r\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\r\\n      // 页数\\r\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\r\\n    }\\r\\n    if (scheme['':current-page'']) {\\r\\n      // 当前页\\r\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\r\\n    }\\r\\n    if (scheme['':total'']) {\\r\\n      // 总条数\\r\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"row","document":"https://element.eleme.cn/#/zh-CN/component/pagination","formId":113,"renderKey":113.96381501978117,"componentName":"ElPagination113","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":137,"locked":true,"version":9,"code":"<template>\\n<el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n<history  ref=''history''  :bussObject=\\"curentRow\\">\\n    </history>\\n<edit-form  ref=''editForm''  v-on:save-finished=\\"getList\\" v-on:before-load=\\"setLoad\\" v-on:after-load=\\"resetLoad\\" :permission=\\"permission\\">\\n    </edit-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''start'' align=''top'' class=''dc-el-row_ElRow''><el-col :span=\\"24\\">\\n      <query-tag  ref=''queryTag'' v-model=''queryEditObject'' :moreParm=''moreParm'' :routerId=''$route && $route.meta.routerId'' :isQueryConditionPanel=''isQueryConditionPanel'' v-on:queryTagPanel=''onQueryTagPanel'' v-on:queryTagClick=''onQueryTagClick'' v-on:search=''onSearch'' class=''dc-query-tag_ElConditionTag''></query-tag>\\n    </el-col>\\n<el-col :span=\\"6\\">\\n      <div style=\\"text-align: right\\"><el-button-group  class=''dc-el-button-group_ButtonGroup''>\\n<el-tooltip  effect=''dark'' content=''搜索'' placement=''top''>\\n            <el-button  v-on:click=''onSearch'' type=''primary'' icon=''el-icon-search'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''重置'' placement=''top''>\\n            <el-button  v-on:click=''isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()'' type=''primary'' icon=''el-icon-refresh-right'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''更多'' placement=''top''>\\n            <el-button  v-on:click=''onQueryConditionPanel(\\"query\\")'' type=''primary'' icon=''el-icon-d-arrow-right'' ></el-button>\\n          </el-tooltip>\\n</el-button-group></div>\\n    </el-col></el-row>\\n<query-condition-panel  v-if=''isQueryConditionPanel'' ref=''conditionPanel'' :conditionColumns=''(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel'' v-model=''moreParm'' :routerId=''$route.meta.routerId'' class=''dc-query-condition-panel_ElConditionPanel''></query-condition-panel>\\n<el-form  ref=''queryForm'' :model=''queryFormData'' label-width=''100px'' v-if=''!isQueryConditionPanel'' class=''dc-el-form_ElQueryForm''>\\n      <el-row>\\n        <el-col :span=\\"6\\">\\n      <el-form-item prop=\\"name\\"  label=''名称'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''queryFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n    </el-col>\\n      </el-row>\\n    </el-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''end'' align=''top'' class=''dc-el-row_ElRow''><el-tooltip  v-show=''permission.add'' disabled class=''dc-el-tooltip_Button''><el-button  type=''primary'' icon=''el-icon-plus'' v-on:click=''onCreate''>添加</el-button></el-tooltip></el-row>\\n<ux-grid column-key  ref=''table'' :data=''tableData'' border v-on:sort-change=''onSortChange'' v-on:header-dragend=''onWidthChange($refs.table)'' :tree-config=''{\\"children\\":\\"\\",\\"indent\\":20,\\"accordion\\":false,\\"line\\":false,\\"showIcon\\":true,\\"iconOpen\\":\\"\\",\\"iconClose\\":\\"\\"}'' class=''dc-ux-grid_QueryTable''>\\n        <ux-table-column :field=\\"tableColumns[''130''].field\\"\\n      :title=\\"tableColumns[''130''].title\\"\\n      :width=\\"tableColumns[''130''].width\\"\\n      :visible=\\"tableColumns[''130''].visible\\"\\n      :params=\\"{sortId: ''130''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''132''].field\\"\\n      :title=\\"tableColumns[''132''].title\\"\\n      :width=\\"tableColumns[''132''].width\\"\\n      :visible=\\"tableColumns[''132''].visible\\"\\n      :params=\\"{sortId: ''132''}\\" tree-node resizable min-width=''70px'' align=''center'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''>\\n                <template slot-scope=''{row, rowIndex}''>\\n                  <div v-html=''((cellValue, row, index) => { switch (cellValue) {case \\"0\\": return \\"\\";case \\"1\\": return \\"<span style=\\"+\\"color:red\\"+\\">√</span>\\"; default: return \\"\\";} })(row.isDefault, row, rowIndex)''></div>\\n                </template>\\n             </ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''137''].field\\"\\n      :title=\\"tableColumns[''137''].title\\"\\n      :width=\\"tableColumns[''137''].width\\"\\n      :visible=\\"tableColumns[''137''].visible\\"\\n      :params=\\"{sortId: ''137''}\\" tree-node resizable min-width=''160px'' align=''right'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column title=''操作'' :params=\\"{sortId: ''114''}\\"  tree-node resizable width=''140px'' min-width=''140px'' fixed=''right'' align=''left'' header-align=''center'' class=''dc-ux-table-column_ElTableOptColumn''>\\n                   <template v-slot:header=\\"scope\\">\\n                    <span>操作</span>\\n                    <el-popover  ref=''popover'' width=''10'' trigger=''click'' placement=''bottom'' offset=''10'' class=''dc-el-popover_ElPopover''>\\n      <view-columns-select  v-model=''tableColumns'' ref=''viewColumnsSelect'' v-on:save-column-view=''saveColumn($event, \\"table\\")'' v-on:show-all-column=''showAllColumn($event, \\"table\\")'' v-on:show-default-column=''showDefaultColumn(\\"table\\")'' class=''dc-view-columns-select_ViewColumnsSelect''></view-columns-select>\\n      <template slot=\\"reference\\">\\n        <OperationIcon  type=''primary'' content=''自定义列'' placement=''top'' icon-name=''el-icon-tickets''></OperationIcon>\\n      </template>\\n    </el-popover>\\n<OperationIcon  v-on:click=''onExport(tableData)'' type=''primary'' v-show=''permission.export'' content=''导出excel文件'' placement=''top'' icon-name=''el-icon-download'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                  <template slot-scope=\\"scope\\">\\n                  <OperationIcon  v-on:click=''onView(scope)'' type=''info'' v-show=''permission.view'' content=''查看'' placement=''top'' icon-name=''el-icon-view'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onEdit(scope)'' type=''primary'' v-show=''permission.edit'' content=''编辑'' placement=''top'' icon-name=''el-icon-edit'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onCopy(scope)'' type=''primary'' v-show=''permission.add'' content=''复制'' placement=''top'' icon-name=''el-icon-document'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onDelete(scope)'' type=''danger'' v-if=''scope.row.isDefault==\\"0\\"'' v-show=''permission.remove'' content=''删除'' placement=''top'' icon-name=''el-icon-delete'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onShowHistory(scope)'' type=''info'' v-show=''permission.view'' content=''历史记录'' placement=''top'' icon-name=''el-icon-info'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                </ux-table-column>\\n      </ux-grid>\\n<el-pagination  :total=''tableDataTotal'' :page-size=''search.limit'' background :current-page=''tableDataPage'' :page-sizes=''[10,20,30,40,50,100]'' layout=''total, sizes, prev, pager, next, jumper'' v-on:size-change=''onSizeChange'' v-on:current-change=''onCurrentChange'' class=''dc-el-pagination_ElPagination''></el-pagination>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { listThemePage, deleteTheme } from ''@/api/sys/theme''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from \\"@/views/components/history\\"\\nimport EditForm from \\"./form\\"\\nimport QueryTag from \\"@/views/components/queryTag\\"\\nimport QueryConditionPanel from \\"@/views/components/queryConditionPanel\\"\\nimport ViewColumnsSelect from \\"@/views/components/DcViewColumnsSelect\\"\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\nEditForm,\\nQueryTag,\\nQueryConditionPanel,\\nViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      queryFormData: {\\nname: '''', // 名称\\n},\\ntableData: [],\\n// 查询表格列头\\ntableColumns: {\\n130: {\\ntitle: ''名称'',\\nfield: ''name'',\\nvisible: true,\\norder: 0\\n},\\n132: {\\ntitle: ''默认'',\\nfield: ''isDefault'',\\nvisible: true,\\norder: 1\\n},\\n137: {\\ntitle: ''更新时间'',\\nfield: ''updateDate'',\\nvisible: false,\\norder: 2\\n},\\n114: {\\ntitle: ''操作'',\\nwidth: ''140px'',\\nvisible: true,\\norder: 3\\n},\\n},\\n// 分页属性\\ntableDataPage: 1,\\ntableDataTotal: 0,\\n      // 选项变量\\n      \\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 9,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [  ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1331132582623264772'',\\n      schemeId: ''1331132582623264770''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        \\n      \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n                this.search.params.push({\\n                  columnName: ''name'',\\n                  queryType: ''like'',\\n                  \\n                    value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n                  \\n                })\\n              \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n      }\\n      // 数据权限: 系统主题sys_theme\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      listThemePage(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = []\\n        // 数据权限: 系统主题sys_theme\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [listThemeRespData, listPermissionRespData] = await Promise.all([\\n          listThemePage(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(listThemeRespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = listThemeRespData.data.total\\n          this.tableData = listThemeRespData.data.rows ? listThemeRespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''theme:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''theme:export''\\n          })\\n\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''theme:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''theme:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''theme:delete''\\n          })\\n\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : listThemeRespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        deleteTheme(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n    },\\n  },\\n  watch: {\\n    \\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/sys//theme","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n        //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\r\\n          list.push(h(\\"el-button\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"type\\": item.type,\\r\\n              \\"size\\": conf.__config__.size,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }, [item.__slot__.default]));\\r\\n        });\\r\\n        if (conf.__config__.footerAlign != ''null'') {\\r\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [h(\\"div\\", {\\r\\n            \\"style\\": footerAlign\\r\\n          }, [list])]);\\r\\n        } else {\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [list]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": \\"overflow: hidden\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    // 设计模式下显示对话框\\r\\n    var confDesigner = Object.assign({\\r\\n      visible: true,\\r\\n      modal: false,\\r\\n      class: ''el-dialog__wrapper_cust'',\\r\\n      width: element.width\\r\\n    }, element);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": confDesigner,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\r\\n    var _this2 = this;\\r\\n    var config = scheme.__config__;\\r\\n    var btnWrapper = function btnWrapper() {\\r\\n      // 获取dialog组件 底部按钮数组\\r\\n      var list = [];\\r\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\r\\n        item.size = scheme.__config__.size;\\r\\n        var attrs = _this2.getAttrs(item, isView);\\r\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\r\\n        list.push(str);\\r\\n      });\\r\\n      var style = '''';\\r\\n      if (config.footerAlign) {\\r\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\r\\n      }\\r\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\r\\n      return list.length > 0 ? btnWrapperStr : '''';\\r\\n    };\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\r\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\r\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\r\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\r\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function dialogLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否是全屏'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fullscreen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''open'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:open''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"close\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''close'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:close''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"底部按钮\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''按钮布局'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.footerAlign,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 对话框属性变量'');\\r\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\r\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\r\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\r\\n    list.push(''},'');\\r\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\r\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n    });\\r\\n    return list;\\r\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":104,"renderKey":104.72863525334081,"componentName":"SingleInput104"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.50419691002492,"componentName":"SingleInput103","field":{"id":"1331132582623264775","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"isNotBaseField":true}},"label":"名称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":106,"renderKey":106.25498532084492,"componentName":"SingleInput106"},"__slot__":{"prepend":"","append":""},"__vModel__":"theme","v-model":"editFormData.theme",":maxLength":-1,"placeholder":"请输入主题","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":105,"renderKey":105.07234376326768,"componentName":"SingleInput105","field":{"id":"1331132582623264776","name":"theme","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:23:39","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"主题","jdbcType":"mediumtext","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"theme","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","dataLength":-1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=-1, message=\\"主题长度必须介于 1 和 -1 之间\\")"],"isEditableField":true,"isNotBaseField":true}},"label":"主题","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"主题不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"Switch","label":"开关","tag":"el-form-item","tagIcon":"switch","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"Switch","label":"开关","tag":"el-switch","tagIcon":"switch","defaultValue":"0","designLayout":"function generalFieldLayout(h, element, index, parent) {\\r\\n    var _this = this;\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/switch","maxLength":10,"valWatchs":[],"valWatchExp":"","isInner":true,"formId":112,"renderKey":112.2850025521125,"componentName":"Switch112"},"__vModel__":"isDefault","v-model":"editFormData.isDefault","active-text":null,"inactive-text":null,"active-color":null,"inactive-color":null,"active-value":"1","inactive-value":"0",":disabled":null,"placeholder":"请选择默认"}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSwitchLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  function onSwitchValueInput(val, name) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.children[0], name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.children[0], name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : ''0'';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') ? this.activeData.__config__.children[0][''active-value''] : false,\\r\\n      \\"inactive-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') ? this.activeData.__config__.children[0][''inactive-value''] : false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入开启提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入关闭提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].active-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''active-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入开启值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''active-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].inactive-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''inactive-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入关闭值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''inactive-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":111,"renderKey":111.97951210901277,"componentName":"Switch111","field":{"id":"1331132582623264777","name":"is_default","createBy":"超级管理员(super)","createDate":"2023-01-05 18:53:27","updateBy":"超级管理员(super)","updateDate":"2023-01-05 19:33:56","dcTable":{"id":"1331132582623264772","name":"sys_theme","scheme":{"name":"系统主题-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"Theme","isTreeTable":false,"columnList":[]},"comments":"默认","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"isDefault","childFields":[],"associatedField":"","defVal":"1","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"String","isEditableField":true,"simpleAnnotationList":["Length(min=0, max=1, message=\\"默认长度必须介于 0 和 1 之间\\")"],"isNotBaseField":true,"decimalLenth":0,"dataLength":1,"isType":false,"isChecked":false}},"label":"默认","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.41096242308288,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.29971896782867,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"系统主题-v2","v-loading":"loading","width":"30%","fullscreen":false}]},"maxFormId":112,"locked":true,"version":9,"code":"<template>\\n<el-row class=\\"dc-container\\" >\\n<el-dialog  v-on:open=''onDialogOpen'' v-on:close=''onDialogClose'' v-loading=''loading'' width=''30%'' :fullscreen=''false'' :title=\\"dialogProps.title\\" :visible.sync=\\"dialogProps.visible\\" :close-on-click-modal=\\"false\\" class=''dc-el-dialog_ElDialog''>\\n        <el-row>\\n          <el-form  ref=''editForm'' :model=''editFormData'' label-width=''100px'' :disabled=''action == \\"view\\"'' class=''dc-el-form_ElEditForm''>\\n      <el-row>\\n        <el-form-item prop=\\"name\\"  label=''名称'' :rules=''[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"theme\\"  label=''主题'' :rules=''[{required: true,  message: \\"主题不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.theme'' :maxLength=''-1'' placeholder=''请输入主题'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"isDefault\\"  label=''默认'' class=''dc-el-form-item_Switch''>\\n      <el-switch  v-model=''editFormData.isDefault'' active-value=''1'' inactive-value=''0'' placeholder=''请选择默认'' class=''dc-el-switch_Switch''></el-switch>\\n    </el-form-item>\\n      </el-row>\\n    </el-form>\\n        </el-row>\\n        <span slot=\\"footer\\" class=\\"dialog-footer\\" >\\n                              <el-button  v-on:click=''onSubmit'' type=''primary'' v-show=''action != \\"view\\"''>\\n        保存\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action != \\"view\\"''>\\n        取消\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action == \\"view\\"''>\\n        关闭\\n     </el-button>\\n                            </span>\\n      </el-dialog>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n\\n/** 根据用户界面配置import组件 结束 */\\nimport { getThemeById, saveTheme } from ''@/api/sys/theme''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''theme-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    \\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      // 对话框属性变量\\ndialogProps: {\\nvisible: false,\\ntitle: ''系统主题-v2''\\n},\\ndialogTitle: ''系统主题-v2'',\\n      // 选项变量\\n      \\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      saveTheme(this.editFormData).then(responseData => {\\n\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    \\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       getThemeById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    },\\n    initEditData(This) {\\n      return {\\n        name: '''', // 名称\\ntheme: '''', // 主题\\nisDefault: ''0'', // 默认\\n      }\\n    }\\n  },\\n  watch: {\\n    \\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        \\n      \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n    \\n        this.dialogProps.visible = true\\n      })\\n\\n    })\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/sys//theme","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''{{table.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{table.comments}}'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":9,"code":"\\r\\n      \\n      \\n        \\n      \\n      \\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''1331132582623264772'',\\r\\n    schemeId: ''1331132582623264770'',\\r\\n    name: ''系统主题'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata"}],"version":9}', '', '超级管理员(super)', '2023-01-05 19:06:26', '超级管理员(super)', '2023-01-12 11:06:21', '0');
INSERT INTO dc_clien_scheme
(id, project_id, name, scheme_id, template_id, template_json, remarks, create_by, create_date, update_by, update_date, del_flag)
VALUES(1230000000000000010, 30000000, '系统编码规则', 1210000000000000009, 1318709630237024338, '{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/sys//codeRule","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = [{{@ table.filter}}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{{@ table.filter}}]\\n        // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [list{{table.className}}RespData, listPermissionRespData] = await Promise.all([\\n          list{{table.className}}Page(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(list{{table.className}}RespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = list{{table.className}}RespData.data.total\\n          this.tableData = list{{table.className}}RespData.data.rows ? list{{table.className}}RespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : list{{table.className}}RespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.46251171279611,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.08386336942895,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionTagLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''事件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:search''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.79825800414977,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            list.push(h(\\"el-tooltip\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"effect\\": item.__config__.effect,\\r\\n                \\"content\\": item.__config__.content,\\r\\n                \\"placement\\": item.__config__.placement\\r\\n              }\\r\\n            }, [h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled,\\r\\n                \\"plain\\": item.plain == true ? true : false\\r\\n              }\\r\\n            }, [item.__slot__.default])]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"plain\\": item.plain == true ? true : false,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled\\r\\n              }\\r\\n            }, [item.__slot__.default]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\r\\n    var conf = element;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": conf,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode = h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        textAlign: element.align\\r\\n      }\\r\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\r\\n    var _this = this;\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__;\\r\\n      if (slot && slot.options && slot.options.length) {\\r\\n        slot.options.forEach(function (item) {\\r\\n          item.size = scheme.__config__.size;\\r\\n          var attrs = _this.getAttrs(item, isView);\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            var obj = {\\r\\n              effect: item.__config__.effect,\\r\\n              content: item.__config__.content,\\r\\n              placement: item.__config__.placement\\r\\n            };\\r\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\r\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\r\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\r\\n          } else {\\r\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\r\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\r\\n  var _this = this;\\r\\n  function addReg() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      __config__: {\\r\\n        tooltip: false,\\r\\n        // 是否增加按钮提示\\r\\n        effect: '''',\\r\\n        // 提示主题\\r\\n        content: '''',\\r\\n        // 提示内容\\r\\n        placement: '''' // 提示方向\\r\\n      },\\r\\n\\r\\n      __slot__: {\\r\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\r\\n      },\\r\\n      ''v-on:click'': '''',\\r\\n      type: ''primary'',\\r\\n      icon: null,\\r\\n      '':disabled'': undefined,\\r\\n      ''v-if'': undefined,\\r\\n      ''v-show'': undefined\\r\\n    });\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"对齐方式\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"按钮\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!item.__config__.locked && h(\\"span\\", {\\r\\n      \\"directives\\": [{\\r\\n        name: \\"show\\",\\r\\n        value: \\"activeData.__slot__.options.length > 2\\"\\r\\n      }],\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮文字\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__slot__.default,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮图标\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\r\\n      }\\r\\n    }), h(\\"IconInput\\", {\\r\\n      \\"model\\": {\\r\\n        value: item.icon,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"icon\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮类型\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"primary\\",\\r\\n        \\"value\\": \\"primary\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"success\\",\\r\\n        \\"value\\": \\"success\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"warning\\",\\r\\n        \\"value\\": \\"warning\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"danger\\",\\r\\n        \\"value\\": \\"danger\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"info\\",\\r\\n        \\"value\\": \\"info\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"text\\",\\r\\n        \\"value\\": \\"text\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"默认\\",\\r\\n        \\"value\\": \\"\\"\\r\\n      }\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"是否提示\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\r\\n      }\\r\\n    }), h(\\"el-switch\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"inactive-value\\": ''undefined''\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__config__.tooltip,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"activeData\\": item.__config__\\r\\n      }\\r\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"点击事件\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": item.__config__.locked,\\r\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-on:click''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-on:click'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''禁用条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item['':disabled''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, '':disabled'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''渲染条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-if''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-if'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-show''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-show'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addReg.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\r\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.46269633356056,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.9343443321748,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\r\\n  var _this = this;\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.comments; // 说明\\r\\n      search.name = item.name; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1);\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.currentTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"className\\": \\"condition-panel\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入字段名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''字段名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入字段名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':conditionColumns''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this.tableColumns.some(function (item) {\\r\\n      if (item.name == search.name) {\\r\\n        custProperties = item.childFields;\\r\\n        return true;\\r\\n      }\\r\\n    }) && custProperties.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.locked) return list;\\r\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\r\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\r\\n      scheme.__config__.searchList.forEach(function (search) {\\r\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\r\\n      });\\r\\n    }\\r\\n    list.push(''],'');\\r\\n    return list;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"code","javaType":"String","comments":"编号","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"rule_def","javaType":"String","comments":"规则","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"tag":"el-input","name":"create_by","javaType":"String","comments":"创建者","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple"]},{"tag":"el-date-picker","name":"create_date","javaType":"Date","comments":"创建时间","queryType":"=","operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"},"id":"date","component":"日期","types":["Date"]},{"tag":"el-input","name":"update_by","javaType":"String","comments":"更新者","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple"]},{"tag":"el-date-picker","name":"update_date","javaType":"Date","comments":"更新时间","queryType":"=","operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"},"id":"date","component":"日期","types":["Date"]}],"formId":127,"renderKey":127.02690361279011,"componentName":"ElConditionPanel127","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function queryFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单名'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":129,"renderKey":129.9528960814459,"componentName":"SingleInput129"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":128,"renderKey":128.65936236957373,"componentName":"SingleInput128","field":{"id":"1331128150216990727","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"dataLength":128,"decimalLenth":0}},"label":"名称","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":108,"renderKey":108.52444451593873,"componentName":"ElQueryForm108","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":""},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":111,"renderKey":111.17572051124648,"componentName":"Button111","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":110,"renderKey":110.20574909972895,"componentName":"Button110","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":109,"renderKey":109.95984262566932,"componentName":"ElRow109","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function queryTableLayout(h) {\\r\\n  var _this = this;\\r\\n  // 注册监听， 设置树形配置\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表格名'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''最大高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高亮当前行'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展开后图标\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行变化\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''排序'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:sort-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列宽'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:header-dragend''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''单元格点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:cell-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":130,"renderKey":130.11085704311344,"componentName":"ElTableColumn130","field":{"id":"1331128150216990726","name":"code","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"dataLength":64,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"编号","prop":"code","width":"300px","min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":131,"renderKey":131.06956028862461,"componentName":"ElTableColumn131","field":{"id":"1331128150216990727","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"dataLength":128,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":"300","min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":132,"renderKey":132.43407790488016,"componentName":"ElTableColumn132","field":{"id":"1331128150216990728","name":"rule_def","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"规则","jdbcType":"varchar(512)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"ruleDef","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=512, message=\\"规则长度必须介于 1 和 512 之间\\")"],"dataLength":512,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"规则","prop":"ruleDef","width":"600px","min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":138,"renderKey":138.64961992638757,"componentName":"ElTableColumn138"},"tree-node":true,"resizable":true,"visible":false,"label":"备注信息","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":140,"renderKey":140.71753185429685,"componentName":"ElTableColumn140"},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":141,"renderKey":141.29255699005958,"componentName":"ElTableColumn141"},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":139,"renderKey":139.7702570602762,"componentName":"ElTableColumn139"},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"row","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":137,"renderKey":137.00138920837043,"componentName":"ElTableColumn137","field":{"id":"1331128150216990733","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"isEditableField":false,"simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"dataLength":24,"decimalLenth":0}},"tree-node":true,"resizable":true,"visible":"undefined","label":"更新时间","prop":"updateDate","width":"","min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\r\\n\\r\\n    // 以 slot 属性来存储\\r\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\r\\n    var conf = Object.assign({}, element, {\\r\\n      width: ''''\\r\\n    });\\r\\n    child = h(\\"render\\", {\\r\\n      \\"class\\": ''popover-item-container'',\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": conf\\r\\n      }\\r\\n    });\\r\\n    var slotChildren = element.__slot__.__config__.children;\\r\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\r\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\r\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\r\\n    var copyItem = itemBtns.children[1];\\r\\n    var DeleteItem = itemBtns.children.pop();\\r\\n    return h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, h(\\"div\\", {\\r\\n      \\"class\\": ''drawing-item-btns''\\r\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\r\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function popoverLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件ref'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入ref名称\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示位置'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\",\\r\\n      \\"value\\": \\"top\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-start\\",\\r\\n      \\"value\\": \\"top-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-end\\",\\r\\n      \\"value\\": \\"top-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\",\\r\\n      \\"value\\": \\"bottom\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-start\\",\\r\\n      \\"value\\": \\"bottom-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-end\\",\\r\\n      \\"value\\": \\"bottom-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\",\\r\\n      \\"value\\": \\"left\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-start\\",\\r\\n      \\"value\\": \\"left-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-end\\",\\r\\n      \\"value\\": \\"left-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\",\\r\\n      \\"value\\": \\"right\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-start\\",\\r\\n      \\"value\\": \\"right-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-end\\",\\r\\n      \\"value\\": \\"right-end\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"位置偏移\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''位置偏移'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.offset,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"添加类名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''添加类名'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''popper-class''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''触发方式'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.trigger,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"click\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"focus激活\\",\\r\\n      \\"value\\": \\"focus\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"hover激活\\",\\r\\n      \\"value\\": \\"hover\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''show'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-enter'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-enter''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''hide'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:hide''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-leave'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-leave''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"保存回调\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:save-column-view''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"全部显示\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-all-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"恢复默认\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-default-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":119,"renderKey":119.91584943676851,"componentName":"ViewColumnsSelect119","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":117,"renderKey":117.94459849233819,"componentName":"ElPopover117","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.80204589631406,"componentName":"IconButton118"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":120,"renderKey":120.99308197488548,"componentName":"IconButton120","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.23031507843295,"componentName":"TableOptColumnHeader115","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":121,"renderKey":121.90536209441461,"componentName":"IconButton121","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":122,"renderKey":122.66478246681099,"componentName":"IconButton122","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":123,"renderKey":123.85268543353997,"componentName":"IconButton123","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.80794715895684,"componentName":"IconButton124","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":125,"renderKey":125.3980851069734,"componentName":"IconButton125","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.84635625741926,"componentName":"TableOptColumnMain116","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":114,"renderKey":114.23998415707428,"componentName":"ElTableOptColumn114","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"140px","min-width":"140px","fixed":"right","align":"center","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":112,"renderKey":112.46469119130208,"componentName":"QueryTable112","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function paginationLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''总条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"总条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':total''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':total'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''当前页数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"当前页数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':current-page''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''每页条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"每页条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':page-size''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否背景色'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.background,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''上一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"上一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''prev-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"下一页文字\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''下一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"下一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''next-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''size-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:size-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''current-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''prev-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:prev-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''next-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:next-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 分页属性'');\\r\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\r\\n      // 页数\\r\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\r\\n    }\\r\\n    if (scheme['':current-page'']) {\\r\\n      // 当前页\\r\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\r\\n    }\\r\\n    if (scheme['':total'']) {\\r\\n      // 总条数\\r\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"row","document":"https://element.eleme.cn/#/zh-CN/component/pagination","formId":113,"renderKey":113.96381501978117,"componentName":"ElPagination113","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":142,"locked":true,"version":27,"code":"<template>\\n<el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n<history  ref=''history''  :bussObject=\\"curentRow\\">\\n    </history>\\n<edit-form  ref=''editForm''  v-on:save-finished=\\"getList\\" v-on:before-load=\\"setLoad\\" v-on:after-load=\\"resetLoad\\" :permission=\\"permission\\">\\n    </edit-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''start'' align=''top'' class=''dc-el-row_ElRow''><el-col :span=\\"24\\">\\n      <query-tag  ref=''queryTag'' v-model=''queryEditObject'' :moreParm=''moreParm'' :routerId=''$route && $route.meta.routerId'' :isQueryConditionPanel=''isQueryConditionPanel'' v-on:queryTagPanel=''onQueryTagPanel'' v-on:queryTagClick=''onQueryTagClick'' v-on:search=''onSearch'' class=''dc-query-tag_ElConditionTag''></query-tag>\\n    </el-col>\\n<el-col :span=\\"6\\">\\n      <div style=\\"text-align: right\\"><el-button-group  class=''dc-el-button-group_ButtonGroup''>\\n<el-tooltip  effect=''dark'' content=''搜索'' placement=''top''>\\n            <el-button  v-on:click=''onSearch'' type=''primary'' icon=''el-icon-search'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''重置'' placement=''top''>\\n            <el-button  v-on:click=''isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()'' type=''primary'' icon=''el-icon-refresh-right'' ></el-button>\\n          </el-tooltip>\\n<el-tooltip  effect=''dark'' content=''更多'' placement=''top''>\\n            <el-button  v-on:click=''onQueryConditionPanel(\\"query\\")'' type=''primary'' icon=''el-icon-d-arrow-right'' ></el-button>\\n          </el-tooltip>\\n</el-button-group></div>\\n    </el-col></el-row>\\n<query-condition-panel  v-if=''isQueryConditionPanel'' ref=''conditionPanel'' :conditionColumns=''(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel'' v-model=''moreParm'' :routerId=''$route.meta.routerId'' class=''dc-query-condition-panel_ElConditionPanel''></query-condition-panel>\\n<el-form  ref=''queryForm'' :model=''queryFormData'' label-width=''100px'' v-if=''!isQueryConditionPanel'' class=''dc-el-form_ElQueryForm''>\\n      <el-row>\\n        <el-col :span=\\"6\\">\\n      <el-form-item prop=\\"name\\"  label=''名称'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''queryFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n    </el-col>\\n      </el-row>\\n    </el-form>\\n<el-row  gutter=''0'' type=''flex'' justify=''end'' align=''top'' class=''dc-el-row_ElRow''><el-tooltip  v-show=''permission.add'' disabled class=''dc-el-tooltip_Button''><el-button  type=''primary'' icon=''el-icon-plus'' v-on:click=''onCreate''>添加</el-button></el-tooltip></el-row>\\n<ux-grid column-key  ref=''table'' :data=''tableData'' border v-on:sort-change=''onSortChange'' v-on:header-dragend=''onWidthChange($refs.table)'' :tree-config=''{\\"children\\":\\"\\",\\"indent\\":20,\\"accordion\\":false,\\"line\\":false,\\"showIcon\\":true,\\"iconOpen\\":\\"\\",\\"iconClose\\":\\"\\"}'' class=''dc-ux-grid_QueryTable''>\\n        <ux-table-column :field=\\"tableColumns[''130''].field\\"\\n      :title=\\"tableColumns[''130''].title\\"\\n      :width=\\"tableColumns[''130''].width\\"\\n      :visible=\\"tableColumns[''130''].visible\\"\\n      :params=\\"{sortId: ''130''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''131''].field\\"\\n      :title=\\"tableColumns[''131''].title\\"\\n      :width=\\"tableColumns[''131''].width\\"\\n      :visible=\\"tableColumns[''131''].visible\\"\\n      :params=\\"{sortId: ''131''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''132''].field\\"\\n      :title=\\"tableColumns[''132''].title\\"\\n      :width=\\"tableColumns[''132''].width\\"\\n      :visible=\\"tableColumns[''132''].visible\\"\\n      :params=\\"{sortId: ''132''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''138''].field\\"\\n      :title=\\"tableColumns[''138''].title\\"\\n      :width=\\"tableColumns[''138''].width\\"\\n      :visible=\\"tableColumns[''138''].visible\\"\\n      :params=\\"{sortId: ''138''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''140''].field\\"\\n      :title=\\"tableColumns[''140''].title\\"\\n      :width=\\"tableColumns[''140''].width\\"\\n      :visible=\\"tableColumns[''140''].visible\\"\\n      :params=\\"{sortId: ''140''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''141''].field\\"\\n      :title=\\"tableColumns[''141''].title\\"\\n      :width=\\"tableColumns[''141''].width\\"\\n      :visible=\\"tableColumns[''141''].visible\\"\\n      :params=\\"{sortId: ''141''}\\" tree-node resizable min-width=''160px'' align=''right'' header-align=''center'' show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''139''].field\\"\\n      :title=\\"tableColumns[''139''].title\\"\\n      :width=\\"tableColumns[''139''].width\\"\\n      :visible=\\"tableColumns[''139''].visible\\"\\n      :params=\\"{sortId: ''139''}\\" tree-node resizable min-width=''180px'' align=''left'' header-align=''center'' show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column :field=\\"tableColumns[''137''].field\\"\\n      :title=\\"tableColumns[''137''].title\\"\\n      :width=\\"tableColumns[''137''].width\\"\\n      :visible=\\"tableColumns[''137''].visible\\"\\n      :params=\\"{sortId: ''137''}\\" tree-node resizable min-width=''160px'' align=''right'' header-align=''center'' sortable show-overflow class=''dc-ux-table-column_ElTableColumn''></ux-table-column>\\n<ux-table-column title=''操作'' :params=\\"{sortId: ''114''}\\"  tree-node resizable width=''140px'' min-width=''140px'' fixed=''right'' align=''center'' header-align=''center'' class=''dc-ux-table-column_ElTableOptColumn''>\\n                   <template v-slot:header=\\"scope\\">\\n                    <span>操作</span>\\n                    <el-popover  ref=''popover'' width=''10'' trigger=''click'' placement=''bottom'' offset=''10'' class=''dc-el-popover_ElPopover''>\\n      <view-columns-select  v-model=''tableColumns'' ref=''viewColumnsSelect'' v-on:save-column-view=''saveColumn($event, \\"table\\")'' v-on:show-all-column=''showAllColumn($event, \\"table\\")'' v-on:show-default-column=''showDefaultColumn(\\"table\\")'' class=''dc-view-columns-select_ViewColumnsSelect''></view-columns-select>\\n      <template slot=\\"reference\\">\\n        <OperationIcon  type=''primary'' content=''自定义列'' placement=''top'' icon-name=''el-icon-tickets''></OperationIcon>\\n      </template>\\n    </el-popover>\\n<OperationIcon  v-on:click=''onExport(tableData)'' type=''primary'' v-show=''permission.export'' content=''导出excel文件'' placement=''top'' icon-name=''el-icon-download'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                  <template slot-scope=\\"scope\\">\\n                  <OperationIcon  v-on:click=''onView(scope)'' type=''info'' v-show=''permission.view'' content=''查看'' placement=''top'' icon-name=''el-icon-view'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onEdit(scope)'' type=''primary'' v-show=''permission.edit'' content=''编辑'' placement=''top'' icon-name=''el-icon-edit'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onCopy(scope)'' type=''primary'' v-show=''permission.add'' content=''复制'' placement=''top'' icon-name=''el-icon-document'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onDelete(scope)'' type=''danger'' v-show=''permission.remove'' content=''删除'' placement=''top'' icon-name=''el-icon-delete'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n<OperationIcon  v-on:click=''onShowHistory(scope)'' type=''info'' v-show=''permission.view'' content=''历史记录'' placement=''top'' icon-name=''el-icon-info'' class=''dc-OperationIcon_IconButton''></OperationIcon>\\n                  </template>\\n                </ux-table-column>\\n      </ux-grid>\\n<el-pagination  :total=''tableDataTotal'' :page-size=''search.limit'' background :current-page=''tableDataPage'' :page-sizes=''[10,20,30,40,50,100]'' layout=''total, sizes, prev, pager, next, jumper'' v-on:size-change=''onSizeChange'' v-on:current-change=''onCurrentChange'' class=''dc-el-pagination_ElPagination''></el-pagination>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { listCodeRulePage, deleteCodeRule } from ''@/api/sys/codeRule''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from \\"@/views/components/history\\"\\nimport EditForm from \\"./form\\"\\nimport QueryTag from \\"@/views/components/queryTag\\"\\nimport QueryConditionPanel from \\"@/views/components/queryConditionPanel\\"\\nimport ViewColumnsSelect from \\"@/views/components/DcViewColumnsSelect\\"\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\nEditForm,\\nQueryTag,\\nQueryConditionPanel,\\nViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      queryFormData: {\\nname: '''', // 名称\\n},\\ntableData: [],\\n// 查询表格列头\\ntableColumns: {\\n130: {\\ntitle: ''编号'',\\nfield: ''code'',\\nwidth: ''300px'',\\nvisible: true,\\norder: 0\\n},\\n131: {\\ntitle: ''名称'',\\nfield: ''name'',\\nwidth: ''300'',\\nvisible: true,\\norder: 1\\n},\\n132: {\\ntitle: ''规则'',\\nfield: ''ruleDef'',\\nwidth: ''600px'',\\nvisible: true,\\norder: 2\\n},\\n138: {\\ntitle: ''备注信息'',\\nfield: ''remarks'',\\nvisible: false,\\norder: 3\\n},\\n140: {\\ntitle: ''创建者'',\\nfield: ''createBy'',\\nvisible: false,\\norder: 4\\n},\\n141: {\\ntitle: ''创建时间'',\\nfield: ''createDate'',\\nvisible: false,\\norder: 5\\n},\\n139: {\\ntitle: ''更新者'',\\nfield: ''updateBy'',\\nvisible: false,\\norder: 6\\n},\\n137: {\\ntitle: ''更新时间'',\\nfield: ''updateDate'',\\nvisible: true,\\norder: 7\\n},\\n114: {\\ntitle: ''操作'',\\nwidth: ''140px'',\\nvisible: true,\\norder: 8\\n},\\n},\\n// 分页属性\\ntableDataPage: 1,\\ntableDataTotal: 0,\\n      // 选项变量\\n      \\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 27,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [  ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1331128150216990723'',\\n      schemeId: ''1331128150216990721''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        \\n      \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n                this.search.params.push({\\n                  columnName: ''name'',\\n                  queryType: ''like'',\\n                  \\n                    value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n                  \\n                })\\n              \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n        \\n      \\n            \\n          \\n            \\n              \\n        \\n      \\n            \\n          \\n        \\n      \\n      }\\n      // 数据权限: 系统编号规则sys_code_rule\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      listCodeRulePage(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = []\\n        // 数据权限: 系统编号规则sys_code_rule\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [listCodeRuleRespData, listPermissionRespData] = await Promise.all([\\n          listCodeRulePage(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(listCodeRuleRespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = listCodeRuleRespData.data.total\\n          this.tableData = listCodeRuleRespData.data.rows ? listCodeRuleRespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''codeRule:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''codeRule:export''\\n          })\\n\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''codeRule:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''codeRule:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''codeRule:delete''\\n          })\\n\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : listCodeRuleRespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        deleteCodeRule(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order === ''descending'' ? ''desc'' : ''asc''\\n      }\\n      this.getList()\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n    },\\n  },\\n  watch: {\\n    \\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/sys//codeRule","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n        //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\r\\n          list.push(h(\\"el-button\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"type\\": item.type,\\r\\n              \\"size\\": conf.__config__.size,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }, [item.__slot__.default]));\\r\\n        });\\r\\n        if (conf.__config__.footerAlign != ''null'') {\\r\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [h(\\"div\\", {\\r\\n            \\"style\\": footerAlign\\r\\n          }, [list])]);\\r\\n        } else {\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [list]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": \\"overflow: hidden\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    // 设计模式下显示对话框\\r\\n    var confDesigner = Object.assign({\\r\\n      visible: true,\\r\\n      modal: false,\\r\\n      class: ''el-dialog__wrapper_cust'',\\r\\n      width: element.width\\r\\n    }, element);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": confDesigner,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\r\\n    var _this2 = this;\\r\\n    var config = scheme.__config__;\\r\\n    var btnWrapper = function btnWrapper() {\\r\\n      // 获取dialog组件 底部按钮数组\\r\\n      var list = [];\\r\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\r\\n        item.size = scheme.__config__.size;\\r\\n        var attrs = _this2.getAttrs(item, isView);\\r\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\r\\n        list.push(str);\\r\\n      });\\r\\n      var style = '''';\\r\\n      if (config.footerAlign) {\\r\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\r\\n      }\\r\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\r\\n      return list.length > 0 ? btnWrapperStr : '''';\\r\\n    };\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\r\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\r\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\r\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\r\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function dialogLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否是全屏'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fullscreen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''open'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:open''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"close\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''close'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:close''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"底部按钮\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''按钮布局'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.footerAlign,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 对话框属性变量'');\\r\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\r\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\r\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\r\\n    list.push(''},'');\\r\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\r\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n    });\\r\\n    return list;\\r\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":104,"renderKey":104.11271971212123,"componentName":"SingleInput104"},"__slot__":{"prepend":"","append":""},"__vModel__":"code","v-model":"editFormData.code",":maxLength":64,"placeholder":"请输入编号","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":"currentUser.id != \\"1000\\"",":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.39877920390383,"componentName":"SingleInput103","field":{"id":"1331128150216990726","name":"code","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"编号","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"code","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"编号长度必须介于 1 和 64 之间\\")"],"dataLength":64,"decimalLenth":0}},"label":"编号","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"编号不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":106,"renderKey":106.12928397335347,"componentName":"SingleInput106"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":105,"renderKey":105.68545828280794,"componentName":"SingleInput105","field":{"id":"1331128150216990727","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"dataLength":128,"decimalLenth":0}},"label":"名称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":108,"renderKey":108.75343703573779,"componentName":"SingleInput108"},"__slot__":{"prepend":"","append":""},"__vModel__":"ruleDef","v-model":"editFormData.ruleDef",":maxLength":512,"placeholder":"请输入规则","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"new-password",":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":107,"renderKey":107.07791919892807,"componentName":"SingleInput107","field":{"id":"1331128150216990728","name":"rule_def","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"规则","jdbcType":"varchar(512)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"ruleDef","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=512, message=\\"规则长度必须介于 1 和 512 之间\\")"],"dataLength":512,"decimalLenth":0}},"label":"规则","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"规则不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":110,"renderKey":110.29285666877811,"componentName":"MutilpleInput110"},"__vModel__":"remarks","v-model":"editFormData.remarks","type":"textarea","placeholder":"请输入备注信息","rows":2,":maxLength":255,":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val !== -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","formId":109,"renderKey":109.25563783309677,"componentName":"MutilpleInput109","field":{"id":"1331128150216990729","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-05 18:51:39","updateBy":"超级管理员(super)","updateDate":"2023-01-05 18:57:24","dcTable":{"id":"1331128150216990723","name":"sys_code_rule","scheme":{"name":"系统编码规则-v2","packageName":"com.geeke","moduleName":"sys","subModuleName":"","dcTableList":[],"replace":false},"className":"CodeRule","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","dcTableList":[],"replace":false},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"associatedField":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","simpleJavaType":"String","isNotBaseField":false,"isEditableField":true,"simpleAnnotationList":[],"dataLength":255,"decimalLenth":0}},"label":"备注信息","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.41096242308288,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.29971896782867,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"系统编码规则-v2","v-loading":"loading","width":"30%","fullscreen":false}]},"maxFormId":110,"locked":true,"version":27,"code":"<template>\\n<el-row class=\\"dc-container\\" >\\n<el-dialog  v-on:open=''onDialogOpen'' v-on:close=''onDialogClose'' v-loading=''loading'' width=''30%'' :fullscreen=''false'' :title=\\"dialogProps.title\\" :visible.sync=\\"dialogProps.visible\\" :close-on-click-modal=\\"false\\" class=''dc-el-dialog_ElDialog''>\\n        <el-row>\\n          <el-form  ref=''editForm'' :model=''editFormData'' label-width=''100px'' :disabled=''action == \\"view\\"'' class=''dc-el-form_ElEditForm''>\\n      <el-row>\\n        <el-form-item prop=\\"code\\"  label=''编号'' :rules=''[{required: true,  message: \\"编号不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.code'' :maxLength=''64'' placeholder=''请输入编号'' clearable :disabled=''currentUser.id != \\"1000\\"'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"name\\"  label=''名称'' :rules=''[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.name'' :maxLength=''128'' placeholder=''请输入名称'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"ruleDef\\"  label=''规则'' :rules=''[{required: true,  message: \\"规则不能为空\\", trigger: \\"blur\\"}]'' class=''dc-el-form-item_SingleInput''>\\n      <el-input  v-model=''editFormData.ruleDef'' :maxLength=''512'' placeholder=''请输入规则'' clearable autocomplete=''new-password'' class=''dc-el-input_SingleInput''> </el-input>\\n    </el-form-item>\\n<el-form-item prop=\\"remarks\\"  label=''备注信息'' class=''dc-el-form-item_MutilpleInput''>\\n      <el-input  v-model=''editFormData.remarks'' type=''textarea'' placeholder=''请输入备注信息'' rows=''2'' :maxLength=''255'' class=''dc-el-input_MutilpleInput''> </el-input>\\n    </el-form-item>\\n      </el-row>\\n    </el-form>\\n        </el-row>\\n        <span slot=\\"footer\\" class=\\"dialog-footer\\" >\\n                              <el-button  v-on:click=''onSubmit'' type=''primary'' v-show=''action != \\"view\\"''>\\n        保存\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action != \\"view\\"''>\\n        取消\\n     </el-button>\\n<el-button  v-on:click=''onDialogClose'' v-if=''action == \\"view\\"''>\\n        关闭\\n     </el-button>\\n                            </span>\\n      </el-dialog>\\n</el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n\\n/** 根据用户界面配置import组件 结束 */\\nimport { getCodeRuleById, saveCodeRule } from ''@/api/sys/codeRule''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''codeRule-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    \\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      // 对话框属性变量\\ndialogProps: {\\nvisible: false,\\ntitle: ''系统编码规则-v2''\\n},\\ndialogTitle: ''系统编码规则-v2'',\\n      // 选项变量\\n      \\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      saveCodeRule(this.editFormData).then(responseData => {\\n\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    \\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       getCodeRuleById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    \\n    \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    \\n      \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n          \\n            \\n          \\n          \\n      \\n        \\n          \\n          \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n        \\n      \\n    \\n    },\\n    initEditData(This) {\\n      return {\\n        code: '''', // 编号\\nname: '''', // 名称\\nruleDef: '''', // 规则\\nremarks: '''', // 备注信息\\n      }\\n    }\\n  },\\n  watch: {\\n    \\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        \\n      \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n          \\n            \\n      \\n        \\n          \\n            \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n          \\n        \\n      \\n      \\n    \\n        this.dialogProps.visible = true\\n      })\\n\\n    })\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/sys//codeRule","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''{{table.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{table.comments}}'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":27,"code":"\\r\\n      \\n      \\n        \\n      \\n      \\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''1331128150216990723'',\\r\\n    schemeId: ''1331128150216990721'',\\r\\n    name: ''系统编号规则'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata"}],"version":27}', '', '超级管理员(super)', '2023-01-05 19:02:58', '超级管理员(super)', '2023-01-12 11:05:48', '0');
