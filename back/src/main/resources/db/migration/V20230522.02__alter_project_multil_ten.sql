
/* prj_project表删除multil_ten */
ALTER TABLE prj_project DROP COLUMN `multil_ten` ;

DELETE FROM dc_table_column WHERE id='1412285886607327239';

/* 删除后端方案业务表的项目字段的多租户引用 */
UPDATE dc_table_column SET `child_fields`='[{\"label\":\"标识\",\"value\":\"id\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0},{\"label\":\"名称\",\"value\":\"name\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0},{\"label\":\"状态\",\"value\":\"status\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0}]' WHERE `id`='1352844810538450955';
/* 删除移动端方案业务表的项目字段的多租户引用 */
UPDATE dc_table_column SET `child_fields`='[{\"label\":\"标识\",\"value\":\"id\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0},{\"label\":\"状态\",\"value\":\"status\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0},{\"label\":\"名称\",\"value\":\"name\",\"javaType\":{\"id\":\"8107\",\"name\":\"String\",\"value\":\"String\"},\"dcTable\":{\"id\":\"1351544466239864850\",\"name\":\"prj_project\",\"scheme\":{\"name\":\"项目\",\"packageName\":\"com.geeke\",\"moduleName\":\"project\",\"subModuleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"Project\",\"isTreeTable\":false,\"columnList\":[]},\"customType\":{\"name\":\"\",\"scheme\":{\"name\":\"\",\"packageName\":\"\",\"moduleName\":\"\",\"replace\":false,\"dcTableList\":[],\"children\":[]},\"className\":\"\",\"comments\":\"\",\"filter\":\"\",\"isTreeTable\":false,\"columnList\":[]},\"decimalLenth\":0}]' WHERE `id`='1440433057862000839';

/* 代码方案调整 */
UPDATE dc_scheme
SET project_id=88888888, name='项目', package_name='com.geeke', module_name='project', sub_module_name='', function_name='项目管理', template_id=1246082437705335035, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 非工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return true\\n  }\\n\\n  return false\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n              {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              // 分页属性\\n              {{if item.__slot__.pageFlag}}\\n                {{item['':data'']}}Page: 1,\\n                {{item['':data'']}}Total: 0,\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.layout == ''queryTableLayout''}}\\n              // 查询表格列头\\n              table{{item.__config__.formId}}Column: [\\n                {{each item.__config__.children filed}}\\n                  {{if filed.__config__.elName == ''ElTableColumn''}}\\n                    { {{@filed | getAttributes }}   display: {{filed.__config__.display}} },\\n                  {{/if}}\\n                {{/each}}\\n              ]\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n            // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/api/project/","fileName":"project.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n\\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'',\\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\n\\nexport const linkJdbcConnection = (project) =>\\n  request({\\n    url: ''/project/project/linkJdbcConnection'',\\n    method: ''post'',\\n    data: project\\n  })\\n\\nexport const checkDataSource = (projectId) =>\\n  request({\\n    url: ''/project/project/checkDataSource/'' + projectId,\\n    method: ''get''\\n  })\\n\\n  export const listProjectTableColumn = (search) =>\\n  request({\\n    url: ''/project/project/listProjectTableColumn'',\\n    method: ''post'',\\n    data: search\\n  })\\n  ","__config__":{"children":[]},"locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getProjectById = (id) =>\\n  request({\\n    url: ''/project/project/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listProjectPage = (search) =>\\n  request({\\n    url: ''/project/project/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listProjectAll = (search) =>\\n  request({\\n    url: ''/project/project/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveProject = (project) =>\\n  request({\\n    url: ''/project/project/save'',\\n    method: ''post'',\\n    data: project\\n  })\\n\\nexport const deleteProject = (project) =>\\n  request({\\n    url: ''/project/project/delete'',\\n    method: ''post'',\\n    data: project\\n  })\\n\\nexport const bulkInsertProject = (projects) =>\\n  request({\\n    url: ''/project/project/bulkInsert'',\\n    method: ''post'',\\n    data: projects\\n  })\\n\\nexport const bulkUpdateProject = (projects) =>\\n  request({\\n    url: ''/project/project/bulkUpdate'',\\n    method: ''post'',\\n    data: projects\\n  })\\n\\nexport const bulkDeleteProject = (projects) =>\\n  request({\\n    url: ''/project/project/bulkDelete'',\\n    method: ''post'',\\n    data: projects\\n  })\\n\\nexport const linkJdbcConnection = (project) =>\\n  request({\\n    url: ''/project/project/linkJdbcConnection'',\\n    method: ''post'',\\n    data: project\\n  })\\n\\nexport const checkDataSource = (projectId) =>\\n  request({\\n    url: ''/project/project/checkDataSource/'' + projectId,\\n    method: ''get''\\n  })\\n\\nexport const listProjectTableColumn = (search) =>\\n  request({\\n    url: ''/project/project/listProjectTableColumn'',\\n    method: ''post'',\\n    data: search\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/project//controller","fileName":"ProjectController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.dbtype.entity.SysDbType;\\nimport com.geeke.project.annotation.DataSourceChange;\\nimport com.geeke.utils.JdbcUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport java.sql.Connection;\\nimport java.util.Objects;\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @DataSourceChange\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        ).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        String id = {{table.className | lowerCase}}Service.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{/if}}\\n\\n    @DataSourceChange(remove = true)\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n\\n    @PostMapping(value = \\"linkJdbcConnection\\")\\n    public ResponseEntity<JSONObject> linkJdbcConnection(@RequestBody Project entity) {\\n        String username = entity.getDbUsername();\\n        String password = entity.getDbPassword();\\n        String url = entity.getDbUrl();\\n        SysDbType dbType = entity.getDbType();\\n        Objects.requireNonNull(dbType, \\"项目获取不到相关数据库类型!\\");\\n        String driver = dbType.getDriver();\\n        if (\\n            StringUtils.isEmpty(username) ||\\n            StringUtils.isEmpty(password) ||\\n            StringUtils.isEmpty(url) ||\\n            StringUtils.isEmpty(driver)\\n        ) {\\n            throw new CommonJsonException(ErrorEnum.E_90005);\\n        }\\n        JdbcUtils jdbcUtils = new JdbcUtils(username, password, url, driver);\\n        Connection connection = jdbcUtils.getConnection();\\n        Objects.requireNonNull(connection, \\"获取不到连接!\\");\\n        //可以关闭了 不能造成资源浪费\\n        jdbcUtils.close(connection);\\n        return ResponseEntity.ok(ResultUtil.successJson());\\n    }\\n\\n    @GetMapping(value = \\"checkDataSource/{projectId}\\")\\n    public ResponseEntity<JSONObject> checkDataSource(@PathVariable(\\"projectId\\") String projectId) {\\n        Project project = projectService.get(projectId);\\n        String username = project.getDbUsername();\\n        String password = project.getDbPassword();\\n        String url = project.getDbUrl();\\n        SysDbType dbType = project.getDbType();\\n        Objects.requireNonNull(dbType, \\"项目获取不到相关数据库类型!\\");\\n        String driver = dbType.getDriver();\\n        if (\\n            StringUtils.isNotEmpty(username) &&\\n            StringUtils.isNotEmpty(password) &&\\n            StringUtils.isNotEmpty(url) &&\\n            StringUtils.isNotEmpty(driver)\\n        ) {\\n            JdbcUtils jdbcUtils = new JdbcUtils(username, password, url, driver);\\n            Connection connection = jdbcUtils.getConnection();\\n            Objects.requireNonNull(connection, \\"获取不到连接!\\");\\n            //可以关闭了 不要造成资源浪费\\n            jdbcUtils.close(connection);\\n            return ResponseEntity.ok(ResultUtil.successJson());\\n        } else {\\n            throw new CommonJsonException(ErrorEnum.E_90006);\\n        }\\n    }\\n    \\n    @PostMapping(value = \\"listProjectTableColumn\\")\\n    public ResponseEntity<JSONObject> listProjectTableColumn(@RequestBody SearchParams searchParams) {\\n        List<Project> result = projectService.listProjectTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.project.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.dbtype.entity.SysDbType;\\nimport com.geeke.project.annotation.DataSourceChange;\\nimport com.geeke.project.entity.Project;\\nimport com.geeke.project.service.ProjectService;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.JdbcUtils;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport java.sql.Connection;\\nimport java.util.List;\\nimport java.util.Objects;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * 项目管理Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/project/project\\")\\npublic class ProjectController extends BaseController {\\n\\n    @Autowired\\n    private ProjectService projectService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        Project entity = projectService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<Project> result = projectService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<Project> result = projectService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @DataSourceChange\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(@RequestBody Project entity) {\\n        String id = projectService.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n\\n    @DataSourceChange(remove = true)\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody Project entity) {\\n        int rows = projectService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<Project> entitys) {\\n        List<String> ids = projectService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<Project> entitys) {\\n        List<String> ids = projectService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<Project> entitys) {\\n        int rows = projectService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"linkJdbcConnection\\")\\n    public ResponseEntity<JSONObject> linkJdbcConnection(@RequestBody Project entity) {\\n        String username = entity.getDbUsername();\\n        String password = entity.getDbPassword();\\n        String url = entity.getDbUrl();\\n        SysDbType dbType = entity.getDbType();\\n        Objects.requireNonNull(dbType, \\"项目获取不到相关数据库类型!\\");\\n        String driver = dbType.getDriver();\\n        if (\\n            StringUtils.isEmpty(username) ||\\n            StringUtils.isEmpty(password) ||\\n            StringUtils.isEmpty(url) ||\\n            StringUtils.isEmpty(driver)\\n        ) {\\n            throw new CommonJsonException(ErrorEnum.E_90005);\\n        }\\n        JdbcUtils jdbcUtils = new JdbcUtils(username, password, url, driver);\\n        Connection connection = jdbcUtils.getConnection();\\n        Objects.requireNonNull(connection, \\"获取不到连接!\\");\\n        //可以关闭了 不能造成资源浪费\\n        jdbcUtils.close(connection);\\n        return ResponseEntity.ok(ResultUtil.successJson());\\n    }\\n\\n    @GetMapping(value = \\"checkDataSource/{projectId}\\")\\n    public ResponseEntity<JSONObject> checkDataSource(@PathVariable(\\"projectId\\") String projectId) {\\n        Project project = projectService.get(projectId);\\n        String username = project.getDbUsername();\\n        String password = project.getDbPassword();\\n        String url = project.getDbUrl();\\n        SysDbType dbType = project.getDbType();\\n        Objects.requireNonNull(dbType, \\"项目获取不到相关数据库类型!\\");\\n        String driver = dbType.getDriver();\\n        if (\\n            StringUtils.isNotEmpty(username) &&\\n            StringUtils.isNotEmpty(password) &&\\n            StringUtils.isNotEmpty(url) &&\\n            StringUtils.isNotEmpty(driver)\\n        ) {\\n            JdbcUtils jdbcUtils = new JdbcUtils(username, password, url, driver);\\n            Connection connection = jdbcUtils.getConnection();\\n            Objects.requireNonNull(connection, \\"获取不到连接!\\");\\n            //可以关闭了 不要造成资源浪费\\n            jdbcUtils.close(connection);\\n            return ResponseEntity.ok(ResultUtil.successJson());\\n        } else {\\n            throw new CommonJsonException(ErrorEnum.E_90006);\\n        }\\n    }\\n\\n    @PostMapping(value = \\"listProjectTableColumn\\")\\n    public ResponseEntity<JSONObject> listProjectTableColumn(@RequestBody SearchParams searchParams) {\\n        List<Project> result = projectService.listProjectTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/project//service","fileName":"ProjectService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\n\\nimport java.util.Map;\\nimport java.util.List;\\n{{if childTables.length > 0}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\n{{/if}}\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{child.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{child.className}}Service;\\n  {{/each}}\\n{{/if}}\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport com.google.common.collect.Lists;\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n    {{if table.isMainTable === ''1''}}\\n      {{each childTables as child}}\\n    @Autowired\\n    private {{child.className}}Dao {{child.className | lowerCase}}Dao;\\n    @Autowired\\n    private {{child.className}}Service {{child.className | lowerCase}}Service;\\n      {{/each}}\\n    {{/if}}\\n    {{if table.autoSerialExists}}\\n    @Autowired\\n    SequenceService sequenceService;\\n    {{/if}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Autowired\\n    private SysFileService sysFileService;\\n    {{/if}}\\n    {{if table.filter}}\\n    @Override\\n    public Page<{{table.className}}> listPage(List<Parameter> parameters, int offset, int limit, String orderby) {\\n        String filter = \\"{{@ table.filter}}\\";\\n        return super.listPage(super.addFilter(parameters, filter), offset, limit, orderby);\\n    }\\n\\n    @Override\\n    public List<{{table.className}}> listAll(List<Parameter> parameters, String orderby) {\\n        String filter = \\"{{@ table.filter}}\\";\\n        PageRequest pageRequest = new PageRequest(super.addFilter(parameters, filter), orderby);\\n        return dao.listAll(pageRequest);\\n    }\\n    {{/if}}\\n    {{if table.isMainTable === ''1''}}\\n    @Override\\n    public {{table.className}} get(String id) {\\n      {{table.className}} {{table.className | lowerCase}} = super.get(id);\\n      {{if childTables.length > 0}}\\n      List<Parameter> params = null;\\n      PageRequest pageRequest;\\n        {{each childTables as child}}\\n      /*获取子表列表   {{child.comments}}*/\\n      params = Lists.newArrayList();\\n      {{if child.filter}}\\n      String filter = \\"{{@ child.filter}}\\";\\n      params = super.addFilter(params, filter);\\n      {{/if}}\\n          {{each child.columnList as column}}\\n            {{if child.parentTableFk === column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      pageRequest = new PageRequest(params);\\n      {{table.className | lowerCase}}.set{{child.className}}List({{child.className | lowerCase}}Dao.listAll(pageRequest));\\n            {{/if}}\\n      \\n          {{/each}}\\n        {{/each}}\\n      {{/if}}\\n      return {{table.className | lowerCase}};\\n    }\\n\\n    {{if table.source == ''BASE TABLE''}}\\n    @Transactional(readOnly = false)\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}},\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      MultipartFile[] {{c.javaField}}Uploads,\\n            {{/if}}\\n        {{/each}}\\n      String[] deleteIds) throws java.io.IOException {\\n    {{else}}\\n    @Override\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}}) {\\n    {{/if}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{table.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{c.defVal}}\\", {{table.className | lowerCase}});\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(sn);\\n        }\\n            {{/if}}\\n        {{/each}}\\n        {{if table.constraintList && table.constraintList.length > 0}}\\n        Map<String, String> colMaps = Maps.newHashMap();\\n          {{each table.constraintList constraint}}\\n              {{if constraint.name}}\\n                  // {{constraint.name}}\\n              {{/if}}\\n        colMaps.clear();\\n              {{each constraint.constraintColumn.split(\\",\\") column}}\\n                  {{each table.columnList c}}\\n                      {{if c.name == column}}\\n                        {{if c.javaType.value === ''This'' || c.javaType.value === ''Custom''}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_''}}.{{c.associatedField | camelCase ''_''}}\\");   \\n                        {{else}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n                        {{/if}}\\n                      {{/if}}\\n                  {{/each}}\\n              {{/each}}\\n        if(exists(dao, {{table.className | lowerCase}}, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        } \\n          {{/each}}\\n      {{/if}}\\n\\n        {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n        if(StringUtils.isEmpty({{table.className | lowerCase}}.get{{c.javaField | upperCase}}())) {\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList({{c.javaField}}Uploads, {{table.className | lowerCase}}.get{{c.javaField | upperCase}}());\\n            {{/if}}\\n        {{/each}}\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n        {{/if}}\\n\\n        {{table.className}} {{table.className | lowerCase}}Temp = super.save({{table.className | lowerCase}});\\n        \\n        {{if table.hasPassWordInput}}\\n        // 加密字段处理\\n        if (StringUtils.isNoneBlank({{table.className | lowerCase}}Temp.getId())) {\\n            {{each table.columnList c}}\\n                {{if c.javaType && c.javaType.value == ''Password''}}\\n            // 设置加密字段  {{c.comments}}\\n            if({{table.className | lowerCase}}.get{{c.javaField | upperCase}}Update()) {\\n                Md5Hash md5 = new Md5Hash({{table.className | lowerCase}}.get{{c.javaField | upperCase}}(), {{table.className | lowerCase}}.getId(), 6);\\n                   String md5Password = md5.toHex();\\n                   dao.update{{c.javaField | upperCase}}({{table.className | lowerCase}}.getId(), md5Password);\\n               }\\n                {{/if}}\\n            {{/each}}\\n        }\\n        {{/if}}  \\n        {{if childTables.length > 0}}\\n          {{each childTables as child}}\\n        /* 保存子表数据     {{child.comments}} */\\n        save{{child.className}}List({{table.className | lowerCase}}Temp);\\n          {{/each}}\\n        {{/if}}      \\n        return {{table.className | lowerCase}}Temp;\\n    }\\n    /**\\n     * 删除\\n     * @param {{table.className | lowerCase}}\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete({{table.className}} {{table.className | lowerCase}}) {\\n      {{if childTables.length > 0}}\\n      List<Parameter> params = null;\\n      PageRequest pageRequest;\\n        {{each childTables as child}}\\n      /* 处理子表     {{child.comments}} */\\n      params = Lists.newArrayList();\\n          {{each child.columnList as column}}\\n            {{if child.parentTableFk === column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      pageRequest = new PageRequest(params);\\n      {{table.className | lowerCase}}.set{{child.className}}List({{child.className | lowerCase}}Dao.listAll(pageRequest));\\n            {{/if}}\\n          {{/each}}\\n      if({{table.className | lowerCase}}.get{{child.className}}List() != null && {{table.className | lowerCase}}.get{{child.className}}List().size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkDelete({{table.className | lowerCase}}.get{{child.className}}List());\\n      }\\n        {{/each}}\\n      {{/if}}\\n      int rows = super.delete({{table.className | lowerCase}});\\n      return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param {{table.className | lowerCase}}List\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<{{table.className}}> {{table.className | lowerCase}}List) {\\n      {{if childTables.length > 0}}\\n      for({{table.className}} {{table.className | lowerCase}}: {{table.className | lowerCase}}List) {\\n        delete({{table.className | lowerCase}});\\n      }\\n      {{/if}}\\n      return {{table.className | lowerCase}}List.size();\\n    }\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @Transactional(readOnly = false)\\n    public int change{{c.javaField | upperCase}}(String id, String pass) {\\n        // Md5密码\\n        Md5Hash md5 = new Md5Hash(pass, id, 6);\\n        String md5Password = md5.toHex();\\n    \\n        int rows = dao.update{{c.javaField | upperCase}}(id, md5Password);\\n        return rows;\\n    }\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n\\n  {{if childTables.length > 0}}\\n  /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, {{table.className}} entity) {\\n      Action action = super.createAction(actionTypeId, entity);\\n      if(action == null) {\\n          return null;\\n      }\\n      // 删除时记录把保存的数据保存到回收站\\n      if(ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n        {{each childTables as child}}\\n          {{if child.delFlagExists}}\\n        for({{child.className}} child: entity.get{{child.className}}List()) {\\n          ActionRecycle recycle = new ActionRecycle();\\n          recycle.setTableName(child.getBusTableName());\\n          recycle.setObjectId(child.getId());\\n          recycle.setObjectName((String)Reflections.invokeGetter(child, \\"name\\"));\\n          action.getActionRecycleList().add(recycle);            \\n        }\\n          {{/if}}\\n        {{/each}}\\n      }\\n      return action;\\n    }\\n  {{/if}}\\n  {{if childTables.length > 0}}\\n    {{each childTables as child}}\\n    /* 保存子表数据     {{child.comments}} */\\n    private void save{{child.className}}List({{table.className}} {{table.className | lowerCase}}) {\\n      List<Parameter> params = Lists.newArrayList();\\n      {{each child.columnList as column}}\\n        {{if child.parentTableFk == column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      PageRequest pageRequest = new PageRequest(params);\\n      List<{{child.className}}> list_{{child.className}} = {{child.className | lowerCase}}Dao.listAll(pageRequest);\\n        {{/if}}\\n      {{/each}}\\n      List<{{child.className}}> deletes = Lists.newArrayList(); // 删除列表\\n      List<{{child.className}}> inserts = Lists.newArrayList(); // 添加列表\\n      List<{{child.className}}> updates = Lists.newArrayList(); // 更新列表\\n      for({{child.className}} {{child.className | lowerCase}}Saved: list_{{child.className}}) {\\n        boolean found = false;   \\n        for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n          if({{child.className | lowerCase}}Saved.getId().equals({{child.className | lowerCase}}.getId())){\\n            found = true;\\n            break;\\n          }\\n        }\\n        if(!found) {\\n          deletes.add({{child.className | lowerCase}}Saved);\\n        }\\n      }\\n      if(deletes.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkDelete(deletes);\\n      }\\n      for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n        {{each child.columnList as column}}\\n          {{if column.javaType && column.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{column.defVal}}\\", {{child.className | lowerCase}});\\n            {{child.className | lowerCase}}.set{{column.javaField | upperCase}}(sn);\\n        }\\n          {{/if}}\\n        {{/each}}\\n        {{if child.constraintList && child.constraintList.length > 0}}\\n        Map<String, String> col{{child.className | lowerCase}}Maps = Maps.newHashMap();\\n        {{each child.constraintList constraint}}\\n                {{if constraint.name}}\\n        // {{constraint.name}}\\n                {{/if}}\\n        col{{child.className | lowerCase}}Maps.clear();\\n          {{each constraint.constraintColumn.split(\\",\\") column}}\\n            {{each child.columnList c}}\\n              {{if c.name == column}}\\n        col{{child.className | lowerCase}}Maps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n              {{/if}}\\n            {{/each}}\\n          {{/each}}\\n        if(exists({{child.className | lowerCase}}Dao, {{child.className | lowerCase}}, col{{child.className | lowerCase}}Maps)) {\\n          throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        }\\n        {{/each}}\\n        {{/if}}\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())) {\\n          {{if child.parentTableFk}}\\n            {{if child.parentTableFk == ''id''}}\\n          {{child.className | lowerCase}}.setId({{table.className | lowerCase}}.getId());  // 子表id与父表id一致\\n            {{else}}\\n              {{each child.columnList column}}\\n                {{if child.parentTableFk == column.name}}\\n          {{child.className | lowerCase}}.set{{column.javaField | upperCase}}({{table.className | lowerCase}});\\n                {{/if}}\\n              {{/each}}\\n            {{/if}}\\n          {{/if}}\\n          inserts.add({{child.className | lowerCase}});\\n        } else {\\n          updates.add({{child.className | lowerCase}});\\n        }\\n        {{if child.hasPassWordInput}}\\n          {{each child.columnList column}}\\n            {{if column.javaType && column.javaType.value == ''Password''}}\\n        // 设置加密字段  {{column.comments}}\\n        if({{child.className | lowerCase}}.get{{column.javaField | upperCase}}() != null) {\\n          Md5Hash md5 = new Md5Hash({{child.className | lowerCase}}.get{{column.javaField | upperCase}}(), {{child.className | lowerCase}}.getId(), 6);\\n          String md5Password = md5.toHex();\\n          {{child.className | lowerCase}}Service.update{{column.javaField | upperCase}}({{child.className | lowerCase}}.getId(), md5Password);\\n        }\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      }\\n      if(updates.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkUpdate(updates);\\n      }\\n      if(inserts.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkInsert(inserts);\\n      }\\n    }\\n      {{/each}}\\n    {{/if}}\\n    {{/if}}\\n  {{else}}\\n    \\n  {{/if}}\\n\\n  \\n    /**\\n     * 查询项目包含后端方案包含业务表包含业务表字段\\n     * @param parameters\\n     * @param orderby\\n     * @return\\n     */\\n    public List<Project> listProjectTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        List<Project> list = dao.listProjectTableColumn(pageRequest);\\n        return list;\\n    }\\n    \\n    /**\\n     * 数据源查询所有项目\\n     * @return\\n     */\\n    public List<Project> listForDataSource() {\\n    \\treturn dao.listForDataSource();\\n    }\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.project.service;\\n\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.project.dao.MemberDao;\\nimport com.geeke.project.dao.ProjectDao;\\nimport com.geeke.project.entity.Member;\\nimport com.geeke.project.entity.Project;\\nimport com.geeke.project.service.MemberService;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Lists;\\nimport com.google.common.collect.Maps;\\nimport java.util.List;\\nimport java.util.Map;\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n\\n/**\\n * 项目管理Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"projectService\\")\\n@Transactional(readOnly = true)\\npublic class ProjectService extends CrudService<ProjectDao, Project> {\\n\\n    @Autowired\\n    private MemberDao memberDao;\\n\\n    @Autowired\\n    private MemberService memberService;\\n\\n    @Override\\n    public Project get(String id) {\\n        Project project = super.get(id);\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n\\n        /*获取子表列表   项目成员*/\\n        params = Lists.newArrayList();\\n\\n        params.add(new Parameter(\\"project_id\\", \\"=\\", project.getId()));\\n        pageRequest = new PageRequest(params);\\n        project.setMemberList(memberDao.listAll(pageRequest));\\n\\n        return project;\\n    }\\n\\n    @Transactional(readOnly = false)\\n    @Override\\n    public Project save(Project project) {\\n        Project projectTemp = super.save(project);\\n\\n        /* 保存子表数据     项目成员 */\\n        saveMemberList(projectTemp);\\n\\n        return projectTemp;\\n    }\\n\\n    /**\\n     * 删除\\n     * @param project\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete(Project project) {\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n\\n        /* 处理子表     项目成员 */\\n        params = Lists.newArrayList();\\n\\n        params.add(new Parameter(\\"project_id\\", \\"=\\", project.getId()));\\n        pageRequest = new PageRequest(params);\\n        project.setMemberList(memberDao.listAll(pageRequest));\\n\\n        if (project.getMemberList() != null && project.getMemberList().size() > 0) {\\n            memberService.bulkDelete(project.getMemberList());\\n        }\\n\\n        int rows = super.delete(project);\\n        return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param projectList\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<Project> projectList) {\\n        for (Project project : projectList) {\\n            delete(project);\\n        }\\n\\n        return projectList.size();\\n    }\\n\\n    /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, Project entity) {\\n        Action action = super.createAction(actionTypeId, entity);\\n        if (action == null) {\\n            return null;\\n        }\\n        // 删除时记录把保存的数据保存到回收站\\n        if (ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n            for (Member child : entity.getMemberList()) {\\n                ActionRecycle recycle = new ActionRecycle();\\n                recycle.setTableName(child.getBusTableName());\\n                recycle.setObjectId(child.getId());\\n                recycle.setObjectName((String) Reflections.invokeGetter(child, \\"name\\"));\\n                action.getActionRecycleList().add(recycle);\\n            }\\n        }\\n        return action;\\n    }\\n\\n    /* 保存子表数据     项目成员 */\\n    private void saveMemberList(Project project) {\\n        List<Parameter> params = Lists.newArrayList();\\n\\n        params.add(new Parameter(\\"project_id\\", \\"=\\", project.getId()));\\n        PageRequest pageRequest = new PageRequest(params);\\n        List<Member> list_Member = memberDao.listAll(pageRequest);\\n\\n        List<Member> deletes = Lists.newArrayList(); // 删除列表\\n        List<Member> inserts = Lists.newArrayList(); // 添加列表\\n        List<Member> updates = Lists.newArrayList(); // 更新列表\\n        for (Member memberSaved : list_Member) {\\n            boolean found = false;\\n            for (Member member : project.getMemberList()) {\\n                if (memberSaved.getId().equals(member.getId())) {\\n                    found = true;\\n                    break;\\n                }\\n            }\\n            if (!found) {\\n                deletes.add(memberSaved);\\n            }\\n        }\\n        if (deletes.size() > 0) {\\n            memberService.bulkDelete(deletes);\\n        }\\n        for (Member member : project.getMemberList()) {\\n            if (StringUtils.isBlank(member.getId())) {\\n                member.setProject(project);\\n\\n                inserts.add(member);\\n            } else {\\n                updates.add(member);\\n            }\\n        }\\n        if (updates.size() > 0) {\\n            memberService.bulkUpdate(updates);\\n        }\\n        if (inserts.size() > 0) {\\n            memberService.bulkInsert(inserts);\\n        }\\n    }\\n\\n    /**\\n     * 查询项目包含后端方案包含业务表包含业务表字段\\n     * @param parameters\\n     * @param orderby\\n     * @return\\n     */\\n    public List<Project> listProjectTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        List<Project> list = dao.listProjectTableColumn(pageRequest);\\n        return list;\\n    }\\n\\n    /**\\n     * 数据源查询所有项目\\n     * @return\\n     */\\n    public List<Project> listForDataSource() {\\n        return dao.listForDataSource();\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/project//dao","fileName":"ProjectDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\nimport com.geeke.common.data.PageRequest;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\nimport java.util.List;\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n\\n    /**\\n     * 查询项目包含后端方案包含业务表包含业务表字段\\n     * @param var1\\n     * @return\\n     */\\n\\t  public List<Project> listProjectTableColumn(PageRequest var1);\\n    \\n    \\n    /**\\n     * 数据源查询所有项目\\n     * @return\\n     */\\n    public List<Project> listForDataSource();\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.project.dao;\\n\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.project.entity.Project;\\nimport java.util.List;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 项目管理DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface ProjectDao extends CrudDao<Project> {\\n    /**\\n     * 查询项目包含后端方案包含业务表包含业务表字段\\n     * @param var1\\n     * @return\\n     */\\n    public List<Project> listProjectTableColumn(PageRequest var1);\\n\\n    /**\\n     * 数据源查询所有项目\\n     * @return\\n     */\\n    public List<Project> listForDataSource();\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/project//entity","fileName":"Project.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\nimport com.geeke.dc.entity.DcScheme;\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\n  {{/each}}\\n{{/if}}\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{c.currentTable.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t{{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n  private List<{{child.className}}> {{child.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n    {{/each}}\\n  {{/if}}\\n  \\n    private List<DcScheme> children = Lists.newArrayList(); // 方案集合(使用级联二级三级保证命名相同)\\n\\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{c.currentTable.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{c.currentTable.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n  {{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n\\tpublic List<{{child.className}}> get{{child.className}}List() {\\n\\t\\treturn {{child.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{child.className}}List(List<{{child.className}}> {{child.className | lowerCase}}List) {\\n\\t\\tthis.{{child.className | lowerCase}}List = {{child.className | lowerCase}}List;\\n\\t}\\n\\t  {{/each}}\\n  {{/if}}\\n\\t\\n   \\n    public List<DcScheme> getChildren() { return children; }\\n    public void setChildren(List<DcScheme> children) { this.children = children; }\\n\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"locked":true,"code":"package com.geeke.project.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.admin.entity.User;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.geeke.dbtype.entity.SysDbType;\\nimport com.geeke.dc.entity.DcScheme;\\nimport com.geeke.project.entity.Member;\\nimport com.google.common.collect.Lists;\\nimport java.util.List;\\nimport javax.validation.constraints.NotNull;\\nimport org.hibernate.validator.constraints.Length;\\n\\n/**\\n * 项目管理Entity\\n * @author\\n * @version\\n */\\n\\npublic class Project extends DataEntity<Project> {\\n\\n    private static final long serialVersionUID = 1351544466239864850L;\\n\\n    private User user; // 项目负责人\\n\\n    private String name; // 名称\\n\\n    private String status = \\"0\\"; // 状态\\n\\n    private String dbUsername; // 数据库用户\\n\\n    private String dbPassword; // 数据库密码\\n\\n    private String dbUrl; // 数据库地址\\n\\n    private String dbIp; // 数据库IP\\n\\n    private String dbPort; // 数据库端口\\n\\n    private String dbName; // 数据库名\\n\\n    private SysDbType dbType; // 数据库类型\\n\\n    private String cloudName; // 服务名\\n\\n    private List<Member> memberList = Lists.newArrayList(); // 子表列表\\n\\n    private List<DcScheme> children = Lists.newArrayList(); // 方案集合(使用级联二级三级保证命名相同)\\n\\n    // 构造方法\\n    public Project() {\\n        super();\\n    }\\n\\n    public Project(String id) {\\n        super(id);\\n    }\\n\\n    // 生成get和set方法\\n\\n    @NotNull(message = \\"项目负责人不能为空\\")\\n    public User getUser() {\\n        return user;\\n    }\\n\\n    public void setUser(User user) {\\n        this.user = user;\\n    }\\n\\n    @Length(min = 0, max = 128, message = \\"名称长度必须介于 0 和 128 之间\\")\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    @Length(min = 1, max = 1, message = \\"状态长度必须介于 1 和 1 之间\\")\\n    public String getStatus() {\\n        return status;\\n    }\\n\\n    public void setStatus(String status) {\\n        this.status = status;\\n    }\\n\\n    @Length(min = 0, max = 64, message = \\"数据库用户长度必须介于 0 和 64 之间\\")\\n    public String getDbUsername() {\\n        return dbUsername;\\n    }\\n\\n    public void setDbUsername(String dbUsername) {\\n        this.dbUsername = dbUsername;\\n    }\\n\\n    @Length(min = 0, max = 64, message = \\"数据库密码长度必须介于 0 和 64 之间\\")\\n    public String getDbPassword() {\\n        return dbPassword;\\n    }\\n\\n    public void setDbPassword(String dbPassword) {\\n        this.dbPassword = dbPassword;\\n    }\\n\\n    @Length(min = 0, max = 128, message = \\"数据库地址长度必须介于 0 和 128 之间\\")\\n    public String getDbUrl() {\\n        return dbUrl;\\n    }\\n\\n    public void setDbUrl(String dbUrl) {\\n        this.dbUrl = dbUrl;\\n    }\\n\\n    @Length(min = 1, max = 64, message = \\"数据库IP长度必须介于 1 和 64 之间\\")\\n    public String getDbIp() {\\n        return dbIp;\\n    }\\n\\n    public void setDbIp(String dbIp) {\\n        this.dbIp = dbIp;\\n    }\\n\\n    @Length(min = 1, max = 10, message = \\"数据库端口长度必须介于 1 和 10 之间\\")\\n    public String getDbPort() {\\n        return dbPort;\\n    }\\n\\n    public void setDbPort(String dbPort) {\\n        this.dbPort = dbPort;\\n    }\\n\\n    @Length(min = 1, max = 32, message = \\"数据库名长度必须介于 1 和 32 之间\\")\\n    public String getDbName() {\\n        return dbName;\\n    }\\n\\n    public void setDbName(String dbName) {\\n        this.dbName = dbName;\\n    }\\n\\n    public SysDbType getDbType() {\\n        return dbType;\\n    }\\n\\n    public void setDbType(SysDbType dbType) {\\n        this.dbType = dbType;\\n    }\\n\\n    @Length(min = 1, max = 64, message = \\"服务名长度必须介于 1 和 64 之间\\")\\n    public String getCloudName() {\\n        return cloudName;\\n    }\\n\\n    public void setCloudName(String cloudName) {\\n        this.cloudName = cloudName;\\n    }\\n\\n    public List<Member> getMemberList() {\\n        return memberList;\\n    }\\n\\n    public void setMemberList(List<Member> memberList) {\\n        this.memberList = memberList;\\n    }\\n\\n    public List<DcScheme> getChildren() {\\n        return children;\\n    }\\n\\n    public void setChildren(List<DcScheme> children) {\\n        this.children = children;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"prj_project\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1351544466239864850\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/project/","fileName":"ProjectDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n      INNER JOIN prj_member member ON a.id = member.project_id\\n      INNER JOIN sys_user muser ON muser.id = member.user_id AND muser.id = ${@com.geeke.utils.SessionUtils@getUser().getId()}\\n\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n                {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.customType.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n                {{else}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}\\n                {{/if}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n              {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.currentTable.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n              {{else}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}\\n              {{/if}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n\\n  <resultMap id=\\"getProjectTableColumn\\" type=\\"com.geeke.project.entity.Project\\">\\n    <id column=\\"id\\" property=\\"id\\" />\\n    <result column=\\"name\\" property=\\"name\\" />\\n    <result column=\\"cloudName\\" property=\\"cloudName\\" />\\n    <collection property=\\"children\\" ofType=\\"com.geeke.dc.entity.DcScheme\\">\\n      <id column=\\"schemeId\\" property=\\"id\\" />\\n      <result column=\\"schemeName\\" property=\\"name\\" />\\n      <result column=\\"packageName\\" property=\\"packageName\\" />\\n      <result column=\\"moduleName\\" property=\\"moduleName\\" />\\n      <result column=\\"subModuleName\\" property=\\"subModuleName\\" />\\n      <collection property=\\"children\\" ofType=\\"com.geeke.dc.entity.DcTable\\">\\n        <id column=\\"tableId\\" property=\\"id\\" />\\n        <result column=\\"tableName\\" property=\\"name\\" />\\n        <result column=\\"className\\" property=\\"className\\" />\\n        <result column=\\"comments\\" property=\\"comments\\" />\\n        <result column=\\"filter\\" property=\\"filter\\" />\\n        <result column=\\"dcScheme.id\\" property=\\"scheme.id\\" />\\n        <result column=\\"dcScheme.name\\" property=\\"scheme.name\\" />\\n        <result column=\\"dcScheme.packageName\\" property=\\"scheme.packageName\\" />\\n        <result column=\\"dcScheme.moduleName\\" property=\\"scheme.moduleName\\" />\\n        <result column=\\"dcScheme.subModuleName\\" property=\\"scheme.subModuleName\\" />\\n        <collection property=\\"columnList\\" ofType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n          <id property=\\"id\\" column=\\"columnId\\" />\\n          <result column=\\"columnName\\" property=\\"name\\" />\\n          <result column=\\"columnComments\\" property=\\"comments\\" />\\n          <result column=\\"dcTable.id\\" property=\\"dcTable.id\\" />\\n          <result column=\\"dcTable.name\\" property=\\"dcTable.name\\" />\\n          <result column=\\"dcTable.className\\" property=\\"dcTable.className\\" />\\n          <result column=\\"dcTable.scheme.name\\" property=\\"dcTable.scheme.name\\" />\\n          <result column=\\"dcTable.scheme.packageName\\" property=\\"dcTable.scheme.packageName\\" />\\n          <result column=\\"dcTable.scheme.moduleName\\" property=\\"dcTable.scheme.moduleName\\" />\\n          <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n          <result column=\\"jdbcType\\" property=\\"jdbcType\\" />\\n          <result column=\\"javaType.id\\" property=\\"javaType.id\\" />\\n          <result column=\\"javaType.name\\" property=\\"javaType.name\\" />\\n          <result column=\\"javaType.value\\" property=\\"javaType.value\\" />\\n          <result column=\\"customType.id\\" property=\\"customType.id\\" />\\n          <result column=\\"customType.name\\" property=\\"customType.name\\" />\\n          <result column=\\"customType.comments\\" property=\\"customType.comments\\" />\\n          <result column=\\"customType.className\\" property=\\"customType.className\\" />\\n          <result column=\\"customType.filter\\" property=\\"customType.filter\\" />\\n          <result column=\\"customType.scheme.name\\" property=\\"customType.scheme.name\\" />\\n          <result column=\\"customType.scheme.packageName\\" property=\\"customType.scheme.packageName\\" />\\n          <result column=\\"customType.scheme.moduleName\\" property=\\"customType.scheme.moduleName\\" />\\n          <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n          <result column=\\"currentSchemeTable\\" property=\\"currentSchemeTable\\" />\\n          <result column=\\"javaField\\" property=\\"javaField\\" />\\n          <result column=\\"associatedField\\" property=\\"associatedField\\" />\\n        </collection>\\n      </collection>\\n    </collection>\\n  </resultMap>\\n  <!--查询项目包含后端方案包含业务表包含业务表字段-->\\n  <select id=\\"listProjectTableColumn\\" resultMap=\\"getProjectTableColumn\\">\\n    SELECT\\n    a.id as id,\\n    a.name as name,\\n    a.cloud_name as cloudName,\\n    `scheme`.id as schemeId,\\n    `scheme`.name as schemeName,\\n    `scheme`.package_name as packageName,\\n    `scheme`.module_name as moduleName,\\n    `scheme`.sub_module_name as subModuleName,\\n    table.id as tableId,\\n    table.name as tableName,\\n    table.class_name as className,\\n    table.comments as comments,\\n    table.filter as filter,\\n    table.scheme_id AS \\"dcScheme.id\\",\\n    IFNULL(dcScheme.name,'''') AS \\"dcScheme.name\\",\\n    IFNULL(dcScheme.package_name,'''') AS \\"dcScheme.packageName\\",\\n    IFNULL(dcScheme.module_name,'''') AS \\"dcScheme.moduleName\\",\\n    IFNULL(scheme.sub_module_name,'''') AS \\"dcScheme.subModuleName\\",\\n    column.id as columnId,\\n    column.name as columnName,\\n    column.comments as columnComments,\\n    column.dc_table_id AS \\"dcTable.id\\",\\n    IFNULL(table.name,'''') AS \\"dcTable.name\\",\\n    IFNULL(table.class_name,'''') AS \\"dcTable.className\\",\\n    IFNULL(columnScheme.name,'''') AS \\"dcTable.scheme.name\\",\\n    IFNULL(columnScheme.package_name,'''') AS \\"dcTable.scheme.packageName\\",\\n    IFNULL(columnScheme.module_name,'''') AS \\"dcTable.scheme.moduleName\\",\\n    IFNULL(columnScheme.sub_module_name,'''') AS \\"dcTable.scheme.subModuleName\\",\\n    column.jdbc_type AS \\"jdbcType\\",\\n    column.java_type AS \\"javaType.id\\",\\n    IFNULL(javaType.name,'''') AS \\"javaType.name\\",\\n    javaType.value AS \\"javaType.value\\",\\n    column.custom_type AS \\"customType.id\\",\\n    IFNULL(customType.name,'''') AS \\"customType.name\\",\\n    IFNULL(customType.comments,'''') AS \\"customType.comments\\",\\n    IFNULL(customType.class_name,'''') AS \\"customType.className\\",\\n    IFNULL(customType.filter,'''') AS \\"customType.filter\\",\\n    IFNULL(customScheme.name,'''') AS \\"customType.scheme.name\\",\\n    IFNULL(customScheme.package_name,'''') AS \\"customType.scheme.packageName\\",\\n    IFNULL(customScheme.module_name,'''') AS \\"customType.scheme.moduleName\\",\\n    IFNULL(customScheme.sub_module_name,'''') AS \\"customType.scheme.subModuleName\\",\\n    column.current_scheme_table AS \\"currentSchemeTable\\",\\n    column.java_field AS \\"javaField\\",\\n    column.associated_field AS \\"associatedField\\"\\n    FROM prj_project a\\n    LEFT JOIN dc_scheme `scheme` ON `scheme`.project_id = a.id and `scheme`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_table `table` ON `scheme`.id = `table`.scheme_id and `table`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme dcScheme ON table.scheme_id = dcScheme.id\\n    LEFT JOIN dc_table_column `column` ON table.id = column.dc_table_id and column.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme columnScheme ON table.scheme_id = columnScheme.id\\n    LEFT JOIN sys_dict_item javaType ON javaType.id = `column`.java_type\\n    LEFT JOIN dc_table customType ON customType.id = `column`.custom_type\\n    LEFT JOIN dc_scheme customScheme on customType.scheme_id = customScheme.id\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  \\n  <!--数据源查询所有项目-->\\n  <select id=\\"listForDataSource\\" resultType=\\"com.geeke.project.entity.Project\\">\\n    SELECT\\n      a.id AS \\"id\\",\\n      a.user_id AS \\"user.id\\",\\n      a.name AS \\"name\\",\\n      a.status AS \\"status\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n      a.db_username AS \\"dbUsername\\",\\n      a.db_password AS \\"dbPassword\\",\\n      a.db_url AS \\"dbUrl\\",\\n      a.db_ip AS \\"dbIp\\",\\n      a.db_port AS \\"dbPort\\",\\n      a.db_name AS \\"dbName\\",\\n      a.db_type_id AS \\"dbType.id\\",\\n      IFNULL(dbType.name,'''') AS \\"dbType.name\\",\\n      IFNULL(dbType.driver,'''') AS \\"dbType.driver\\",\\n      IFNULL(dbType.rule,'''') AS \\"dbType.rule\\",\\n      a.cloud_name AS \\"cloudName\\"\\n    FROM prj_project a\\n        INNER JOIN sys_db_type dbType ON dbType.id = a.db_type_id\\n    <where>\\n      a.del_flag = 0\\n    </where>\\n  </select>\\n</mapper>\\n","__config__":{"children":[]},"locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.project.dao.ProjectDao\\">\\n  <sql id=\\"projectColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.user_id AS \\"user.id\\",\\n      IFNULL(user.name,'''') AS \\"user.name\\",\\n      a.name AS \\"name\\",\\n      a.status AS \\"status\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n      a.db_username AS \\"dbUsername\\",\\n      a.db_password AS \\"dbPassword\\",\\n      a.db_url AS \\"dbUrl\\",\\n      a.db_ip AS \\"dbIp\\",\\n      a.db_port AS \\"dbPort\\",\\n      a.db_name AS \\"dbName\\",\\n      a.db_type_id AS \\"dbType.id\\",\\n      IFNULL(dbType.name,'''') AS \\"dbType.name\\",\\n      IFNULL(dbType.driver,'''') AS \\"dbType.driver\\",\\n      IFNULL(dbType.rule,'''') AS \\"dbType.rule\\",\\n      a.cloud_name AS \\"cloudName\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"projectJoins\\">\\n    INNER JOIN prj_member member ON a.id = member.project_id\\n    INNER JOIN sys_user muser ON muser.id = member.user_id AND muser.id = ${@com.geeke.utils.SessionUtils@getUser().getId()}\\n    INNER JOIN sys_user user ON user.id = a.user_id\\n    INNER JOIN sys_db_type dbType ON dbType.id = a.db_type_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.project.entity.Project\\">\\n    SELECT\\n    <include refid=\\"projectColumns\\" />\\n    FROM prj_project a\\n    <include refid=\\"projectJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM prj_project a\\n    <include refid=\\"projectJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.project.entity.Project\\">\\n    SELECT\\n    <include refid=\\"projectColumns\\" />\\n    FROM prj_project a\\n    <include refid=\\"projectJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.project.entity.Project\\">\\n    SELECT\\n    <include refid=\\"projectColumns\\" />\\n    FROM prj_project a\\n    <include refid=\\"projectJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO prj_project(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      user_id,\\n      name,\\n      status,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      db_username,\\n      db_password,\\n      db_url,\\n      db_ip,\\n      db_port,\\n      db_name,\\n      db_type_id,\\n      cloud_name,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ user.id },\\n      #{ name },\\n      #{ status },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n      #{ dbUsername },\\n      #{ dbPassword },\\n      #{ dbUrl },\\n      #{ dbIp },\\n      #{ dbPort },\\n      #{ dbName },\\n      #{ dbType.id },\\n      #{ cloudName },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE prj_project SET\\n    <trim suffixOverrides=\\",\\">\\n      user_id = #{ user.id },\\n      name = #{ name },\\n      status = #{ status },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n      db_username = #{ dbUsername },\\n      db_password = #{ dbPassword },\\n      db_url = #{ dbUrl },\\n      db_ip = #{ dbIp },\\n      db_port = #{ dbPort },\\n      db_name = #{ dbName },\\n      db_type_id = #{ dbType.id },\\n      cloud_name = #{ cloudName },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE prj_project SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO prj_project(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      user_id,\\n      name,\\n      status,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      db_username,\\n      db_password,\\n      db_url,\\n      db_ip,\\n      db_port,\\n      db_name,\\n      db_type_id,\\n      cloud_name,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.user.id},\\n        #{entity.name},\\n        #{entity.status},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n        #{entity.dbUsername},\\n        #{entity.dbPassword},\\n        #{entity.dbUrl},\\n        #{entity.dbIp},\\n        #{entity.dbPort},\\n        #{entity.dbName},\\n        #{entity.dbType.id},\\n        #{entity.cloudName},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE prj_project\\n    <set>\\n      <trim prefix=\\"user_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.user.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.name}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"status=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.status}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_username=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbUsername}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_password=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbPassword}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_url=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbUrl}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_ip=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbIp}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_port=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbPort}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"db_type_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.dbType.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"cloud_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.cloudName}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE prj_project\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <resultMap id=\\"getProjectTableColumn\\" type=\\"com.geeke.project.entity.Project\\">\\n    <id column=\\"id\\" property=\\"id\\" />\\n    <result column=\\"name\\" property=\\"name\\" />\\n    <result column=\\"cloudName\\" property=\\"cloudName\\" />\\n    <collection property=\\"children\\" ofType=\\"com.geeke.dc.entity.DcScheme\\">\\n      <id column=\\"schemeId\\" property=\\"id\\" />\\n      <result column=\\"schemeName\\" property=\\"name\\" />\\n      <result column=\\"packageName\\" property=\\"packageName\\" />\\n      <result column=\\"moduleName\\" property=\\"moduleName\\" />\\n      <result column=\\"subModuleName\\" property=\\"subModuleName\\" />\\n      <collection property=\\"children\\" ofType=\\"com.geeke.dc.entity.DcTable\\">\\n        <id column=\\"tableId\\" property=\\"id\\" />\\n        <result column=\\"tableName\\" property=\\"name\\" />\\n        <result column=\\"className\\" property=\\"className\\" />\\n        <result column=\\"comments\\" property=\\"comments\\" />\\n        <result column=\\"filter\\" property=\\"filter\\" />\\n        <result column=\\"dcScheme.id\\" property=\\"scheme.id\\" />\\n        <result column=\\"dcScheme.name\\" property=\\"scheme.name\\" />\\n        <result column=\\"dcScheme.packageName\\" property=\\"scheme.packageName\\" />\\n        <result column=\\"dcScheme.moduleName\\" property=\\"scheme.moduleName\\" />\\n        <result column=\\"dcScheme.subModuleName\\" property=\\"scheme.subModuleName\\" />\\n        <collection property=\\"columnList\\" ofType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n          <id property=\\"id\\" column=\\"columnId\\" />\\n          <result column=\\"columnName\\" property=\\"name\\" />\\n          <result column=\\"columnComments\\" property=\\"comments\\" />\\n          <result column=\\"dcTable.id\\" property=\\"dcTable.id\\" />\\n          <result column=\\"dcTable.name\\" property=\\"dcTable.name\\" />\\n          <result column=\\"dcTable.className\\" property=\\"dcTable.className\\" />\\n          <result column=\\"dcTable.scheme.name\\" property=\\"dcTable.scheme.name\\" />\\n          <result column=\\"dcTable.scheme.packageName\\" property=\\"dcTable.scheme.packageName\\" />\\n          <result column=\\"dcTable.scheme.moduleName\\" property=\\"dcTable.scheme.moduleName\\" />\\n          <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n          <result column=\\"jdbcType\\" property=\\"jdbcType\\" />\\n          <result column=\\"javaType.id\\" property=\\"javaType.id\\" />\\n          <result column=\\"javaType.name\\" property=\\"javaType.name\\" />\\n          <result column=\\"javaType.value\\" property=\\"javaType.value\\" />\\n          <result column=\\"customType.id\\" property=\\"customType.id\\" />\\n          <result column=\\"customType.name\\" property=\\"customType.name\\" />\\n          <result column=\\"customType.comments\\" property=\\"customType.comments\\" />\\n          <result column=\\"customType.className\\" property=\\"customType.className\\" />\\n          <result column=\\"customType.filter\\" property=\\"customType.filter\\" />\\n          <result column=\\"customType.scheme.name\\" property=\\"customType.scheme.name\\" />\\n          <result column=\\"customType.scheme.packageName\\" property=\\"customType.scheme.packageName\\" />\\n          <result column=\\"customType.scheme.moduleName\\" property=\\"customType.scheme.moduleName\\" />\\n          <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n          <result column=\\"currentSchemeTable\\" property=\\"currentSchemeTable\\" />\\n          <result column=\\"javaField\\" property=\\"javaField\\" />\\n          <result column=\\"associatedField\\" property=\\"associatedField\\" />\\n        </collection>\\n      </collection>\\n    </collection>\\n  </resultMap>\\n  <!--查询项目包含后端方案包含业务表包含业务表字段-->\\n  <select id=\\"listProjectTableColumn\\" resultMap=\\"getProjectTableColumn\\">\\n    SELECT\\n    a.id as id,\\n    a.name as name,\\n    a.cloud_name as cloudName,\\n    `scheme`.id as schemeId,\\n    `scheme`.name as schemeName,\\n    `scheme`.package_name as packageName,\\n    `scheme`.module_name as moduleName,\\n    `scheme`.sub_module_name as subModuleName,\\n    table.id as tableId,\\n    table.name as tableName,\\n    table.class_name as className,\\n    table.comments as comments,\\n    table.filter as filter,\\n    table.scheme_id AS \\"dcScheme.id\\",\\n    IFNULL(dcScheme.name,'''') AS \\"dcScheme.name\\",\\n    IFNULL(dcScheme.package_name,'''') AS \\"dcScheme.packageName\\",\\n    IFNULL(dcScheme.module_name,'''') AS \\"dcScheme.moduleName\\",\\n    IFNULL(scheme.sub_module_name,'''') AS \\"dcScheme.subModuleName\\",\\n    column.id as columnId,\\n    column.name as columnName,\\n    column.comments as columnComments,\\n    column.dc_table_id AS \\"dcTable.id\\",\\n    IFNULL(table.name,'''') AS \\"dcTable.name\\",\\n    IFNULL(table.class_name,'''') AS \\"dcTable.className\\",\\n    IFNULL(columnScheme.name,'''') AS \\"dcTable.scheme.name\\",\\n    IFNULL(columnScheme.package_name,'''') AS \\"dcTable.scheme.packageName\\",\\n    IFNULL(columnScheme.module_name,'''') AS \\"dcTable.scheme.moduleName\\",\\n    IFNULL(columnScheme.sub_module_name,'''') AS \\"dcTable.scheme.subModuleName\\",\\n    column.jdbc_type AS \\"jdbcType\\",\\n    column.java_type AS \\"javaType.id\\",\\n    IFNULL(javaType.name,'''') AS \\"javaType.name\\",\\n    javaType.value AS \\"javaType.value\\",\\n    column.custom_type AS \\"customType.id\\",\\n    IFNULL(customType.name,'''') AS \\"customType.name\\",\\n    IFNULL(customType.comments,'''') AS \\"customType.comments\\",\\n    IFNULL(customType.class_name,'''') AS \\"customType.className\\",\\n    IFNULL(customType.filter,'''') AS \\"customType.filter\\",\\n    IFNULL(customScheme.name,'''') AS \\"customType.scheme.name\\",\\n    IFNULL(customScheme.package_name,'''') AS \\"customType.scheme.packageName\\",\\n    IFNULL(customScheme.module_name,'''') AS \\"customType.scheme.moduleName\\",\\n    IFNULL(customScheme.sub_module_name,'''') AS \\"customType.scheme.subModuleName\\",\\n    column.current_scheme_table AS \\"currentSchemeTable\\",\\n    column.java_field AS \\"javaField\\",\\n    column.associated_field AS \\"associatedField\\"\\n    FROM prj_project a\\n    LEFT JOIN dc_scheme `scheme` ON `scheme`.project_id = a.id and `scheme`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_table `table` ON `scheme`.id = `table`.scheme_id and `table`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme dcScheme ON table.scheme_id = dcScheme.id\\n    LEFT JOIN dc_table_column `column` ON table.id = column.dc_table_id and column.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme columnScheme ON table.scheme_id = columnScheme.id\\n    LEFT JOIN sys_dict_item javaType ON javaType.id = `column`.java_type\\n    LEFT JOIN dc_table customType ON customType.id = `column`.custom_type\\n    LEFT JOIN dc_scheme customScheme on customType.scheme_id = customScheme.id\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <!--数据源查询所有项目-->\\n  <select id=\\"listForDataSource\\" resultType=\\"com.geeke.project.entity.Project\\">\\n    SELECT\\n    a.id AS \\"id\\",\\n    a.user_id AS \\"user.id\\",\\n    a.name AS \\"name\\",\\n    a.status AS \\"status\\",\\n    a.remarks AS \\"remarks\\",\\n    a.create_by AS \\"createBy\\",\\n    a.create_date AS \\"createDate\\",\\n    a.update_by AS \\"updateBy\\",\\n    a.update_date AS \\"updateDate\\",\\n    a.del_flag AS \\"delFlag\\",\\n    a.db_username AS \\"dbUsername\\",\\n    a.db_password AS \\"dbPassword\\",\\n    a.db_url AS \\"dbUrl\\",\\n    a.db_ip AS \\"dbIp\\",\\n    a.db_port AS \\"dbPort\\",\\n    a.db_name AS \\"dbName\\",\\n    a.db_type_id AS \\"dbType.id\\",\\n    IFNULL(dbType.name,'''') AS \\"dbType.name\\",\\n    IFNULL(dbType.driver,'''') AS \\"dbType.driver\\",\\n    IFNULL(dbType.rule,'''') AS \\"dbType.rule\\",\\n    a.cloud_name AS \\"cloudName\\"\\n    FROM prj_project a\\n    INNER JOIN sys_db_type dbType ON dbType.id = a.db_type_id\\n    <where>\\n      a.del_flag = 0\\n    </where>\\n  </select>\\n</mapper>"},{"filePath":"client/src/api/project/","fileName":"member.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n\\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'',\\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\n","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getMemberById = (id) =>\\n  request({\\n    url: ''/project/member/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listMemberPage = (search) =>\\n  request({\\n    url: ''/project/member/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listMemberAll = (search) =>\\n  request({\\n    url: ''/project/member/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveMember = (member) =>\\n  request({\\n    url: ''/project/member/save'',\\n    method: ''post'',\\n    data: member\\n  })\\n\\nexport const deleteMember = (member) =>\\n  request({\\n    url: ''/project/member/delete'',\\n    method: ''post'',\\n    data: member\\n  })\\n\\nexport const bulkInsertMember = (members) =>\\n  request({\\n    url: ''/project/member/bulkInsert'',\\n    method: ''post'',\\n    data: members\\n  })\\n\\nexport const bulkUpdateMember = (members) =>\\n  request({\\n    url: ''/project/member/bulkUpdate'',\\n    method: ''post'',\\n    data: members\\n  })\\n\\nexport const bulkDeleteMember = (members) =>\\n  request({\\n    url: ''/project/member/bulkDelete'',\\n    method: ''post'',\\n    data: members\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/project//controller","fileName":"MemberController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        ).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        String id = {{table.className | lowerCase}}Service.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{/if}}\\n  \\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"package com.geeke.project.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.project.entity.Member;\\nimport com.geeke.project.service.MemberService;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * 项目管理Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/project/member\\")\\npublic class MemberController extends BaseController {\\n\\n    @Autowired\\n    private MemberService memberService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        Member entity = memberService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<Member> result = memberService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<Member> result = memberService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(@RequestBody Member entity) {\\n        String id = memberService.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody Member entity) {\\n        int rows = memberService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<Member> entitys) {\\n        List<String> ids = memberService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<Member> entitys) {\\n        List<String> ids = memberService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<Member> entitys) {\\n        int rows = memberService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/project//service","fileName":"MemberService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\n\\nimport java.util.Map;\\nimport java.util.List;\\n{{if childTables.length > 0}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\n{{/if}}\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{child.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{child.className}}Service;\\n  {{/each}}\\n{{/if}}\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport com.google.common.collect.Lists;\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n    {{if table.isMainTable === ''1''}}\\n      {{each childTables as child}}\\n    @Autowired\\n    private {{child.className}}Dao {{child.className | lowerCase}}Dao;\\n    @Autowired\\n    private {{child.className}}Service {{child.className | lowerCase}}Service;\\n      {{/each}}\\n    {{/if}}\\n    {{if table.autoSerialExists}}\\n    @Autowired\\n    SequenceService sequenceService;\\n    {{/if}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Autowired\\n    private SysFileService sysFileService;\\n    {{/if}}\\n    {{if table.filter}}\\n    @Override\\n    public Page<{{table.className}}> listPage(List<Parameter> parameters, int offset, int limit, String orderby) {\\n        String filter = \\"{{@ table.filter}}\\";\\n        return super.listPage(super.addFilter(parameters, filter), offset, limit, orderby);\\n    }\\n\\n    @Override\\n    public List<{{table.className}}> listAll(List<Parameter> parameters, String orderby) {\\n        String filter = \\"{{@ table.filter}}\\";\\n        PageRequest pageRequest = new PageRequest(super.addFilter(parameters, filter), orderby);\\n        return dao.listAll(pageRequest);\\n    }\\n    {{/if}}\\n    {{if table.isMainTable === ''1''}}\\n    @Override\\n    public {{table.className}} get(String id) {\\n      {{table.className}} {{table.className | lowerCase}} = super.get(id);\\n      {{if childTables.length > 0}}\\n      List<Parameter> params = null;\\n      PageRequest pageRequest;\\n        {{each childTables as child}}\\n      /*获取子表列表   {{child.comments}}*/\\n      params = Lists.newArrayList();\\n      {{if child.filter}}\\n      String filter = \\"{{@ child.filter}}\\";\\n      params = super.addFilter(params, filter);\\n      {{/if}}\\n          {{each child.columnList as column}}\\n            {{if child.parentTableFk === column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      pageRequest = new PageRequest(params);\\n      {{table.className | lowerCase}}.set{{child.className}}List({{child.className | lowerCase}}Dao.listAll(pageRequest));\\n            {{/if}}\\n      \\n          {{/each}}\\n        {{/each}}\\n      {{/if}}\\n      return {{table.className | lowerCase}};\\n    }\\n\\n    {{if table.source == ''BASE TABLE''}}\\n    @Transactional(readOnly = false)\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}},\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      MultipartFile[] {{c.javaField}}Uploads,\\n            {{/if}}\\n        {{/each}}\\n      String[] deleteIds) throws java.io.IOException {\\n    {{else}}\\n    @Override\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}}) {\\n    {{/if}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{table.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{c.defVal}}\\", {{table.className | lowerCase}});\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(sn);\\n        }\\n            {{/if}}\\n        {{/each}}\\n        {{if table.constraintList && table.constraintList.length > 0}}\\n        Map<String, String> colMaps = Maps.newHashMap();\\n          {{each table.constraintList constraint}}\\n              {{if constraint.name}}\\n                  // {{constraint.name}}\\n              {{/if}}\\n        colMaps.clear();\\n              {{each constraint.constraintColumn.split(\\",\\") column}}\\n                  {{each table.columnList c}}\\n                      {{if c.name == column}}\\n                        {{if c.javaType.value === ''This'' || c.javaType.value === ''Custom''}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_''}}.{{c.associatedField | camelCase ''_''}}\\");   \\n                        {{else}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n                        {{/if}}\\n                      {{/if}}\\n                  {{/each}}\\n              {{/each}}\\n        if(exists(dao, {{table.className | lowerCase}}, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        } \\n          {{/each}}\\n      {{/if}}\\n\\n        {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n        if(StringUtils.isEmpty({{table.className | lowerCase}}.get{{c.javaField | upperCase}}())) {\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList({{c.javaField}}Uploads, {{table.className | lowerCase}}.get{{c.javaField | upperCase}}());\\n            {{/if}}\\n        {{/each}}\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n        {{/if}}\\n\\n        {{table.className}} {{table.className | lowerCase}}Temp = super.save({{table.className | lowerCase}});\\n        \\n        {{if table.hasPassWordInput}}\\n        // 加密字段处理\\n        if (StringUtils.isNoneBlank({{table.className | lowerCase}}Temp.getId())) {\\n            {{each table.columnList c}}\\n                {{if c.javaType && c.javaType.value == ''Password''}}\\n            // 设置加密字段  {{c.comments}}\\n            if({{table.className | lowerCase}}.get{{c.javaField | upperCase}}Update()) {\\n                Md5Hash md5 = new Md5Hash({{table.className | lowerCase}}.get{{c.javaField | upperCase}}(), {{table.className | lowerCase}}.getId(), 6);\\n                   String md5Password = md5.toHex();\\n                   dao.update{{c.javaField | upperCase}}({{table.className | lowerCase}}.getId(), md5Password);\\n               }\\n                {{/if}}\\n            {{/each}}\\n        }\\n        {{/if}}  \\n        {{if childTables.length > 0}}\\n          {{each childTables as child}}\\n        /* 保存子表数据     {{child.comments}} */\\n        save{{child.className}}List({{table.className | lowerCase}}Temp);\\n          {{/each}}\\n        {{/if}}      \\n        return {{table.className | lowerCase}}Temp;\\n    }\\n    /**\\n     * 删除\\n     * @param {{table.className | lowerCase}}\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete({{table.className}} {{table.className | lowerCase}}) {\\n      {{if childTables.length > 0}}\\n      List<Parameter> params = null;\\n      PageRequest pageRequest;\\n        {{each childTables as child}}\\n      /* 处理子表     {{child.comments}} */\\n      params = Lists.newArrayList();\\n          {{each child.columnList as column}}\\n            {{if child.parentTableFk === column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      pageRequest = new PageRequest(params);\\n      {{table.className | lowerCase}}.set{{child.className}}List({{child.className | lowerCase}}Dao.listAll(pageRequest));\\n            {{/if}}\\n          {{/each}}\\n      if({{table.className | lowerCase}}.get{{child.className}}List() != null && {{table.className | lowerCase}}.get{{child.className}}List().size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkDelete({{table.className | lowerCase}}.get{{child.className}}List());\\n      }\\n        {{/each}}\\n      {{/if}}\\n      int rows = super.delete({{table.className | lowerCase}});\\n      return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param {{table.className | lowerCase}}List\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<{{table.className}}> {{table.className | lowerCase}}List) {\\n      {{if childTables.length > 0}}\\n      for({{table.className}} {{table.className | lowerCase}}: {{table.className | lowerCase}}List) {\\n        delete({{table.className | lowerCase}});\\n      }\\n      {{/if}}\\n      return {{table.className | lowerCase}}List.size();\\n    }\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @Transactional(readOnly = false)\\n    public int change{{c.javaField | upperCase}}(String id, String pass) {\\n        // Md5密码\\n        Md5Hash md5 = new Md5Hash(pass, id, 6);\\n        String md5Password = md5.toHex();\\n    \\n        int rows = dao.update{{c.javaField | upperCase}}(id, md5Password);\\n        return rows;\\n    }\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n\\n  {{if childTables.length > 0}}\\n  /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, {{table.className}} entity) {\\n      Action action = super.createAction(actionTypeId, entity);\\n      if(action == null) {\\n          return null;\\n      }\\n      // 删除时记录把保存的数据保存到回收站\\n      if(ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n        {{each childTables as child}}\\n          {{if child.delFlagExists}}\\n        for({{child.className}} child: entity.get{{child.className}}List()) {\\n          ActionRecycle recycle = new ActionRecycle();\\n          recycle.setTableName(child.getBusTableName());\\n          recycle.setObjectId(child.getId());\\n          recycle.setObjectName((String)Reflections.invokeGetter(child, \\"name\\"));\\n          action.getActionRecycleList().add(recycle);            \\n        }\\n          {{/if}}\\n        {{/each}}\\n      }\\n      return action;\\n    }\\n  {{/if}}\\n  {{if childTables.length > 0}}\\n    {{each childTables as child}}\\n    /* 保存子表数据     {{child.comments}} */\\n    private void save{{child.className}}List({{table.className}} {{table.className | lowerCase}}) {\\n      List<Parameter> params = Lists.newArrayList();\\n      {{each child.columnList as column}}\\n        {{if child.parentTableFk == column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      PageRequest pageRequest = new PageRequest(params);\\n      List<{{child.className}}> list_{{child.className}} = {{child.className | lowerCase}}Dao.listAll(pageRequest);\\n        {{/if}}\\n      {{/each}}\\n      List<{{child.className}}> deletes = Lists.newArrayList(); // 删除列表\\n      List<{{child.className}}> inserts = Lists.newArrayList(); // 添加列表\\n      List<{{child.className}}> updates = Lists.newArrayList(); // 更新列表\\n      for({{child.className}} {{child.className | lowerCase}}Saved: list_{{child.className}}) {\\n        boolean found = false;   \\n        for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n          if({{child.className | lowerCase}}Saved.getId().equals({{child.className | lowerCase}}.getId())){\\n            found = true;\\n            break;\\n          }\\n        }\\n        if(!found) {\\n          deletes.add({{child.className | lowerCase}}Saved);\\n        }\\n      }\\n      if(deletes.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkDelete(deletes);\\n      }\\n      for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n        {{each child.columnList as column}}\\n          {{if column.javaType && column.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{column.defVal}}\\", {{child.className | lowerCase}});\\n            {{child.className | lowerCase}}.set{{column.javaField | upperCase}}(sn);\\n        }\\n          {{/if}}\\n        {{/each}}\\n        {{if child.constraintList && child.constraintList.length > 0}}\\n        Map<String, String> col{{child.className | lowerCase}}Maps = Maps.newHashMap();\\n        {{each child.constraintList constraint}}\\n                {{if constraint.name}}\\n        // {{constraint.name}}\\n                {{/if}}\\n        col{{child.className | lowerCase}}Maps.clear();\\n          {{each constraint.constraintColumn.split(\\",\\") column}}\\n            {{each child.columnList c}}\\n              {{if c.name == column}}\\n        col{{child.className | lowerCase}}Maps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n              {{/if}}\\n            {{/each}}\\n          {{/each}}\\n        if(exists({{child.className | lowerCase}}Dao, {{child.className | lowerCase}}, col{{child.className | lowerCase}}Maps)) {\\n          throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        }\\n        {{/each}}\\n        {{/if}}\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())) {\\n          {{if child.parentTableFk}}\\n            {{if child.parentTableFk == ''id''}}\\n          {{child.className | lowerCase}}.setId({{table.className | lowerCase}}.getId());  // 子表id与父表id一致\\n            {{else}}\\n              {{each child.columnList column}}\\n                {{if child.parentTableFk == column.name}}\\n          {{child.className | lowerCase}}.set{{column.javaField | upperCase}}({{table.className | lowerCase}});\\n                {{/if}}\\n              {{/each}}\\n            {{/if}}\\n          {{/if}}\\n          inserts.add({{child.className | lowerCase}});\\n        } else {\\n          updates.add({{child.className | lowerCase}});\\n        }\\n        {{if child.hasPassWordInput}}\\n          {{each child.columnList column}}\\n            {{if column.javaType && column.javaType.value == ''Password''}}\\n        // 设置加密字段  {{column.comments}}\\n        if({{child.className | lowerCase}}.get{{column.javaField | upperCase}}() != null) {\\n          Md5Hash md5 = new Md5Hash({{child.className | lowerCase}}.get{{column.javaField | upperCase}}(), {{child.className | lowerCase}}.getId(), 6);\\n          String md5Password = md5.toHex();\\n          {{child.className | lowerCase}}Service.update{{column.javaField | upperCase}}({{child.className | lowerCase}}.getId(), md5Password);\\n        }\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      }\\n      if(updates.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkUpdate(updates);\\n      }\\n      if(inserts.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkInsert(inserts);\\n      }\\n    }\\n      {{/each}}\\n    {{/if}}\\n    {{/if}}\\n  {{else}}\\n    \\n  {{/if}}\\n}","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"package com.geeke.project.service;\\n\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.project.dao.MemberDao;\\nimport com.geeke.project.entity.Member;\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Lists;\\nimport com.google.common.collect.Maps;\\nimport java.util.List;\\nimport java.util.Map;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n\\n/**\\n * 项目管理Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"memberService\\")\\n@Transactional(readOnly = true)\\npublic class MemberService extends CrudService<MemberDao, Member> {}\\n"},{"filePath":"back/src/main/java/com.geeke/project//dao","fileName":"MemberDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"package com.geeke.project.dao;\\n\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.project.entity.Member;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 项目管理DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface MemberDao extends CrudDao<Member> {}\\n"},{"filePath":"back/src/main/java/com.geeke/project//entity","fileName":"Member.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\n\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\n  {{/each}}\\n{{/if}}\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{c.currentTable.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t{{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n  private List<{{child.className}}> {{child.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n    {{/each}}\\n  {{/if}}\\n  \\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{c.currentTable.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{c.currentTable.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n  {{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n\\tpublic List<{{child.className}}> get{{child.className}}List() {\\n\\t\\treturn {{child.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{child.className}}List(List<{{child.className}}> {{child.className | lowerCase}}List) {\\n\\t\\tthis.{{child.className | lowerCase}}List = {{child.className | lowerCase}}List;\\n\\t}\\n\\t  {{/each}}\\n  {{/if}}\\n\\t\\n\\t\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"package com.geeke.project.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.admin.entity.User;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.geeke.project.entity.Project;\\nimport javax.validation.constraints.NotNull;\\n\\n/**\\n * 项目管理Entity\\n * @author\\n * @version\\n */\\n\\npublic class Member extends DataEntity<Member> {\\n\\n    private static final long serialVersionUID = 1351544466239864851L;\\n\\n    private Project project; // 项目\\n\\n    private User user; // 用户\\n\\n    // 构造方法\\n    public Member() {\\n        super();\\n    }\\n\\n    public Member(String id) {\\n        super(id);\\n    }\\n\\n    // 生成get和set方法\\n\\n    @NotNull(message = \\"项目不能为空\\")\\n    public Project getProject() {\\n        return project;\\n    }\\n\\n    public void setProject(Project project) {\\n        this.project = project;\\n    }\\n\\n    @NotNull(message = \\"用户不能为空\\")\\n    public User getUser() {\\n        return user;\\n    }\\n\\n    public void setUser(User user) {\\n        this.user = user;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"prj_member\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1351544466239864851\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/project/","fileName":"MemberDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n                {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.customType.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n                {{else}}\\n        LEFT JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}\\n                {{/if}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n              {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.currentTable.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n              {{else}}\\n        LEFT JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}\\n              {{/if}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n</mapper>\\n","__config__":{"children":[]},"tableName":"prj_member","locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.project.dao.MemberDao\\">\\n  <sql id=\\"memberColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.project_id AS \\"project.id\\",\\n      IFNULL(project.name,'''') AS \\"project.name\\",\\n      a.user_id AS \\"user.id\\",\\n      IFNULL(user.name,'''') AS \\"user.name\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"memberJoins\\">\\n    LEFT JOIN prj_project project ON project.id = a.project_id\\n    LEFT JOIN sys_user user ON user.id = a.user_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.project.entity.Member\\">\\n    SELECT\\n    <include refid=\\"memberColumns\\" />\\n    FROM prj_member a\\n    <include refid=\\"memberJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM prj_member a\\n    <include refid=\\"memberJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.project.entity.Member\\">\\n    SELECT\\n    <include refid=\\"memberColumns\\" />\\n    FROM prj_member a\\n    <include refid=\\"memberJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.project.entity.Member\\">\\n    SELECT\\n    <include refid=\\"memberColumns\\" />\\n    FROM prj_member a\\n    <include refid=\\"memberJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO prj_member(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      project_id,\\n      user_id,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ project.id },\\n      #{ user.id },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE prj_member SET\\n    <trim suffixOverrides=\\",\\">\\n      project_id = #{ project.id },\\n      user_id = #{ user.id },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE prj_member SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO prj_member(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      project_id,\\n      user_id,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.project.id},\\n        #{entity.user.id},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE prj_member\\n    <set>\\n      <trim prefix=\\"project_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.project.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"user_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.user.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE prj_member\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n</mapper>"}]}', remarks='', create_by='超级管理员(super)', create_date='2023-01-19 13:03:31', update_by='超级管理员(super)', update_date='2023-05-22 13:18:23', del_flag='0'
WHERE id=1351544466239864848;
UPDATE dc_scheme
SET project_id=88888888, name='后端方案', package_name='com.geeke', module_name='dc', sub_module_name='', function_name='后端方案', template_id=1246082437705335035, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return true\\n  }\\n  \\n  return false\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n              {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              // 分页属性\\n              {{if item.__slot__.pageFlag}}\\n                {{item['':data'']}}Page: 1,\\n                {{item['':data'']}}Total: 0,\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.layout == ''queryTableLayout''}}\\n              // 查询表格列头\\n              table{{item.__config__.formId}}Column: [\\n                {{each item.__config__.children filed}}\\n                  {{if filed.__config__.elName == ''ElTableColumn''}}\\n                    { {{@filed | getAttributes }}   display: {{filed.__config__.display}} },\\n                  {{/if}}\\n                {{/each}}\\n              ]\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n            // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/api/dc/","fileName":"dcScheme.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n \\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'', \\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\n\\nexport const listSchemeTableColumn = (search) =>\\n  request({\\n    url: ''/dc/dcScheme/listSchemeTableColumn'',\\n    method: ''post'',\\n    data: search\\n  })","__config__":{"children":[]},"locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getDcSchemeById = (id) =>\\n  request({\\n    url: ''/dc/dcScheme/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listDcSchemePage = (search) =>\\n  request({\\n    url: ''/dc/dcScheme/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listDcSchemeAll = (search) =>\\n  request({\\n    url: ''/dc/dcScheme/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveDcScheme = (dcScheme) =>\\n  request({\\n    url: ''/dc/dcScheme/save'',\\n    method: ''post'',\\n    data: dcScheme\\n  })\\n\\nexport const deleteDcScheme = (dcScheme) =>\\n  request({\\n    url: ''/dc/dcScheme/delete'',\\n    method: ''post'',\\n    data: dcScheme\\n  })\\n\\nexport const bulkInsertDcScheme = (dcSchemes) =>\\n  request({\\n    url: ''/dc/dcScheme/bulkInsert'',\\n    method: ''post'',\\n    data: dcSchemes\\n  })\\n\\nexport const bulkUpdateDcScheme = (dcSchemes) =>\\n  request({\\n    url: ''/dc/dcScheme/bulkUpdate'',\\n    method: ''post'',\\n    data: dcSchemes\\n  })\\n\\nexport const bulkDeleteDcScheme = (dcSchemes) =>\\n  request({\\n    url: ''/dc/dcScheme/bulkDelete'',\\n    method: ''post'',\\n    data: dcSchemes\\n  })\\n\\nexport const listSchemeTableColumn = (search) =>\\n  request({\\n    url: ''/dc/dcScheme/listSchemeTableColumn'',\\n    method: ''post'',\\n    data: search\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/dc//controller","fileName":"DcSchemeController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        {{table.className}} newEntity = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        );\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        {{table.className}} newEntity = {{table.className | lowerCase}}Service.save(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(newEntity));\\n    }\\n  {{/if}}\\n  \\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n\\n    @PostMapping(value = \\"listSchemeTableColumn\\")\\n    public ResponseEntity<JSONObject> listSchemeTableColumn(@RequestBody SearchParams searchParams) {\\n        List<DcScheme> result = dcSchemeService.listSchemeTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.dc.entity.DcScheme;\\nimport com.geeke.dc.service.DcSchemeService;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * 后端方案Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/dc/dcScheme\\")\\npublic class DcSchemeController extends BaseController {\\n\\n    @Autowired\\n    private DcSchemeService dcSchemeService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        DcScheme entity = dcSchemeService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<DcScheme> result = dcSchemeService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<DcScheme> result = dcSchemeService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(@RequestBody DcScheme entity) {\\n        DcScheme newEntity = dcSchemeService.save(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(newEntity));\\n    }\\n\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody DcScheme entity) {\\n        int rows = dcSchemeService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<DcScheme> entitys) {\\n        List<String> ids = dcSchemeService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<DcScheme> entitys) {\\n        List<String> ids = dcSchemeService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<DcScheme> entitys) {\\n        int rows = dcSchemeService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"listSchemeTableColumn\\")\\n    public ResponseEntity<JSONObject> listSchemeTableColumn(@RequestBody SearchParams searchParams) {\\n        List<DcScheme> result = dcSchemeService.listSchemeTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//service","fileName":"DcSchemeService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\n\\nimport java.util.Map;\\nimport java.util.List;\\n{{if childTables.length > 0}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\n{{/if}}\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{child.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{child.className}}Service;\\n  {{/each}}\\n{{/if}}\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport com.google.common.collect.Lists;\\nimport com.geeke.dc.dao.DcClienSchemeDao;\\nimport com.geeke.dc.dao.DcTableColumnDao;\\nimport com.geeke.dc.entity.DcClienScheme;\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n    {{if table.isMainTable === ''1''}}\\n      {{each childTables as child}}\\n    @Autowired\\n    private {{child.className}}Dao {{child.className | lowerCase}}Dao;\\n    @Autowired\\n    private {{child.className}}Service {{child.className | lowerCase}}Service;\\n      {{/each}}\\n    {{/if}}\\n    @Autowired\\n    private DcTableColumnDao dcTableColumnDao;\\n    @Autowired\\n    private DcClienSchemeDao clienSchemeDao;\\n    {{if table.autoSerialExists}}\\n    @Autowired\\n    SequenceService sequenceService;\\n    {{/if}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Autowired\\n    private SysFileService sysFileService;\\n    {{/if}}\\n    {{if table.isMainTable === ''1''}}\\n    @Override\\n    public {{table.className}} get(String id) {\\n      DcScheme dcScheme = super.get(id);\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /*获取子表列表   低代码-业务表*/\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        pageRequest = new PageRequest(params);\\n        List<DcTable> dcTables = dcTableDao.listAll(pageRequest);\\n        /*获取低代码-业务表子表列表   低代码-业务表字段*/\\n        if (dcTables.size() > 0) {\\n            for (int i = 0; i < dcTables.size(); i++) {\\n                List<Parameter> schemeParams = null;\\n                PageRequest schemePageRequest;\\n                /*获取和当前表在同一方案下的其他表*/\\n                schemeParams = Lists.newArrayList();\\n                schemeParams.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n                schemeParams.add(new Parameter(\\"id\\", \\"!=\\", dcTables.get(i).getId()));\\n                schemePageRequest = new PageRequest(schemeParams);\\n                dcTables.get(i).setAssociationList(dcTableDao.listAll(schemePageRequest));\\n\\n                List<Parameter> columnParams = null;\\n                PageRequest columnPageRequest;\\n                /*获取子表列表   低代码-业务表*/\\n                columnParams = Lists.newArrayList();\\n                columnParams.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTables.get(i).getId()));\\n                columnPageRequest = new PageRequest(columnParams);\\n                dcTables.get(i).setColumnList(dcTableColumnDao.listAllGroupById(columnPageRequest));\\n            }\\n        }\\n        dcScheme.setDcTableList(dcTables);\\n        return dcScheme;\\n    }\\n\\n    {{if table.source == ''BASE TABLE''}}\\n    @Transactional(readOnly = false)\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}},\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      MultipartFile[] {{c.javaField}}Uploads,\\n            {{/if}}\\n        {{/each}}\\n      String[] deleteIds) throws java.io.IOException {\\n    {{else}}\\n    @Override\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}}) {\\n    {{/if}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{table.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{c.defVal}}\\", {{table.className | lowerCase}});\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(sn);\\n        }\\n            {{/if}}\\n        {{/each}}\\n        {{if table.constraintList && table.constraintList.length > 0}}\\n        Map<String, String> colMaps = Maps.newHashMap();\\n          {{each table.constraintList constraint}}\\n              {{if constraint.name}}\\n                  // {{constraint.name}}\\n              {{/if}}\\n        colMaps.clear();\\n              {{each constraint.constraintColumn.split(\\",\\") column}}\\n                  {{each table.columnList c}}\\n                      {{if c.name == column}}\\n                        {{if c.javaType.value === ''This'' || c.javaType.value === ''Custom''}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_''}}.{{c.associatedField | camelCase ''_''}}\\");   \\n                        {{else}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n                        {{/if}}\\n                      {{/if}}\\n                  {{/each}}\\n              {{/each}}\\n        if(exists(dao, {{table.className | lowerCase}}, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        } \\n          {{/each}}\\n      {{/if}}\\n\\n        {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n        if(StringUtils.isEmpty({{table.className | lowerCase}}.get{{c.javaField | upperCase}}())) {\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList({{c.javaField}}Uploads, {{table.className | lowerCase}}.get{{c.javaField | upperCase}}());\\n            {{/if}}\\n        {{/each}}\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n        {{/if}}\\n\\n        {{table.className}} {{table.className | lowerCase}}Temp = super.save({{table.className | lowerCase}});\\n        \\n        {{if table.hasPassWordInput}}\\n        // 加密字段处理\\n        if (StringUtils.isNoneBlank({{table.className | lowerCase}}Temp.getId())) {\\n            {{each table.columnList c}}\\n                {{if c.javaType && c.javaType.value == ''Password''}}\\n            // 设置加密字段  {{c.comments}}\\n            if({{table.className | lowerCase}}.get{{c.javaField | upperCase}}Update()) {\\n                Md5Hash md5 = new Md5Hash({{table.className | lowerCase}}.get{{c.javaField | upperCase}}(), {{table.className | lowerCase}}.getId(), 6);\\n                   String md5Password = md5.toHex();\\n                   dao.update{{c.javaField | upperCase}}({{table.className | lowerCase}}.getId(), md5Password);\\n               }\\n                {{/if}}\\n            {{/each}}\\n        }\\n        {{/if}}  \\n        {{if childTables.length > 0}}\\n          {{each childTables as child}}\\n        /* 保存子表数据     {{child.comments}} */\\n        save{{child.className}}List({{table.className | lowerCase}}Temp);\\n          {{/each}}\\n        {{/if}}      \\n        return {{table.className | lowerCase}}Temp;\\n    }\\n    /**\\n     * 删除\\n     * @param entity\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete({{table.className}} {{table.className | lowerCase}}) {\\n      // 判断该方案是否被使用中\\n        List<Parameter> schemeParams = null;\\n        PageRequest schemePageRequest;\\n        /* 处理子表     低代码-业务表 */\\n        schemeParams = Lists.newArrayList();\\n        schemeParams.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        schemePageRequest = new PageRequest(schemeParams);\\n        List<DcClienScheme> dcClienSchemes = clienSchemeDao.listAll(schemePageRequest);\\n        if(dcClienSchemes != null && dcClienSchemes.size() > 0) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"此方案使用中，不可删除\\"));\\n        }\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /* 处理子表     低代码-业务表 */\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcScheme.setDcTableList(dcTableDao.listAll(pageRequest));        \\n\\n        if(dcScheme.getDcTableList() != null && dcScheme.getDcTableList().size() > 0) {\\n            for (int i = 0; i < dcScheme.getDcTableList().size(); i++) {\\n                dcTableService.delete(dcScheme.getDcTableList().get(i));\\n            }\\n        }\\n        int rows = super.delete(dcScheme);\\n        return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param entitys\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<{{table.className}}> {{table.className | lowerCase}}List) {\\n      {{if childTables.length > 0}}\\n      for({{table.className}} {{table.className | lowerCase}}: {{table.className | lowerCase}}List) {\\n        delete({{table.className | lowerCase}});\\n      }\\n      {{/if}}\\n      return {{table.className | lowerCase}}List.size();\\n    }\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @Transactional(readOnly = false)\\n    public int change{{c.javaField | upperCase}}(String id, String pass) {\\n        // Md5密码\\n        Md5Hash md5 = new Md5Hash(pass, id, 6);\\n        String md5Password = md5.toHex();\\n    \\n        int rows = dao.update{{c.javaField | upperCase}}(id, md5Password);\\n        return rows;\\n    }\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n\\n  {{if childTables.length > 0}}\\n  /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, {{table.className}} entity) {\\n      Action action = super.createAction(actionTypeId, entity);\\n      if(action == null) {\\n          return null;\\n      }\\n      // 删除时记录把保存的数据保存到回收站\\n      if(ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n        {{each childTables as child}}\\n          {{if child.delFlagExists}}\\n        for({{child.className}} child: entity.get{{child.className}}List()) {\\n          ActionRecycle recycle = new ActionRecycle();\\n          recycle.setTableName(child.getBusTableName());\\n          recycle.setObjectId(child.getId());\\n          recycle.setObjectName((String)Reflections.invokeGetter(child, \\"name\\"));\\n          action.getActionRecycleList().add(recycle);            \\n        }\\n          {{/if}}\\n        {{/each}}\\n      }\\n      return action;\\n    }\\n  {{/if}}\\n  {{if childTables.length > 0}}\\n    {{each childTables as child}}\\n    /* 保存子表数据     {{child.comments}} */\\n    private void save{{child.className}}List({{table.className}} {{table.className | lowerCase}}) {\\n      List<Parameter> params = Lists.newArrayList();\\n      {{each child.columnList as column}}\\n        {{if child.parentTableFk == column.name}}\\n      params.add(new Parameter(\\"{{column.name}}\\", \\"=\\", {{table.className | lowerCase}}.getId()));\\n      PageRequest pageRequest = new PageRequest(params);\\n      List<{{child.className}}> list_{{child.className}} = {{child.className | lowerCase}}Dao.listAll(pageRequest);\\n        {{/if}}\\n      {{/each}}\\n      List<{{child.className}}> deletes = Lists.newArrayList(); // 删除列表\\n      List<{{child.className}}> inserts = Lists.newArrayList(); // 添加列表\\n      List<{{child.className}}> updates = Lists.newArrayList(); // 更新列表\\n      for({{child.className}} {{child.className | lowerCase}}Saved: list_{{child.className}}) {\\n        boolean found = false;   \\n        for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n          if({{child.className | lowerCase}}Saved.getId().equals({{child.className | lowerCase}}.getId())){\\n            found = true;\\n            break;\\n          }\\n        }\\n        if(!found) {\\n          deletes.add({{child.className | lowerCase}}Saved);\\n        }\\n      }\\n      if(deletes.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkDelete(deletes);\\n      }\\n      for ({{child.className}} {{child.className | lowerCase}} : {{table.className | lowerCase}}.get{{child.className}}List()){\\n        {{each child.columnList as column}}\\n          {{if column.javaType && column.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{column.defVal}}\\", {{child.className | lowerCase}});\\n            {{child.className | lowerCase}}.set{{column.javaField | upperCase}}(sn);\\n        }\\n          {{/if}}\\n        {{/each}}\\n        {{if child.constraintList && child.constraintList.length > 0}}\\n        Map<String, String> col{{child.className | lowerCase}}Maps = Maps.newHashMap();\\n        {{each child.constraintList constraint}}\\n                {{if constraint.name}}\\n        // {{constraint.name}}\\n                {{/if}}\\n        col{{child.className | lowerCase}}Maps.clear();\\n          {{each constraint.constraintColumn.split(\\",\\") column}}\\n            {{each child.columnList c}}\\n              {{if c.name == column}}\\n        col{{child.className | lowerCase}}Maps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n              {{/if}}\\n            {{/each}}\\n          {{/each}}\\n        if(exists({{child.className | lowerCase}}Dao, {{child.className | lowerCase}}, col{{child.className | lowerCase}}Maps)) {\\n          throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        }\\n        {{/each}}\\n        {{/if}}\\n        if (StringUtils.isBlank({{child.className | lowerCase}}.getId())) {\\n          {{if child.parentTableFk}}\\n            {{if child.parentTableFk == ''id''}}\\n          {{child.className | lowerCase}}.setId({{table.className | lowerCase}}.getId());  // 子表id与父表id一致\\n            {{else}}\\n              {{each child.columnList column}}\\n                {{if child.parentTableFk == column.name}}\\n          {{child.className | lowerCase}}.get{{column.javaField | upperCase}}().setId({{table.className | lowerCase}}.getId());\\n                {{/if}}\\n              {{/each}}\\n            {{/if}}\\n          {{/if}}\\n          inserts.add({{child.className | lowerCase}});\\n        } else {\\n          updates.add({{child.className | lowerCase}});\\n        }\\n        {{if child.hasPassWordInput}}\\n          {{each child.columnList column}}\\n            {{if column.javaType && column.javaType.value == ''Password''}}\\n        // 设置加密字段  {{column.comments}}\\n        if({{child.className | lowerCase}}.get{{column.javaField | upperCase}}() != null) {\\n          Md5Hash md5 = new Md5Hash({{child.className | lowerCase}}.get{{column.javaField | upperCase}}(), {{child.className | lowerCase}}.getId(), 6);\\n          String md5Password = md5.toHex();\\n          {{child.className | lowerCase}}Service.update{{column.javaField | upperCase}}({{child.className | lowerCase}}.getId(), md5Password);\\n        }\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      }\\n      if(updates.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkUpdate(updates);\\n      }\\n      if(inserts.size() > 0) {\\n        {{child.className | lowerCase}}Service.bulkInsert(inserts);\\n      }\\n      // 保存表字段信息\\n        if (dcScheme.getDcTableList().size() > 0) {\\n            for (int i = 0; i < dcScheme.getDcTableList().size(); i++) {\\n                dcTableService.save(dcScheme.getDcTableList().get(i));\\n            }\\n        }\\n    }\\n      {{/each}}\\n    {{/if}}\\n    {{/if}}\\n  {{else}}\\n    \\n  {{/if}}\\n\\n      \\n    /**\\n     * 查询后端方案包含业务表包含业务表字段\\n     * @param parameters\\n     * @param orderby\\n     * @return\\n     */\\n    public List<DcScheme> listSchemeTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        List<DcScheme> list = dao.listSchemeTableColumn(pageRequest);\\n        return list;\\n    }\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.service;\\n\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.dc.dao.DcClienSchemeDao;\\nimport com.geeke.dc.dao.DcSchemeDao;\\nimport com.geeke.dc.dao.DcTableColumnDao;\\nimport com.geeke.dc.dao.DcTableDao;\\nimport com.geeke.dc.entity.DcClienScheme;\\nimport com.geeke.dc.entity.DcScheme;\\nimport com.geeke.dc.entity.DcTable;\\nimport com.geeke.dc.service.DcTableService;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Lists;\\nimport com.google.common.collect.Maps;\\nimport java.util.List;\\nimport java.util.Map;\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n\\n/**\\n * 后端方案Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"dcSchemeService\\")\\n@Transactional(readOnly = true)\\npublic class DcSchemeService extends CrudService<DcSchemeDao, DcScheme> {\\n\\n    @Autowired\\n    private DcTableDao dcTableDao;\\n\\n    @Autowired\\n    private DcTableService dcTableService;\\n\\n    @Autowired\\n    private DcTableColumnDao dcTableColumnDao;\\n\\n    @Autowired\\n    private DcClienSchemeDao clienSchemeDao;\\n\\n    @Override\\n    public DcScheme get(String id) {\\n        DcScheme dcScheme = super.get(id);\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /*获取子表列表   低代码-业务表*/\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        pageRequest = new PageRequest(params);\\n        List<DcTable> dcTables = dcTableDao.listAll(pageRequest);\\n        /*获取低代码-业务表子表列表   低代码-业务表字段*/\\n        if (dcTables.size() > 0) {\\n            for (int i = 0; i < dcTables.size(); i++) {\\n                List<Parameter> schemeParams = null;\\n                PageRequest schemePageRequest;\\n                /*获取和当前表在同一方案下的其他表*/\\n                schemeParams = Lists.newArrayList();\\n                schemeParams.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n                schemeParams.add(new Parameter(\\"id\\", \\"!=\\", dcTables.get(i).getId()));\\n                schemePageRequest = new PageRequest(schemeParams);\\n                dcTables.get(i).setAssociationList(dcTableDao.listAll(schemePageRequest));\\n\\n                List<Parameter> columnParams = null;\\n                PageRequest columnPageRequest;\\n                /*获取子表列表   低代码-业务表*/\\n                columnParams = Lists.newArrayList();\\n                columnParams.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTables.get(i).getId()));\\n                columnPageRequest = new PageRequest(columnParams);\\n                dcTables.get(i).setColumnList(dcTableColumnDao.listAllGroupById(columnPageRequest));\\n            }\\n        }\\n        dcScheme.setDcTableList(dcTables);\\n        return dcScheme;\\n    }\\n\\n    @Transactional(readOnly = false)\\n    @Override\\n    public DcScheme save(DcScheme dcScheme) {\\n        DcScheme dcSchemeTemp = super.save(dcScheme);\\n\\n        /* 保存子表数据     低代码-业务表 */\\n        saveDcTableList(dcSchemeTemp);\\n\\n        return dcSchemeTemp;\\n    }\\n\\n    /**\\n     * 删除\\n     * @param entity\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete(DcScheme dcScheme) {\\n        // 判断该方案是否被使用中\\n        List<Parameter> schemeParams = null;\\n        PageRequest schemePageRequest;\\n        /* 处理子表     低代码-业务表 */\\n        schemeParams = Lists.newArrayList();\\n        schemeParams.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        schemePageRequest = new PageRequest(schemeParams);\\n        List<DcClienScheme> dcClienSchemes = clienSchemeDao.listAll(schemePageRequest);\\n        if (dcClienSchemes != null && dcClienSchemes.size() > 0) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"此方案使用中，不可删除\\"));\\n        }\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /* 处理子表     低代码-业务表 */\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcScheme.setDcTableList(dcTableDao.listAll(pageRequest));\\n\\n        if (dcScheme.getDcTableList() != null && dcScheme.getDcTableList().size() > 0) {\\n            for (int i = 0; i < dcScheme.getDcTableList().size(); i++) {\\n                dcTableService.delete(dcScheme.getDcTableList().get(i));\\n            }\\n        }\\n        int rows = super.delete(dcScheme);\\n        return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param entitys\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<DcScheme> dcSchemeList) {\\n        for (DcScheme dcScheme : dcSchemeList) {\\n            delete(dcScheme);\\n        }\\n\\n        return dcSchemeList.size();\\n    }\\n\\n    /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, DcScheme entity) {\\n        Action action = super.createAction(actionTypeId, entity);\\n        if (action == null) {\\n            return null;\\n        }\\n        // 删除时记录把保存的数据保存到回收站\\n        if (ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n            for (DcTable child : entity.getDcTableList()) {\\n                ActionRecycle recycle = new ActionRecycle();\\n                recycle.setTableName(child.getBusTableName());\\n                recycle.setObjectId(child.getId());\\n                recycle.setObjectName((String) Reflections.invokeGetter(child, \\"name\\"));\\n                action.getActionRecycleList().add(recycle);\\n            }\\n        }\\n        return action;\\n    }\\n\\n    /* 保存子表数据     低代码-业务表 */\\n    private void saveDcTableList(DcScheme dcScheme) {\\n        List<Parameter> params = Lists.newArrayList();\\n\\n        params.add(new Parameter(\\"scheme_id\\", \\"=\\", dcScheme.getId()));\\n        PageRequest pageRequest = new PageRequest(params);\\n        List<DcTable> list_DcTable = dcTableDao.listAll(pageRequest);\\n\\n        List<DcTable> deletes = Lists.newArrayList(); // 删除列表\\n        List<DcTable> inserts = Lists.newArrayList(); // 添加列表\\n        List<DcTable> updates = Lists.newArrayList(); // 更新列表\\n        for (DcTable dcTableSaved : list_DcTable) {\\n            boolean found = false;\\n            for (DcTable dcTable : dcScheme.getDcTableList()) {\\n                if (dcTableSaved.getId().equals(dcTable.getId())) {\\n                    found = true;\\n                    break;\\n                }\\n            }\\n            if (!found) {\\n                deletes.add(dcTableSaved);\\n            }\\n        }\\n        if (deletes.size() > 0) {\\n            dcTableService.bulkDelete(deletes);\\n        }\\n        for (DcTable dcTable : dcScheme.getDcTableList()) {\\n            if (StringUtils.isBlank(dcTable.getId())) {\\n                dcTable.getScheme().setId(dcScheme.getId());\\n\\n                inserts.add(dcTable);\\n            } else {\\n                updates.add(dcTable);\\n            }\\n        }\\n        if (updates.size() > 0) {\\n            dcTableService.bulkUpdate(updates);\\n        }\\n        if (inserts.size() > 0) {\\n            dcTableService.bulkInsert(inserts);\\n        }\\n        // 保存表字段信息\\n        if (dcScheme.getDcTableList().size() > 0) {\\n            for (int i = 0; i < dcScheme.getDcTableList().size(); i++) {\\n                dcTableService.save(dcScheme.getDcTableList().get(i));\\n            }\\n        }\\n    }\\n\\n    /**\\n     * 查询后端方案包含业务表包含业务表字段\\n     * @param parameters\\n     * @param orderby\\n     * @return\\n     */\\n    public List<DcScheme> listSchemeTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        List<DcScheme> list = dao.listSchemeTableColumn(pageRequest);\\n        return list;\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//dao","fileName":"DcSchemeDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport com.geeke.common.data.PageRequest;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\nimport java.util.List;\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n    /**\\n     * 查询后端方案包含业务表包含业务表字段\\n     * @param var1\\n     * @return\\n     */\\n    List<DcScheme> listSchemeTableColumn(PageRequest var1);\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.dao;\\n\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.dc.entity.DcScheme;\\nimport java.util.List;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 后端方案DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface DcSchemeDao extends CrudDao<DcScheme> {\\n    /**\\n     * 查询后端方案包含业务表包含业务表字段\\n     * @param var1\\n     * @return\\n     */\\n    List<DcScheme> listSchemeTableColumn(PageRequest var1);\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//entity","fileName":"DcScheme.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\n\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\n  {{/each}}\\n{{/if}}\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{c.currentTable.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n  private boolean replace;\\t\\t//是否替换代码文件\\n\\n\\t{{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n  private List<{{child.className}}> {{child.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n    {{/each}}\\n  {{/if}}\\n  \\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{c.currentTable.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{c.currentTable.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n  public boolean getReplace() {\\n\\t\\treturn replace;\\n\\t}\\n\\n\\tpublic void setReplace(boolean replace) {\\n\\t\\tthis.replace = replace;\\n\\t}\\n  {{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n\\tpublic List<{{child.className}}> get{{child.className}}List() {\\n\\t\\treturn {{child.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{child.className}}List(List<{{child.className}}> {{child.className | lowerCase}}List) {\\n\\t\\tthis.{{child.className | lowerCase}}List = {{child.className | lowerCase}}List;\\n\\t}\\n\\t  {{/each}}\\n  {{/if}}\\n\\t\\n\\t\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.geeke.dc.entity.DcTable;\\nimport com.geeke.dc.entity.DcTemplate;\\nimport com.geeke.project.entity.Project;\\nimport com.google.common.collect.Lists;\\nimport java.util.List;\\nimport javax.validation.constraints.NotNull;\\nimport org.hibernate.validator.constraints.Length;\\n\\n/**\\n * 后端方案Entity\\n * @author\\n * @version\\n */\\n\\npublic class DcScheme extends DataEntity<DcScheme> {\\n\\n    private static final long serialVersionUID = 1339746483134570552L;\\n\\n    private String name; // 方案名称\\n\\n    private String packageName; // 包路径\\n\\n    private String moduleName; // 模块名\\n\\n    private String subModuleName; // 子模块名\\n\\n    private String functionName; // 功能名\\n\\n    private DcTemplate template; // 模板\\n\\n    private String templateJson; // 模板JSON\\n\\n    private Project project; // 项目\\n\\n    private boolean replace; //是否替换代码文件\\n\\n    private List<DcTable> dcTableList = Lists.newArrayList(); // 子表列表\\n\\n    // 构造方法\\n    public DcScheme() {\\n        super();\\n    }\\n\\n    public DcScheme(String id) {\\n        super(id);\\n    }\\n\\n    // 生成get和set方法\\n\\n    @Length(min = 1, max = 128, message = \\"方案名称长度必须介于 1 和 128 之间\\")\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    @Length(min = 1, max = 512, message = \\"包路径长度必须介于 1 和 512 之间\\")\\n    public String getPackageName() {\\n        return packageName;\\n    }\\n\\n    public void setPackageName(String packageName) {\\n        this.packageName = packageName;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"模块名长度必须介于 1 和 128 之间\\")\\n    public String getModuleName() {\\n        return moduleName;\\n    }\\n\\n    public void setModuleName(String moduleName) {\\n        this.moduleName = moduleName;\\n    }\\n\\n    @Length(min = 0, max = 128, message = \\"子模块名长度必须介于 0 和 128 之间\\")\\n    public String getSubModuleName() {\\n        return subModuleName;\\n    }\\n\\n    public void setSubModuleName(String subModuleName) {\\n        this.subModuleName = subModuleName;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"功能名长度必须介于 1 和 128 之间\\")\\n    public String getFunctionName() {\\n        return functionName;\\n    }\\n\\n    public void setFunctionName(String functionName) {\\n        this.functionName = functionName;\\n    }\\n\\n    public DcTemplate getTemplate() {\\n        return template;\\n    }\\n\\n    public void setTemplate(DcTemplate template) {\\n        this.template = template;\\n    }\\n\\n    @Length(min = 0, max = -1, message = \\"模板JSON长度必须介于 0 和 -1 之间\\")\\n    public String getTemplateJson() {\\n        return templateJson;\\n    }\\n\\n    public void setTemplateJson(String templateJson) {\\n        this.templateJson = templateJson;\\n    }\\n\\n    @NotNull(message = \\"项目不能为空\\")\\n    public Project getProject() {\\n        return project;\\n    }\\n\\n    public void setProject(Project project) {\\n        this.project = project;\\n    }\\n\\n    public boolean getReplace() {\\n        return replace;\\n    }\\n\\n    public void setReplace(boolean replace) {\\n        this.replace = replace;\\n    }\\n\\n    public List<DcTable> getDcTableList() {\\n        return dcTableList;\\n    }\\n\\n    public void setDcTableList(List<DcTable> dcTableList) {\\n        this.dcTableList = dcTableList;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"dc_scheme\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1339746483134570552\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/dc/","fileName":"DcSchemeDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n                 {{if c.name != ''template_json''}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",         \\n                 {{/if}}\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n                {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}} {{if c.customType.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n                {{else}}\\n        LEFT JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n                {{/if}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n              {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}} {{if c.currentTable.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n              {{else}}\\n        LEFT JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n              {{/if}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.DcSchemeEx\\">\\n        SELECT\\n            a.template_json AS \\"templateJson\\",\\n            IFNULL(template.json,'''') AS \\"template.json\\",\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n\\n  <resultMap id=\\"getSchemeTableColumn\\" type=\\"com.geeke.dc.entity.DcScheme\\">\\n    <id column=\\"id\\" property=\\"id\\" />\\n    <result column=\\"name\\" property=\\"name\\" />\\n    <result column=\\"packageName\\" property=\\"packageName\\" />\\n    <result column=\\"moduleName\\" property=\\"moduleName\\" />\\n    <result column=\\"subModuleName\\" property=\\"subModuleName\\" />\\n    <collection property=\\"dcTableList\\" ofType=\\"com.geeke.dc.entity.DcTable\\">\\n      <id column=\\"tableId\\" property=\\"id\\" />\\n      <result column=\\"tableName\\" property=\\"name\\" />\\n      <result column=\\"className\\" property=\\"className\\" />\\n      <result column=\\"comments\\" property=\\"comments\\" />\\n      <result column=\\"filter\\" property=\\"filter\\" />\\n      <result column=\\"scheme.id\\" property=\\"scheme.id\\" />\\n      <result column=\\"scheme.name\\" property=\\"scheme.name\\" />\\n      <result column=\\"scheme.packageName\\" property=\\"scheme.packageName\\" />\\n      <result column=\\"scheme.moduleName\\" property=\\"scheme.moduleName\\" />\\n      <result column=\\"scheme.subModuleName\\" property=\\"scheme.subModuleName\\" />\\n      <collection property=\\"columnList\\" ofType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n        <id property=\\"id\\" column=\\"columnId\\" />\\n        <result column=\\"columnName\\" property=\\"name\\" />\\n        <result column=\\"columnComments\\" property=\\"comments\\" />\\n        <result column=\\"dcTable.id\\" property=\\"dcTable.id\\" />\\n        <result column=\\"dcTable.name\\" property=\\"dcTable.name\\" />\\n        <result column=\\"dcTable.className\\" property=\\"dcTable.className\\" />\\n        <result column=\\"dcTable.scheme.name\\" property=\\"dcTable.scheme.name\\" />\\n        <result column=\\"dcTable.scheme.packageName\\" property=\\"dcTable.scheme.packageName\\" />\\n        <result column=\\"dcTable.scheme.moduleName\\" property=\\"dcTable.scheme.moduleName\\" />\\n        <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n        <result column=\\"jdbcType\\" property=\\"jdbcType\\" />\\n        <result column=\\"javaType.id\\" property=\\"javaType.id\\" />\\n        <result column=\\"javaType.name\\" property=\\"javaType.name\\" />\\n        <result column=\\"javaType.value\\" property=\\"javaType.value\\" />\\n        <result column=\\"customType.id\\" property=\\"customType.id\\" />\\n        <result column=\\"customType.name\\" property=\\"customType.name\\" />\\n        <result column=\\"customType.comments\\" property=\\"customType.comments\\" />\\n        <result column=\\"customType.className\\" property=\\"customType.className\\" />\\n        <result column=\\"customType.filter\\" property=\\"customType.filter\\" />\\n        <result column=\\"customType.scheme.name\\" property=\\"customType.scheme.name\\" />\\n        <result column=\\"customType.scheme.packageName\\" property=\\"customType.scheme.packageName\\" />\\n        <result column=\\"customType.scheme.moduleName\\" property=\\"customType.scheme.moduleName\\" />\\n        <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n        <result column=\\"currentSchemeTable\\" property=\\"currentSchemeTable\\" />\\n        <result column=\\"javaField\\" property=\\"javaField\\" />\\n        <result column=\\"associatedField\\" property=\\"associatedField\\" />\\n      </collection>\\n    </collection>\\n  </resultMap>\\n  <!--查询业务表包含业务表字段-->\\n  <select id=\\"listSchemeTableColumn\\" resultMap=\\"getSchemeTableColumn\\">\\n    SELECT\\n    a.id as id,\\n    a.name as name,\\n    a.package_name as packageName,\\n    a.module_name as moduleName,\\n    a.sub_module_name as subModuleName,\\n    table.id as tableId,\\n    table.name as tableName,\\n    table.class_name as className,\\n    table.comments as comments,\\n    table.filter as filter,\\n    table.scheme_id AS \\"scheme.id\\",\\n    IFNULL(scheme.name,'''') AS \\"scheme.name\\",\\n    IFNULL(scheme.package_name,'''') AS \\"scheme.packageName\\",\\n    IFNULL(scheme.module_name,'''') AS \\"scheme.moduleName\\",\\n    IFNULL(scheme.sub_module_name,'''') AS \\"scheme.subModuleName\\",\\n    column.id as columnId,\\n    column.name as columnName,\\n    column.comments as columnComments,\\n    column.dc_table_id AS \\"dcTable.id\\",\\n    IFNULL(table.name,'''') AS \\"dcTable.name\\",\\n    IFNULL(table.class_name,'''') AS \\"dcTable.className\\",\\n    IFNULL(columnScheme.name,'''') AS \\"dcTable.scheme.name\\",\\n    IFNULL(columnScheme.package_name,'''') AS \\"dcTable.scheme.packageName\\",\\n    IFNULL(columnScheme.module_name,'''') AS \\"dcTable.scheme.moduleName\\",\\n    IFNULL(columnScheme.sub_module_name,'''') AS \\"dcTable.scheme.subModuleName\\",\\n    column.jdbc_type AS \\"jdbcType\\",\\n    column.java_type AS \\"javaType.id\\",\\n    IFNULL(javaType.name,'''') AS \\"javaType.name\\",\\n    javaType.value AS \\"javaType.value\\",\\n    column.custom_type AS \\"customType.id\\",\\n    IFNULL(customType.name,'''') AS \\"customType.name\\",\\n    IFNULL(customType.comments,'''') AS \\"customType.comments\\",\\n    IFNULL(customType.class_name,'''') AS \\"customType.className\\",\\n    IFNULL(customType.filter,'''') AS \\"customType.filter\\",\\n    IFNULL(customScheme.name,'''') AS \\"customType.scheme.name\\",\\n    IFNULL(customScheme.package_name,'''') AS \\"customType.scheme.packageName\\",\\n    IFNULL(customScheme.module_name,'''') AS \\"customType.scheme.moduleName\\",\\n    IFNULL(customScheme.sub_module_name,'''') AS \\"customType.scheme.subModuleName\\",\\n    column.current_scheme_table AS \\"currentSchemeTable\\",\\n    column.java_field AS \\"javaField\\",\\n    column.associated_field AS \\"associatedField\\"\\n    FROM dc_scheme a\\n    LEFT JOIN dc_table `table` ON a.id = `table`.scheme_id and `table`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme scheme ON table.scheme_id = scheme.id\\n    LEFT JOIN dc_table_column `column` ON table.id = column.dc_table_id and column.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme columnScheme ON table.scheme_id = columnScheme.id\\n    LEFT JOIN sys_dict_item javaType ON javaType.id = `column`.java_type\\n    LEFT JOIN dc_table customType ON customType.id = `column`.custom_type\\n    LEFT JOIN dc_scheme customScheme on customType.scheme_id = customScheme.id\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n\\n</mapper>\\n","__config__":{"children":[]},"locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.dc.dao.DcSchemeDao\\">\\n  <sql id=\\"dcSchemeColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.name AS \\"name\\",\\n      a.package_name AS \\"packageName\\",\\n      a.module_name AS \\"moduleName\\",\\n      a.sub_module_name AS \\"subModuleName\\",\\n      a.function_name AS \\"functionName\\",\\n      a.template_id AS \\"template.id\\",\\n      IFNULL(template.name,'''') AS \\"template.name\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n      a.project_id AS \\"project.id\\",\\n      IFNULL(project.name,'''') AS \\"project.name\\",\\n      IFNULL(project.status,'''') AS \\"project.status\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"dcSchemeJoins\\">\\n    LEFT JOIN dc_template template ON template.id = a.template_id\\n    LEFT JOIN prj_project project ON project.id = a.project_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.dc.entity.DcSchemeEx\\">\\n    SELECT\\n    a.template_json AS \\"templateJson\\",\\n    IFNULL(template.json,'''') AS \\"template.json\\",\\n    <include refid=\\"dcSchemeColumns\\" />\\n    FROM dc_scheme a\\n    <include refid=\\"dcSchemeJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM dc_scheme a\\n    <include refid=\\"dcSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.dc.entity.DcScheme\\">\\n    SELECT\\n    <include refid=\\"dcSchemeColumns\\" />\\n    FROM dc_scheme a\\n    <include refid=\\"dcSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.dc.entity.DcScheme\\">\\n    SELECT\\n    <include refid=\\"dcSchemeColumns\\" />\\n    FROM dc_scheme a\\n    <include refid=\\"dcSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO dc_scheme(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      name,\\n      package_name,\\n      module_name,\\n      sub_module_name,\\n      function_name,\\n      template_id,\\n      template_json,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      project_id,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ name },\\n      #{ packageName },\\n      #{ moduleName },\\n      #{ subModuleName },\\n      #{ functionName },\\n      #{ template.id },\\n      #{ templateJson },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n      #{ project.id },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE dc_scheme SET\\n    <trim suffixOverrides=\\",\\">\\n      name = #{ name },\\n      package_name = #{ packageName },\\n      module_name = #{ moduleName },\\n      sub_module_name = #{ subModuleName },\\n      function_name = #{ functionName },\\n      template_id = #{ template.id },\\n      template_json = #{ templateJson },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n      project_id = #{ project.id },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE dc_scheme SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO dc_scheme(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      name,\\n      package_name,\\n      module_name,\\n      sub_module_name,\\n      function_name,\\n      template_id,\\n      template_json,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      project_id,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.name},\\n        #{entity.packageName},\\n        #{entity.moduleName},\\n        #{entity.subModuleName},\\n        #{entity.functionName},\\n        #{entity.template.id},\\n        #{entity.templateJson},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n        #{entity.project.id},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_scheme\\n    <set>\\n      <trim prefix=\\"name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.name}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"package_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.packageName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"module_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.moduleName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"sub_module_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.subModuleName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"function_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.functionName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"template_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.template.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"template_json=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.templateJson}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"project_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.project.id}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_scheme\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <resultMap id=\\"getSchemeTableColumn\\" type=\\"com.geeke.dc.entity.DcScheme\\">\\n    <id column=\\"id\\" property=\\"id\\" />\\n    <result column=\\"name\\" property=\\"name\\" />\\n    <result column=\\"packageName\\" property=\\"packageName\\" />\\n    <result column=\\"moduleName\\" property=\\"moduleName\\" />\\n    <result column=\\"subModuleName\\" property=\\"subModuleName\\" />\\n    <collection property=\\"dcTableList\\" ofType=\\"com.geeke.dc.entity.DcTable\\">\\n      <id column=\\"tableId\\" property=\\"id\\" />\\n      <result column=\\"tableName\\" property=\\"name\\" />\\n      <result column=\\"className\\" property=\\"className\\" />\\n      <result column=\\"comments\\" property=\\"comments\\" />\\n      <result column=\\"filter\\" property=\\"filter\\" />\\n      <result column=\\"scheme.id\\" property=\\"scheme.id\\" />\\n      <result column=\\"scheme.name\\" property=\\"scheme.name\\" />\\n      <result column=\\"scheme.packageName\\" property=\\"scheme.packageName\\" />\\n      <result column=\\"scheme.moduleName\\" property=\\"scheme.moduleName\\" />\\n      <result column=\\"scheme.subModuleName\\" property=\\"scheme.subModuleName\\" />\\n      <collection property=\\"columnList\\" ofType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n        <id property=\\"id\\" column=\\"columnId\\" />\\n        <result column=\\"columnName\\" property=\\"name\\" />\\n        <result column=\\"columnComments\\" property=\\"comments\\" />\\n        <result column=\\"dcTable.id\\" property=\\"dcTable.id\\" />\\n        <result column=\\"dcTable.name\\" property=\\"dcTable.name\\" />\\n        <result column=\\"dcTable.className\\" property=\\"dcTable.className\\" />\\n        <result column=\\"dcTable.scheme.name\\" property=\\"dcTable.scheme.name\\" />\\n        <result column=\\"dcTable.scheme.packageName\\" property=\\"dcTable.scheme.packageName\\" />\\n        <result column=\\"dcTable.scheme.moduleName\\" property=\\"dcTable.scheme.moduleName\\" />\\n        <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n        <result column=\\"jdbcType\\" property=\\"jdbcType\\" />\\n        <result column=\\"javaType.id\\" property=\\"javaType.id\\" />\\n        <result column=\\"javaType.name\\" property=\\"javaType.name\\" />\\n        <result column=\\"javaType.value\\" property=\\"javaType.value\\" />\\n        <result column=\\"customType.id\\" property=\\"customType.id\\" />\\n        <result column=\\"customType.name\\" property=\\"customType.name\\" />\\n        <result column=\\"customType.comments\\" property=\\"customType.comments\\" />\\n        <result column=\\"customType.className\\" property=\\"customType.className\\" />\\n        <result column=\\"customType.filter\\" property=\\"customType.filter\\" />\\n        <result column=\\"customType.scheme.name\\" property=\\"customType.scheme.name\\" />\\n        <result column=\\"customType.scheme.packageName\\" property=\\"customType.scheme.packageName\\" />\\n        <result column=\\"customType.scheme.moduleName\\" property=\\"customType.scheme.moduleName\\" />\\n        <result column=\\"dcTable.scheme.subModuleName\\" property=\\"dcTable.scheme.subModuleName\\" />\\n        <result column=\\"currentSchemeTable\\" property=\\"currentSchemeTable\\" />\\n        <result column=\\"javaField\\" property=\\"javaField\\" />\\n        <result column=\\"associatedField\\" property=\\"associatedField\\" />\\n      </collection>\\n    </collection>\\n  </resultMap>\\n  <!--查询业务表包含业务表字段-->\\n  <select id=\\"listSchemeTableColumn\\" resultMap=\\"getSchemeTableColumn\\">\\n    SELECT\\n    a.id as id,\\n    a.name as name,\\n    a.package_name as packageName,\\n    a.module_name as moduleName,\\n    a.sub_module_name as subModuleName,\\n    table.id as tableId,\\n    table.name as tableName,\\n    table.class_name as className,\\n    table.comments as comments,\\n    table.filter as filter,\\n    table.scheme_id AS \\"scheme.id\\",\\n    IFNULL(scheme.name,'''') AS \\"scheme.name\\",\\n    IFNULL(scheme.package_name,'''') AS \\"scheme.packageName\\",\\n    IFNULL(scheme.module_name,'''') AS \\"scheme.moduleName\\",\\n    IFNULL(scheme.sub_module_name,'''') AS \\"scheme.subModuleName\\",\\n    column.id as columnId,\\n    column.name as columnName,\\n    column.comments as columnComments,\\n    column.dc_table_id AS \\"dcTable.id\\",\\n    IFNULL(table.name,'''') AS \\"dcTable.name\\",\\n    IFNULL(table.class_name,'''') AS \\"dcTable.className\\",\\n    IFNULL(columnScheme.name,'''') AS \\"dcTable.scheme.name\\",\\n    IFNULL(columnScheme.package_name,'''') AS \\"dcTable.scheme.packageName\\",\\n    IFNULL(columnScheme.module_name,'''') AS \\"dcTable.scheme.moduleName\\",\\n    IFNULL(columnScheme.sub_module_name,'''') AS \\"dcTable.scheme.subModuleName\\",\\n    column.jdbc_type AS \\"jdbcType\\",\\n    column.java_type AS \\"javaType.id\\",\\n    IFNULL(javaType.name,'''') AS \\"javaType.name\\",\\n    javaType.value AS \\"javaType.value\\",\\n    column.custom_type AS \\"customType.id\\",\\n    IFNULL(customType.name,'''') AS \\"customType.name\\",\\n    IFNULL(customType.comments,'''') AS \\"customType.comments\\",\\n    IFNULL(customType.class_name,'''') AS \\"customType.className\\",\\n    IFNULL(customType.filter,'''') AS \\"customType.filter\\",\\n    IFNULL(customScheme.name,'''') AS \\"customType.scheme.name\\",\\n    IFNULL(customScheme.package_name,'''') AS \\"customType.scheme.packageName\\",\\n    IFNULL(customScheme.module_name,'''') AS \\"customType.scheme.moduleName\\",\\n    IFNULL(customScheme.sub_module_name,'''') AS \\"customType.scheme.subModuleName\\",\\n    column.current_scheme_table AS \\"currentSchemeTable\\",\\n    column.java_field AS \\"javaField\\",\\n    column.associated_field AS \\"associatedField\\"\\n    FROM dc_scheme a\\n    LEFT JOIN dc_table `table` ON a.id = `table`.scheme_id and `table`.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme scheme ON table.scheme_id = scheme.id\\n    LEFT JOIN dc_table_column `column` ON table.id = column.dc_table_id and column.del_flag = #{DEL_FLAG_NORMAL}\\n    LEFT JOIN dc_scheme columnScheme ON table.scheme_id = columnScheme.id\\n    LEFT JOIN sys_dict_item javaType ON javaType.id = `column`.java_type\\n    LEFT JOIN dc_table customType ON customType.id = `column`.custom_type\\n    LEFT JOIN dc_scheme customScheme on customType.scheme_id = customScheme.id\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n</mapper>"},{"filePath":"client/src/api/dc/","fileName":"dcTable.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n\\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'',\\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\nexport const listTableColumn = (search, projectId) =>\\n  request({\\n    url: ''/dc/dcTable/listTableColumn'',\\n    method: ''post'',\\n    data: search,\\n    headers:{\\n      \\"project_id\\": projectId\\n    }\\n  })","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getDcTableById = (id) =>\\n  request({\\n    url: ''/dc/dcTable/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listDcTablePage = (search) =>\\n  request({\\n    url: ''/dc/dcTable/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listDcTableAll = (search) =>\\n  request({\\n    url: ''/dc/dcTable/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveDcTable = (dcTable) =>\\n  request({\\n    url: ''/dc/dcTable/save'',\\n    method: ''post'',\\n    data: dcTable\\n  })\\n\\nexport const deleteDcTable = (dcTable) =>\\n  request({\\n    url: ''/dc/dcTable/delete'',\\n    method: ''post'',\\n    data: dcTable\\n  })\\n\\nexport const bulkInsertDcTable = (dcTables) =>\\n  request({\\n    url: ''/dc/dcTable/bulkInsert'',\\n    method: ''post'',\\n    data: dcTables\\n  })\\n\\nexport const bulkUpdateDcTable = (dcTables) =>\\n  request({\\n    url: ''/dc/dcTable/bulkUpdate'',\\n    method: ''post'',\\n    data: dcTables\\n  })\\n\\nexport const bulkDeleteDcTable = (dcTables) =>\\n  request({\\n    url: ''/dc/dcTable/bulkDelete'',\\n    method: ''post'',\\n    data: dcTables\\n  })\\n\\nexport const listTableColumn = (search, projectId) =>\\n  request({\\n    url: ''/dc/dcTable/listTableColumn'',\\n    method: ''post'',\\n    data: search,\\n    headers: {\\n      project_id: projectId\\n    }\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/dc//controller","fileName":"DcTableController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport com.geeke.dc.utils.DcUtils;\\nimport com.geeke.sys.entity.DictItem;\\nimport com.geeke.sys.service.DictItemService;\\nimport com.google.common.collect.Lists;\\nimport java.util.Arrays;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t@Autowired\\n  private DictItemService dictItemService;\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        ).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        String id = {{table.className | lowerCase}}Service.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{/if}}\\n  \\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n    @PostMapping({\\"listTableColumn\\"})\\n    public ResponseEntity<JSONObject> listTableColumn(@RequestBody SearchParams searchParams) {\\n        List<DcTableColumn> result = dcTableService.listTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        List<DictItem> dtList = this.getItemList();\\n        DcUtils.initColumnField(result, dtList);\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    private List<DictItem> getItemList() {\\n        List<Parameter> params = Lists.newArrayList();\\n        String[] strings = new String[]{\\"5006\\", \\"5002\\", \\"5003\\"};\\n        params.add(new Parameter(\\"dict_type_id\\", \\"in\\", Arrays.asList(strings)));\\n        return this.dictItemService.listAll(params, (String)null);\\n    }\\n}","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"package com.geeke.dc.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.dc.entity.DcTable;\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport com.geeke.dc.service.DcTableService;\\nimport com.geeke.dc.utils.DcUtils;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.sys.entity.DictItem;\\nimport com.geeke.sys.service.DictItemService;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.google.common.collect.Lists;\\nimport java.util.Arrays;\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * 后端方案Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/dc/dcTable\\")\\npublic class DcTableController extends BaseController {\\n\\n    @Autowired\\n    private DcTableService dcTableService;\\n\\n    @Autowired\\n    private DictItemService dictItemService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        DcTable entity = dcTableService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<DcTable> result = dcTableService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<DcTable> result = dcTableService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(@RequestBody DcTable entity) {\\n        String id = dcTableService.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody DcTable entity) {\\n        int rows = dcTableService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<DcTable> entitys) {\\n        List<String> ids = dcTableService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<DcTable> entitys) {\\n        List<String> ids = dcTableService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<DcTable> entitys) {\\n        int rows = dcTableService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping({ \\"listTableColumn\\" })\\n    public ResponseEntity<JSONObject> listTableColumn(@RequestBody SearchParams searchParams) {\\n        List<DcTableColumn> result = dcTableService.listTableColumn(searchParams.getParams(), searchParams.getOrderby());\\n        List<DictItem> dtList = this.getItemList();\\n        DcUtils.initColumnField(result, dtList);\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    private List<DictItem> getItemList() {\\n        List<Parameter> params = Lists.newArrayList();\\n        String[] strings = new String[] { \\"5006\\", \\"5002\\", \\"5003\\" };\\n        params.add(new Parameter(\\"dict_type_id\\", \\"in\\", Arrays.asList(strings)));\\n        return this.dictItemService.listAll(params, (String) null);\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//service","fileName":"DcTableService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\nimport com.baomidou.dynamic.datasource.annotation.DS;\\nimport com.geeke.common.constants.DbType;\\nimport com.geeke.utils.JdbcTypeUtils;\\n\\nimport java.util.Map;\\nimport java.util.List;\\n{{if childTables.length > 0}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\n{{/if}}\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{child.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{child.className}}Service;\\n  {{/each}}\\n{{/if}}\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport com.geeke.dc.dao.DcTableColumnDao;\\nimport com.geeke.dc.service.DcTableColumnService;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport com.google.common.collect.Lists;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\nimport javax.sql.DataSource;\\n\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n\\n    @Autowired\\n    private DataSource dataSource;\\n\\n    @Autowired\\n    private DcTableColumnDao dcTableColumnDao;\\n\\n    @Autowired\\n    DcTableColumnService dcTableColumnService;\\n    \\n    @Override\\n    public DcTable get(String id) {\\n        DcTable dcTable = super.get(id);\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /*获取子表列表   低代码-业务表字段*/\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcTable.setColumnList(dcTableColumnDao.listAll(pageRequest));\\n        return dcTable;\\n    }\\n\\n    @Override\\n    @Transactional(readOnly = false)\\n    public DcTable save(DcTable dcTable) {\\n\\t\\n        DcTable dcTableTemp = super.save(dcTable);\\n        if (StringUtils.isNoneBlank(dcTableTemp.getId())) {\\n\\n            /* 保存子表数据     低代码-业务表字段 */\\n            saveDcTableColumnList(dcTableTemp);\\n        }\\n        return dcTableTemp;\\n    }\\n\\n\\n    /**\\n     * 删除\\n     * @param entity\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete(DcTable dcTable) {\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /* 处理子表     低代码-业务表字段 */\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcTable.setColumnList(dcTableColumnDao.listAll(pageRequest));\\n\\n        if(dcTable.getColumnList() != null && dcTable.getColumnList().size() > 0) {\\n            dcTableColumnService.bulkDelete(dcTable.getColumnList());\\n        }\\n\\n        int rows = super.delete(dcTable);\\n        return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param entitys\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<DcTable> dcTableList) {\\n        for(DcTable dcTable: dcTableList) {\\n            delete(dcTable);\\n        }\\n        return dcTableList.size();\\n    }\\n\\n    /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, DcTable entity) {\\n        Action action = super.createAction(actionTypeId, entity);\\n        if(action == null) {\\n            return null;\\n        }\\n        // 删除时记录把保存的数据保存到回收站\\n        if(ActionConstants.ACTION_DELETED.equals(actionTypeId)) {   \\n            for(DcTableColumn child: entity.getColumnList()) {\\n                ActionRecycle recycle = new ActionRecycle();\\n                recycle.setTableName(child.getBusTableName());\\n                recycle.setObjectId(child.getId());\\n                recycle.setObjectName((String)Reflections.invokeGetter(child, \\"name\\"));\\n                action.getActionRecycleList().add(recycle);            \\n            }\\n        }\\n        return action;\\n    }\\n    \\n    /* 保存子表数据     低代码-业务表字段 */\\n    private void saveDcTableColumnList(DcTable dcTable) {\\n        List<Parameter> params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        PageRequest pageRequest = new PageRequest(params);\\n        List<DcTableColumn> list_DcTableColumn = dcTableColumnDao.listAll(pageRequest);            \\n        List<DcTableColumn> deletes = Lists.newArrayList(); // 删除列表\\n        List<DcTableColumn> inserts = Lists.newArrayList(); // 添加列表\\n        List<DcTableColumn> updates = Lists.newArrayList(); // 更新列表\\n        for(DcTableColumn dcTableColumnSaved: list_DcTableColumn) {\\n            boolean found = false;   \\n            for (DcTableColumn dcTableColumn : dcTable.getColumnList()){\\n               if(dcTableColumnSaved.getId().equals(dcTableColumn.getId())){\\n                   found = true;\\n                   break;\\n               }\\n            }\\n            if(!found) {\\n              dcTableColumnSaved.setOldUpdateDate(dcTableColumnSaved.getUpdateDate());\\n              deletes.add(dcTableColumnSaved);\\n            }\\n        }\\n        if(deletes.size() > 0) {\\n            dcTableColumnDao.bulkDelete(deletes);\\n        }\\n        for (DcTableColumn dcTableColumn : dcTable.getColumnList()){\\n         \\n\\n            if (StringUtils.isBlank(dcTableColumn.getId())) {\\n                dcTableColumn.setDcTable(new DcTable(dcTable.getId()));\\n                dcTableColumn.preInsert();\\n                inserts.add(dcTableColumn);\\n            } else {\\n                dcTableColumn.preUpdate();\\n                updates.add(dcTableColumn);\\n            }\\n\\n        }\\n        if(updates.size() > 0) {\\n            dcTableColumnDao.bulkUpdate(updates);\\n        }\\n        if(inserts.size() > 0) {\\n            dcTableColumnDao.bulkInsert(inserts);\\n        }\\n    }\\n\\n    @DS(\\"#header.project_id\\")\\n    public List<DcTableColumn> listTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        DbType type = JdbcTypeUtils.getType(dataSource);\\n        if(type == DbType.MYSQL){\\n            return dao.listTableColumn(pageRequest);\\n        }\\n        if(type == DbType.SQLSERVER){\\n            return dao.listTableColumnSqlServer(pageRequest);\\n        }\\n        if(type == DbType.ORACLE){\\n            return dao.listTableColumnOracle(pageRequest);\\n        }\\n        return null;\\n    }\\n}","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"package com.geeke.dc.service;\\n\\nimport com.baomidou.dynamic.datasource.annotation.DS;\\nimport com.geeke.common.constants.ActionConstants;\\nimport com.geeke.common.constants.DbType;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.dc.dao.DcTableColumnDao;\\nimport com.geeke.dc.dao.DcTableDao;\\nimport com.geeke.dc.entity.DcTable;\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport com.geeke.dc.service.DcTableColumnService;\\nimport com.geeke.sys.entity.Action;\\nimport com.geeke.sys.entity.ActionRecycle;\\nimport com.geeke.utils.JdbcTypeUtils;\\nimport com.geeke.utils.Reflections;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Lists;\\nimport com.google.common.collect.Maps;\\nimport java.util.List;\\nimport java.util.Map;\\nimport javax.sql.DataSource;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n\\n/**\\n * 后端方案Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"dcTableService\\")\\n@Transactional(readOnly = true)\\npublic class DcTableService extends CrudService<DcTableDao, DcTable> {\\n\\n    @Autowired\\n    private DataSource dataSource;\\n\\n    @Autowired\\n    private DcTableColumnDao dcTableColumnDao;\\n\\n    @Autowired\\n    DcTableColumnService dcTableColumnService;\\n\\n    @Override\\n    public DcTable get(String id) {\\n        DcTable dcTable = super.get(id);\\n\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /*获取子表列表   低代码-业务表字段*/\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcTable.setColumnList(dcTableColumnDao.listAll(pageRequest));\\n        return dcTable;\\n    }\\n\\n    @Override\\n    @Transactional(readOnly = false)\\n    public DcTable save(DcTable dcTable) {\\n        DcTable dcTableTemp = super.save(dcTable);\\n        if (StringUtils.isNoneBlank(dcTableTemp.getId())) {\\n            /* 保存子表数据     低代码-业务表字段 */\\n            saveDcTableColumnList(dcTableTemp);\\n        }\\n        return dcTableTemp;\\n    }\\n\\n    /**\\n     * 删除\\n     * @param entity\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int delete(DcTable dcTable) {\\n        List<Parameter> params = null;\\n        PageRequest pageRequest;\\n        /* 处理子表     低代码-业务表字段 */\\n        params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        pageRequest = new PageRequest(params);\\n        dcTable.setColumnList(dcTableColumnDao.listAll(pageRequest));\\n\\n        if (dcTable.getColumnList() != null && dcTable.getColumnList().size() > 0) {\\n            dcTableColumnService.bulkDelete(dcTable.getColumnList());\\n        }\\n\\n        int rows = super.delete(dcTable);\\n        return rows;\\n    }\\n\\n    /**\\n     * 批量删除\\n     * @param entitys\\n     */\\n    @Override\\n    @Transactional(readOnly = false)\\n    public int bulkDelete(List<DcTable> dcTableList) {\\n        for (DcTable dcTable : dcTableList) {\\n            delete(dcTable);\\n        }\\n        return dcTableList.size();\\n    }\\n\\n    /**\\n     * 生成操作日志\\n     * @param actionTypeId  操作类型Id\\n     * @param entity        操作的实体对象\\n     * @return\\n     */\\n    @Override\\n    protected Action createAction(String actionTypeId, DcTable entity) {\\n        Action action = super.createAction(actionTypeId, entity);\\n        if (action == null) {\\n            return null;\\n        }\\n        // 删除时记录把保存的数据保存到回收站\\n        if (ActionConstants.ACTION_DELETED.equals(actionTypeId)) {\\n            for (DcTableColumn child : entity.getColumnList()) {\\n                ActionRecycle recycle = new ActionRecycle();\\n                recycle.setTableName(child.getBusTableName());\\n                recycle.setObjectId(child.getId());\\n                recycle.setObjectName((String) Reflections.invokeGetter(child, \\"name\\"));\\n                action.getActionRecycleList().add(recycle);\\n            }\\n        }\\n        return action;\\n    }\\n\\n    /* 保存子表数据     低代码-业务表字段 */\\n    private void saveDcTableColumnList(DcTable dcTable) {\\n        List<Parameter> params = Lists.newArrayList();\\n        params.add(new Parameter(\\"dc_table_id\\", \\"=\\", dcTable.getId()));\\n        PageRequest pageRequest = new PageRequest(params);\\n        List<DcTableColumn> list_DcTableColumn = dcTableColumnDao.listAll(pageRequest);\\n        List<DcTableColumn> deletes = Lists.newArrayList(); // 删除列表\\n        List<DcTableColumn> inserts = Lists.newArrayList(); // 添加列表\\n        List<DcTableColumn> updates = Lists.newArrayList(); // 更新列表\\n        for (DcTableColumn dcTableColumnSaved : list_DcTableColumn) {\\n            boolean found = false;\\n            for (DcTableColumn dcTableColumn : dcTable.getColumnList()) {\\n                if (dcTableColumnSaved.getId().equals(dcTableColumn.getId())) {\\n                    found = true;\\n                    break;\\n                }\\n            }\\n            if (!found) {\\n                dcTableColumnSaved.setOldUpdateDate(dcTableColumnSaved.getUpdateDate());\\n                deletes.add(dcTableColumnSaved);\\n            }\\n        }\\n        if (deletes.size() > 0) {\\n            dcTableColumnDao.bulkDelete(deletes);\\n        }\\n        for (DcTableColumn dcTableColumn : dcTable.getColumnList()) {\\n            if (StringUtils.isBlank(dcTableColumn.getId())) {\\n                dcTableColumn.setDcTable(new DcTable(dcTable.getId()));\\n                dcTableColumn.preInsert();\\n                inserts.add(dcTableColumn);\\n            } else {\\n                dcTableColumn.preUpdate();\\n                updates.add(dcTableColumn);\\n            }\\n        }\\n        if (updates.size() > 0) {\\n            dcTableColumnDao.bulkUpdate(updates);\\n        }\\n        if (inserts.size() > 0) {\\n            dcTableColumnDao.bulkInsert(inserts);\\n        }\\n    }\\n\\n    @DS(\\"#header.project_id\\")\\n    public List<DcTableColumn> listTableColumn(List<Parameter> parameters, String orderby) {\\n        PageRequest pageRequest = new PageRequest(parameters, orderby);\\n        DbType type = JdbcTypeUtils.getType(dataSource);\\n        if (type == DbType.MYSQL) {\\n            return dao.listTableColumn(pageRequest);\\n        }\\n        if (type == DbType.SQLSERVER) {\\n            return dao.listTableColumnSqlServer(pageRequest);\\n        }\\n        if (type == DbType.ORACLE) {\\n            return dao.listTableColumnOracle(pageRequest);\\n        }\\n        return null;\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//dao","fileName":"DcTableDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport java.util.List;\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n    /**\\n     * 查询表字段\\n     * @param var1\\n     * @return\\n     */\\n    List<DcTableColumn> listTableColumn(PageRequest var1);\\n    \\n    List<DcTableColumn> listTableColumnSqlServer(PageRequest var1);\\n\\n    List<DcTableColumn> listTableColumnOracle(PageRequest var1);\\n}","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"package com.geeke.dc.dao;\\n\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.dc.entity.DcTable;\\nimport com.geeke.dc.entity.DcTableColumn;\\nimport java.util.List;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 后端方案DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface DcTableDao extends CrudDao<DcTable> {\\n    /**\\n     * 查询表字段\\n     * @param var1\\n     * @return\\n     */\\n    List<DcTableColumn> listTableColumn(PageRequest var1);\\n\\n    List<DcTableColumn> listTableColumnSqlServer(PageRequest var1);\\n\\n    List<DcTableColumn> listTableColumnOracle(PageRequest var1);\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//entity","fileName":"DcTable.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\n\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n{{if table.isMainTable === ''1''}}\\n  {{each childTables as child}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{child.className}};\\n  {{/each}}\\n{{/if}}\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport com.google.common.collect.Lists;\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{c.currentTable.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t{{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n  private List<{{child.className}}> {{child.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n    {{/each}}\\n  {{/if}}\\n  private boolean isTreeTable; // 获取自定义类型custom关联表是否是树形\\n\\tprivate Boolean delFlagExists; // 获取自定义类型custom|this关联表是否包含删除字段\\n\\tprivate List<DcTable> associationList = Lists.newArrayList(); // 当前表的同方案下其他表\\n\\n\\tprivate List<DcTableColumn> columnList = Lists.newArrayList();\\t\\t// 子表列表\\n  \\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\n  public DcTable(DcScheme scheme){\\n\\t\\tthis.scheme = scheme;\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{c.currentTable.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{c.currentTable.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n  {{if table.isMainTable === ''1''}}\\n    {{each childTables child}}\\n\\tpublic List<{{child.className}}> get{{child.className}}List() {\\n\\t\\treturn {{child.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{child.className}}List(List<{{child.className}}> {{child.className | lowerCase}}List) {\\n\\t\\tthis.{{child.className | lowerCase}}List = {{child.className | lowerCase}}List;\\n\\t}\\n\\t  {{/each}}\\n  {{/if}}\\n  public boolean getIsTreeTable() {\\n\\t\\treturn isTreeTable;\\n\\t}\\n\\tpublic void setIsTreeTable(boolean isTreeTable) {\\n\\t\\tthis.isTreeTable = isTreeTable;\\n\\t}\\n\\n\\tpublic Boolean getDelFlagExists() {\\n\\t\\treturn delFlagExists;\\n\\t}\\n\\tpublic void setDelFlagExists(Boolean delFlagExists) {\\n\\t\\tthis.delFlagExists = delFlagExists;\\n\\t}\\n  \\n  public List<DcTableColumn> getColumnList() {\\n\\t\\treturn columnList;\\n\\t}\\n\\n\\tpublic void setColumnList(List<DcTableColumn> columnList) {\\n\\t\\tthis.columnList = columnList;\\n\\t}\\n\\n\\t@JsonIgnore\\n\\tpublic List<DcTable> getAssociationList() {\\n\\t\\treturn this.associationList;\\n\\t}\\n\\n\\tpublic void setAssociationList(List<DcTable> associationList) {\\n\\t\\tthis.associationList = associationList;\\n\\t}\\n\\t\\n\\t\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"package com.geeke.dc.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.geeke.dc.entity.DcScheme;\\nimport com.google.common.collect.Lists;\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport javax.validation.constraints.NotNull;\\nimport org.hibernate.validator.constraints.Length;\\n\\n/**\\n * 后端方案Entity\\n * @author\\n * @version\\n */\\n\\npublic class DcTable extends DataEntity<DcTable> {\\n\\n    private static final long serialVersionUID = 1339746483134570553L;\\n\\n    private String name; // 表\\n\\n    private String source; // 表来源\\n\\n    private DcScheme scheme; // 代码方案\\n\\n    private String className; // 实体类名\\n\\n    private String comments; // 说明\\n\\n    private String parentTableFk; // 父表外键\\n\\n    private String isMainTable; // 是否主表（0：否，1：是）\\n\\n    private String isAssociation; // 是否关联表（0：否，1：是）\\n\\n    private String associationField; // 关联对象字段\\n\\n    private String checkVersion; // 是否检查版本\\n\\n    private String filter; // 筛选条件\\n\\n    private String constraintJson; // 表约束\\n\\n    private String orderColumns; // 排序字段\\n\\n    private String isOneToOne; // 是否一对一表（0：否，1：是）\\n\\n    private boolean isTreeTable; // 获取自定义类型custom关联表是否是树形\\n    private Boolean delFlagExists; // 获取自定义类型custom|this关联表是否包含删除字段\\n    private List<DcTable> associationList = Lists.newArrayList(); // 当前表的同方案下其他表\\n\\n    private List<DcTableColumn> columnList = Lists.newArrayList(); // 子表列表\\n\\n    // 构造方法\\n    public DcTable() {\\n        super();\\n    }\\n\\n    public DcTable(String id) {\\n        super(id);\\n    }\\n\\n    public DcTable(DcScheme scheme) {\\n        this.scheme = scheme;\\n    }\\n\\n    // 生成get和set方法\\n\\n    @Length(min = 1, max = 128, message = \\"表长度必须介于 1 和 128 之间\\")\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"表来源长度必须介于 1 和 128 之间\\")\\n    public String getSource() {\\n        return source;\\n    }\\n\\n    public void setSource(String source) {\\n        this.source = source;\\n    }\\n\\n    @NotNull(message = \\"代码方案不能为空\\")\\n    public DcScheme getScheme() {\\n        return scheme;\\n    }\\n\\n    public void setScheme(DcScheme scheme) {\\n        this.scheme = scheme;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"实体类名长度必须介于 1 和 128 之间\\")\\n    public String getClassName() {\\n        return className;\\n    }\\n\\n    public void setClassName(String className) {\\n        this.className = className;\\n    }\\n\\n    @Length(min = 0, max = 64, message = \\"说明长度必须介于 0 和 64 之间\\")\\n    public String getComments() {\\n        return comments;\\n    }\\n\\n    public void setComments(String comments) {\\n        this.comments = comments;\\n    }\\n\\n    @Length(min = 0, max = 64, message = \\"父表外键长度必须介于 0 和 64 之间\\")\\n    public String getParentTableFk() {\\n        return parentTableFk;\\n    }\\n\\n    public void setParentTableFk(String parentTableFk) {\\n        this.parentTableFk = parentTableFk;\\n    }\\n\\n    @NotNull(message = \\"是否主表（0：否，1：是）不能为空\\")\\n    public String getIsMainTable() {\\n        return isMainTable;\\n    }\\n\\n    public void setIsMainTable(String isMainTable) {\\n        this.isMainTable = isMainTable;\\n    }\\n\\n    public String getIsAssociation() {\\n        return isAssociation;\\n    }\\n\\n    public void setIsAssociation(String isAssociation) {\\n        this.isAssociation = isAssociation;\\n    }\\n\\n    @Length(min = 0, max = 64, message = \\"关联对象字段长度必须介于 0 和 64 之间\\")\\n    public String getAssociationField() {\\n        return associationField;\\n    }\\n\\n    public void setAssociationField(String associationField) {\\n        this.associationField = associationField;\\n    }\\n\\n    @NotNull(message = \\"是否检查版本不能为空\\")\\n    public String getCheckVersion() {\\n        return checkVersion;\\n    }\\n\\n    public void setCheckVersion(String checkVersion) {\\n        this.checkVersion = checkVersion;\\n    }\\n\\n    @Length(min = 0, max = 2048, message = \\"筛选条件长度必须介于 0 和 2048 之间\\")\\n    public String getFilter() {\\n        return filter;\\n    }\\n\\n    public void setFilter(String filter) {\\n        this.filter = filter;\\n    }\\n\\n    @Length(min = 0, max = -1, message = \\"表约束长度必须介于 0 和 -1 之间\\")\\n    public String getConstraintJson() {\\n        return constraintJson;\\n    }\\n\\n    public void setConstraintJson(String constraintJson) {\\n        this.constraintJson = constraintJson;\\n    }\\n\\n    @Length(min = 0, max = 2048, message = \\"排序字段长度必须介于 0 和 2048 之间\\")\\n    public String getOrderColumns() {\\n        return orderColumns;\\n    }\\n\\n    public void setOrderColumns(String orderColumns) {\\n        this.orderColumns = orderColumns;\\n    }\\n\\n    public String getIsOneToOne() {\\n        return isOneToOne;\\n    }\\n\\n    public void setIsOneToOne(String isOneToOne) {\\n        this.isOneToOne = isOneToOne;\\n    }\\n\\n    public boolean getIsTreeTable() {\\n        return isTreeTable;\\n    }\\n\\n    public void setIsTreeTable(boolean isTreeTable) {\\n        this.isTreeTable = isTreeTable;\\n    }\\n\\n    public Boolean getDelFlagExists() {\\n        return delFlagExists;\\n    }\\n\\n    public void setDelFlagExists(Boolean delFlagExists) {\\n        this.delFlagExists = delFlagExists;\\n    }\\n\\n    public List<DcTableColumn> getColumnList() {\\n        return columnList;\\n    }\\n\\n    public void setColumnList(List<DcTableColumn> columnList) {\\n        this.columnList = columnList;\\n    }\\n\\n    @JsonIgnore\\n    public List<DcTable> getAssociationList() {\\n        return this.associationList;\\n    }\\n\\n    public void setAssociationList(List<DcTable> associationList) {\\n        this.associationList = associationList;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"dc_table\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1339746483134570553\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/dc/","fileName":"DcTableDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n                {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}} {{if c.customType.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n                {{else}}\\n        LEFT JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n                {{/if}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n              {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}} {{if c.currentTable.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}\\n              {{else}}\\n        LEFT JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n              {{/if}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.DcTableEx\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.DcTableEx\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.DcTableEx\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n  <select id=\\"listTableColumn\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n        SELECT\\n        a.COLUMN_NAME AS \\"name\\",\\n        a.COLUMN_COMMENT AS \\"comments\\",\\n        a.COLUMN_TYPE AS \\"jdbcType\\",\\n        (CASE WHEN IS_NULLABLE = ''YES'' THEN ''1'' ELSE ''0'' END)  AS \\"isNull\\",\\n        (ORDINAL_POSITION * 10)  AS \\"sort\\",\\n        (CASE WHEN a.COLUMN_KEY=''PRI'' THEN ''1'' ELSE ''0'' END) AS \\"isPk\\",\\n        a.COLUMN_DEFAULT AS \\"defVal\\"\\n        FROM information_schema.columns a\\n        <where>\\n            a.TABLE_SCHEMA = (select database())\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                ORDER BY sort ASC\\n            </otherwise>\\n        </choose>\\n    </select>\\n  <select id=\\"listTableColumnSqlServer\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n      SELECT\\n        col.name AS name,\\n        ISNULL( ep.[value], '''' ) AS comments,\\n        (\\n          CASE\\n\\n            WHEN col.length > 0 THEN\\n              ( t.name+ ''('' + CONVERT ( [nvarchar] ( 50 ), col.length ) + '')'' ) ELSE t.name\\n            END\\n          ) AS jdbcType,\\n        CASE\\n\\n          WHEN col.isnullable = 1 THEN\\n            ''1'' ELSE ''0''\\n          END AS isNull,\\n        ( col.colorder * 10 ) AS sort,\\n        CASE\\n\\n          WHEN EXISTS (\\n                  SELECT\\n                    1\\n                  FROM\\n                    dbo.sysindexes si\\n                      INNER JOIN dbo.sysindexkeys sik ON si.id = sik.id\\n                      AND si.indid = sik.indid\\n                      INNER JOIN dbo.syscolumns sc ON sc.id = sik.id\\n                      AND sc.colid = sik.colid\\n                      INNER JOIN dbo.sysobjects so ON so.name = si.name\\n                      AND so.xtype = ''PK''\\n                  WHERE\\n                    sc.id = col.id\\n                    AND sc.colid = col.colid\\n            ) THEN\\n            ''1'' ELSE ''0''\\n          END AS isPk,\\n        replace( replace( comm.text, ''(('', '''' ), ''))'', '''' ) AS defVal\\n      FROM\\n        dbo.syscolumns col\\n          LEFT JOIN dbo.systypes t ON col.xtype = t.xusertype\\n          INNER JOIN dbo.sysobjects obj ON col.id = obj.id\\n          AND obj.xtype = ''U''\\n          AND obj.status >= 0\\n          LEFT JOIN dbo.syscomments comm ON col.cdefault = comm.id\\n          LEFT JOIN sys.extended_properties ep ON col.id = ep.major_id\\n          AND col.colid = ep.minor_id\\n          AND ep.name = ''MS_Description''\\n          LEFT JOIN sys.extended_properties epTwo ON obj.id = epTwo.major_id\\n          AND epTwo.minor_id = 0\\n          AND epTwo.name = ''MS_Description''\\n      <where>\\n        <bind name=\\"tableName\\" value=\\"@com.geeke.utils.JdbcTypeUtils@paramsExtract(''table_name'',params)\\"/>\\n         obj.name = #{tableName}\\n      </where>\\n      ORDER BY\\n        col.colorder;\\n  </select>\\n  <select id=\\"listTableColumnOracle\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n    <bind name=\\"tableName\\" value=\\"@com.geeke.utils.JdbcTypeUtils@paramsExtract(''table_name'',params)\\"/>\\n    SELECT\\n      utc.COLUMN_NAME AS \\"name\\",\\n      ( SELECT comments FROM user_col_comments ucc WHERE ucc.TABLE_NAME = upper(#{tableName}) AND ucc.COLUMN_NAME = utc.COLUMN_NAME ) AS \\"comments\\",\\n      ( CASE WHEN utc.DATA_LENGTH > 0 THEN utc.DATA_TYPE || ''('' || utc.DATA_LENGTH || '')'' ELSE utc.DATA_TYPE END ) AS \\"jdbcType\\",\\n      ( CASE WHEN utc.NullAble = ''Y'' THEN ''1'' ELSE ''0'' END ) AS \\"isNull\\",\\n      ( utc.COLUMN_ID * 10 ) AS \\"sort\\",\\n      (\\n        SELECT\\n          COUNT( COLUMN_NAME )\\n        FROM\\n          user_constraints uc\\n            LEFT JOIN user_cons_columns uccs ON uc.CONSTRAINT_NAME = uccs.CONSTRAINT_NAME\\n        WHERE\\n          uc.table_name = upper(#{tableName})\\n          AND uc.CONSTRAINT_TYPE = ''P''\\n          AND COLUMN_NAME = utc.COLUMN_NAME\\n      ) AS \\"isPk\\",\\n      utc.DATA_DEFAULT AS \\"defVal\\"\\n    FROM\\n      USER_TAB_COLS utc\\n    WHERE\\n      utc.TABLE_NAME = upper(#{tableName})\\n  </select>\\n</mapper>\\n","__config__":{"children":[]},"tableName":"dc_table","locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.dc.dao.DcTableDao\\">\\n  <sql id=\\"dcTableColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.name AS \\"name\\",\\n      a.source AS \\"source\\",\\n      a.scheme_id AS \\"scheme.id\\",\\n      IFNULL(scheme.name,'''') AS \\"scheme.name\\",\\n      IFNULL(scheme.package_name,'''') AS \\"scheme.packageName\\",\\n      IFNULL(scheme.module_name,'''') AS \\"scheme.moduleName\\",\\n      IFNULL(scheme.sub_module_name,'''') AS \\"scheme.subModuleName\\",\\n      a.class_name AS \\"className\\",\\n      a.comments AS \\"comments\\",\\n      a.parent_table_fk AS \\"parentTableFk\\",\\n      a.is_main_table AS \\"isMainTable\\",\\n      a.is_association AS \\"isAssociation\\",\\n      a.association_field AS \\"associationField\\",\\n      a.check_version AS \\"checkVersion\\",\\n      a.filter AS \\"filter\\",\\n      a.constraint_json AS \\"constraintJson\\",\\n      a.order_columns AS \\"orderColumns\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n      a.is_one_to_one AS \\"isOneToOne\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"dcTableJoins\\">\\n    LEFT JOIN dc_scheme scheme ON scheme.id = a.scheme_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.dc.entity.DcTableEx\\">\\n    SELECT\\n    <include refid=\\"dcTableColumns\\" />\\n    FROM dc_table a\\n    <include refid=\\"dcTableJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM dc_table a\\n    <include refid=\\"dcTableJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.dc.entity.DcTableEx\\">\\n    SELECT\\n    <include refid=\\"dcTableColumns\\" />\\n    FROM dc_table a\\n    <include refid=\\"dcTableJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.is_main_table DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.dc.entity.DcTableEx\\">\\n    SELECT\\n    <include refid=\\"dcTableColumns\\" />\\n    FROM dc_table a\\n    <include refid=\\"dcTableJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.is_main_table DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO dc_table(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      name,\\n      source,\\n      scheme_id,\\n      class_name,\\n      comments,\\n      parent_table_fk,\\n      is_main_table,\\n      is_association,\\n      association_field,\\n      check_version,\\n      filter,\\n      constraint_json,\\n      order_columns,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      is_one_to_one,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ name },\\n      #{ source },\\n      #{ scheme.id },\\n      #{ className },\\n      #{ comments },\\n      #{ parentTableFk },\\n      #{ isMainTable },\\n      #{ isAssociation },\\n      #{ associationField },\\n      #{ checkVersion },\\n      #{ filter },\\n      #{ constraintJson },\\n      #{ orderColumns },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n      #{ isOneToOne },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE dc_table SET\\n    <trim suffixOverrides=\\",\\">\\n      name = #{ name },\\n      source = #{ source },\\n      scheme_id = #{ scheme.id },\\n      class_name = #{ className },\\n      comments = #{ comments },\\n      parent_table_fk = #{ parentTableFk },\\n      is_main_table = #{ isMainTable },\\n      is_association = #{ isAssociation },\\n      association_field = #{ associationField },\\n      check_version = #{ checkVersion },\\n      filter = #{ filter },\\n      constraint_json = #{ constraintJson },\\n      order_columns = #{ orderColumns },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n      is_one_to_one = #{ isOneToOne },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE dc_table SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO dc_table(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      name,\\n      source,\\n      scheme_id,\\n      class_name,\\n      comments,\\n      parent_table_fk,\\n      is_main_table,\\n      is_association,\\n      association_field,\\n      check_version,\\n      filter,\\n      constraint_json,\\n      order_columns,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      is_one_to_one,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.name},\\n        #{entity.source},\\n        #{entity.scheme.id},\\n        #{entity.className},\\n        #{entity.comments},\\n        #{entity.parentTableFk},\\n        #{entity.isMainTable},\\n        #{entity.isAssociation},\\n        #{entity.associationField},\\n        #{entity.checkVersion},\\n        #{entity.filter},\\n        #{entity.constraintJson},\\n        #{entity.orderColumns},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n        #{entity.isOneToOne},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_table\\n    <set>\\n      <trim prefix=\\"name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.name}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"source=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.source}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"scheme_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.scheme.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"class_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.className}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"comments=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.comments}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"parent_table_fk=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.parentTableFk}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"is_main_table=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.isMainTable}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"is_association=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.isAssociation}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"association_field=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.associationField}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"check_version=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.checkVersion}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"filter=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.filter}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"constraint_json=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.constraintJson}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"order_columns=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.orderColumns}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"is_one_to_one=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.isOneToOne}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_table\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <select id=\\"listTableColumn\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n    SELECT\\n    a.COLUMN_NAME AS \\"name\\",\\n    a.COLUMN_COMMENT AS \\"comments\\",\\n    a.COLUMN_TYPE AS \\"jdbcType\\",\\n    (CASE WHEN IS_NULLABLE = ''YES'' THEN ''1'' ELSE ''0'' END) AS \\"isNull\\",\\n    (ORDINAL_POSITION * 10) AS \\"sort\\",\\n    (CASE WHEN a.COLUMN_KEY=''PRI'' THEN ''1'' ELSE ''0'' END) AS \\"isPk\\",\\n    a.COLUMN_DEFAULT AS \\"defVal\\"\\n    FROM information_schema.columns a\\n    <where>\\n      a.TABLE_SCHEMA = (select database())\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY sort ASC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <select id=\\"listTableColumnSqlServer\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n    SELECT\\n    col.name AS name,\\n    ISNULL( ep.[value], '''' ) AS comments,\\n    (\\n    CASE\\n    WHEN col.length > 0 THEN\\n    ( t.name+ ''('' + CONVERT ( [nvarchar] ( 50 ), col.length ) + '')'' ) ELSE t.name\\n    END\\n    ) AS jdbcType,\\n    CASE\\n    WHEN col.isnullable = 1 THEN\\n    ''1'' ELSE ''0''\\n    END AS isNull,\\n    ( col.colorder * 10 ) AS sort,\\n    CASE\\n    WHEN EXISTS (\\n    SELECT\\n    1\\n    FROM\\n    dbo.sysindexes si\\n    INNER JOIN dbo.sysindexkeys sik ON si.id = sik.id\\n    AND si.indid = sik.indid\\n    INNER JOIN dbo.syscolumns sc ON sc.id = sik.id\\n    AND sc.colid = sik.colid\\n    INNER JOIN dbo.sysobjects so ON so.name = si.name\\n    AND so.xtype = ''PK''\\n    WHERE\\n    sc.id = col.id\\n    AND sc.colid = col.colid\\n    ) THEN\\n    ''1'' ELSE ''0''\\n    END AS isPk,\\n    replace( replace( comm.text, ''(('', '''' ), ''))'', '''' ) AS defVal\\n    FROM\\n    dbo.syscolumns col\\n    LEFT JOIN dbo.systypes t ON col.xtype = t.xusertype\\n    INNER JOIN dbo.sysobjects obj ON col.id = obj.id\\n    AND obj.xtype = ''U''\\n    AND obj.status >= 0\\n    LEFT JOIN dbo.syscomments comm ON col.cdefault = comm.id\\n    LEFT JOIN sys.extended_properties ep ON col.id = ep.major_id\\n    AND col.colid = ep.minor_id\\n    AND ep.name = ''MS_Description''\\n    LEFT JOIN sys.extended_properties epTwo ON obj.id = epTwo.major_id\\n    AND epTwo.minor_id = 0\\n    AND epTwo.name = ''MS_Description''\\n    <where>\\n      <bind name=\\"tableName\\" value=\\"@com.geeke.utils.JdbcTypeUtils@paramsExtract(''table_name'',params)\\" />\\n      obj.name = #{tableName}\\n    </where>\\n    ORDER BY\\n    col.colorder;\\n  </select>\\n  <select id=\\"listTableColumnOracle\\" resultType=\\"com.geeke.dc.entity.DcTableColumnEx\\">\\n    <bind name=\\"tableName\\" value=\\"@com.geeke.utils.JdbcTypeUtils@paramsExtract(''table_name'',params)\\" />\\n    SELECT\\n    utc.COLUMN_NAME AS \\"name\\",\\n    ( SELECT comments FROM user_col_comments ucc WHERE ucc.TABLE_NAME = upper(#{tableName}) AND ucc.COLUMN_NAME = utc.COLUMN_NAME ) AS \\"comments\\",\\n    ( CASE WHEN utc.DATA_LENGTH > 0 THEN utc.DATA_TYPE || ''('' || utc.DATA_LENGTH || '')'' ELSE utc.DATA_TYPE END ) AS \\"jdbcType\\",\\n    ( CASE WHEN utc.NullAble = ''Y'' THEN ''1'' ELSE ''0'' END ) AS \\"isNull\\",\\n    ( utc.COLUMN_ID * 10 ) AS \\"sort\\",\\n    (\\n    SELECT\\n    COUNT( COLUMN_NAME )\\n    FROM\\n    user_constraints uc\\n    LEFT JOIN user_cons_columns uccs ON uc.CONSTRAINT_NAME = uccs.CONSTRAINT_NAME\\n    WHERE\\n    uc.table_name = upper(#{tableName})\\n    AND uc.CONSTRAINT_TYPE = ''P''\\n    AND COLUMN_NAME = utc.COLUMN_NAME\\n    ) AS \\"isPk\\",\\n    utc.DATA_DEFAULT AS \\"defVal\\"\\n    FROM\\n    USER_TAB_COLS utc\\n    WHERE\\n    utc.TABLE_NAME = upper(#{tableName})\\n  </select>\\n</mapper>"},{"filePath":"back/src/main/java/com.geeke/dc//entity","fileName":"DcSchemeEx.java","source":"package com.geeke.dc.entity;\\r\\n\\r\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\r\\nimport com.geeke.utils.StringUtils;\\r\\nimport com.google.common.collect.Lists;\\r\\nimport java.util.Iterator;\\r\\nimport java.util.List;\\r\\n\\r\\npublic class DcSchemeEx extends DcScheme {\\r\\n\\r\\n    private static final long serialVersionUID = 57593538386163538L;\\r\\n\\r\\n    public DcSchemeEx() {}\\r\\n\\r\\n    /**\\r\\n     * 是否所有的子表都是关联表或者一对一子表\\r\\n     * @return\\r\\n     */\\r\\n    public Boolean getMainChildTableExists() {\\r\\n        Iterator var1 = this.getDcTableList().iterator();\\r\\n\\r\\n        int count = 0;\\r\\n        while (var1.hasNext()) {\\r\\n            DcTable table = (DcTable) var1.next();\\r\\n            if (StringUtils.equalsIgnoreCase(\\"1\\", table.getIsAssociation()) || StringUtils.equalsIgnoreCase(\\"1\\", table.getIsOneToOne())) {\\r\\n                count ++;\\r\\n            }\\r\\n        }\\r\\n        if (count == this.getDcTableList().size()) return true;\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n","__config__":{"children":[]},"code":"package com.geeke.dc.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.utils.StringUtils;\\nimport com.google.common.collect.Lists;\\nimport java.util.Iterator;\\nimport java.util.List;\\n\\npublic class DcSchemeEx extends DcScheme {\\n\\n    private static final long serialVersionUID = 57593538386163538L;\\n\\n    public DcSchemeEx() {}\\n\\n    /**\\n     * 是否所有的子表都是关联表或者一对一子表\\n     * @return\\n     */\\n    public Boolean getMainChildTableExists() {\\n        Iterator var1 = this.getDcTableList().iterator();\\n\\n        int count = 0;\\n        while (var1.hasNext()) {\\n            DcTable table = (DcTable) var1.next();\\n            if (\\n                StringUtils.equalsIgnoreCase(\\"1\\", table.getIsAssociation()) ||\\n                StringUtils.equalsIgnoreCase(\\"1\\", table.getIsOneToOne())\\n            ) {\\n                count++;\\n            }\\n        }\\n        if (count == this.getDcTableList().size()) return true;\\n\\n        return false;\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//entity","fileName":"DcTableEx.java","source":"package com.geeke.dc.entity;\\r\\n\\r\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\r\\nimport com.geeke.utils.StringUtils;\\r\\nimport com.google.common.collect.Lists;\\r\\n\\r\\nimport java.util.Iterator;\\r\\nimport java.util.List;\\r\\n\\r\\npublic class DcTableEx extends DcTable {\\r\\n    private static final long serialVersionUID = 57593538386163538L;\\r\\n\\r\\n    public DcTableEx() {\\r\\n    }\\r\\n\\r\\n    public List<String> getImportList() {\\r\\n        List<String> importList = Lists.newArrayList();\\r\\n        Iterator var2 = this.getColumnList().iterator();\\r\\n\\r\\n        while(var2.hasNext()) {\\r\\n            DcTableColumn c = (DcTableColumn)var2.next();\\r\\n            DcTableColumnEx column = (DcTableColumnEx)c;\\r\\n            String ann;\\r\\n            if (column.getJavaType() != null && \\"Custom\\".equals(column.getJavaType().getValue())) {\\r\\n                DcTable table = column.getCustomType();\\r\\n                if (table != null && table.getScheme() != null) {\\r\\n                    ann = table.getScheme().getPackageName() + \\".\\" + table.getScheme().getModuleName();\\r\\n                    if (!StringUtils.isNullOrEmpty(table.getScheme().getSubModuleName())) {\\r\\n                        ann = ann + \\".\\" + table.getScheme().getSubModuleName() + \\".entity\\";\\r\\n                    } else {\\r\\n                        ann = ann + \\".entity\\";\\r\\n                    }\\r\\n\\r\\n                    ann = ann + \\".\\" + table.getClassName();\\r\\n                    if (!importList.contains(ann)) {\\r\\n                        importList.add(ann);\\r\\n                    }\\r\\n                }\\r\\n            } else if (column.getJavaType() != null && \\"This\\".equals(column.getJavaType().getValue())) { // TODO\\r\\n                for (int i = 0; i < this.getAssociationList().size(); i++) {\\r\\n                    if (column.getCurrentSchemeTable().equals(this.getAssociationList().get(i).getName())) {\\r\\n                        ann = this.getScheme().getPackageName() + \\".\\" + this.getScheme().getModuleName();\\r\\n                        if (!StringUtils.isNullOrEmpty(this.getScheme().getSubModuleName())) {\\r\\n                            ann = ann + \\".\\" + this.getScheme().getSubModuleName() + \\".entity\\";\\r\\n                        } else {\\r\\n                            ann = ann + \\".entity\\";\\r\\n                        }\\r\\n                        ann = ann + \\".\\" + this.getAssociationList().get(i).getClassName();\\r\\n                        if (!importList.contains(ann)) {\\r\\n                            importList.add(ann);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if ((column.getIsNotBaseField() && StringUtils.indexOf(column.getJavaType().getValue(), \\".\\") != -1 && !importList.contains(column.getJavaType().getValue()))) {\\r\\n                importList.add(column.getJavaType().getValue());\\r\\n            }\\r\\n\\r\\n            if (column.getIsNotBaseField()) {\\r\\n                Iterator var7 = column.getAnnotationList().iterator();\\r\\n\\r\\n                while(var7.hasNext()) {\\r\\n                    ann = (String)var7.next();\\r\\n                    if (!importList.contains(StringUtils.substringBeforeLast(ann, \\"(\\"))) {\\r\\n                        importList.add(StringUtils.substringBefore(ann, \\"(\\"));\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (\\"Long\\".equals(column.getJavaType().getValue())) {\\r\\n                if (!importList.contains(\\"com.fasterxml.jackson.databind.annotation.JsonSerialize\\")) {\\r\\n                    importList.add(\\"com.fasterxml.jackson.databind.annotation.JsonSerialize\\");\\r\\n                }\\r\\n\\r\\n                if (!importList.contains(\\"com.fasterxml.jackson.databind.ser.std.ToStringSerializer\\")) {\\r\\n                    importList.add(\\"com.fasterxml.jackson.databind.ser.std.ToStringSerializer\\");\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // 当前表是主表\\r\\n        if ((\\"1\\").equals(this.getIsMainTable())) {\\r\\n            if (!importList.contains(\\"java.util.List\\")) {\\r\\n                importList.add(\\"java.util.List\\");\\r\\n            }\\r\\n\\r\\n            if (!importList.contains(\\"com.google.common.collect.Lists\\")) {\\r\\n                importList.add(\\"com.google.common.collect.Lists\\");\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return importList;\\r\\n    }\\r\\n\\r\\n    public Boolean getParentExists() {\\r\\n        return (\\"1\\").equals(this.getIsMainTable()) && StringUtils.isNotBlank(this.getId()) && StringUtils.isNotBlank(this.getParentTableFk());\\r\\n    }\\r\\n\\r\\n    public Boolean getIdExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"id\\", c.getName()));\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public Boolean getCreateDateExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"create_date\\", c.getName()));\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public Boolean getUpdateDateExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"update_date\\", c.getName()));\\r\\n        this.setCheckVersion(\\"1\\");\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public Boolean getUpdateByExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"update_by\\", c.getName()));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public Boolean getSortExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"sort\\", c.getName()));\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public DcTableColumn getSortColumn() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return null;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"sort\\", c.getName()));\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    public Boolean getDelFlagExists() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn c;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            c = (DcTableColumn)var1.next();\\r\\n        } while(!StringUtils.equalsIgnoreCase(\\"del_flag\\", c.getName()));\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * 是否为树形表\\r\\n     * @return\\r\\n     */\\r\\n    public boolean getIsTreeTable() {\\r\\n        for (DcTableColumn column : getColumnList()){\\r\\n            //java类型为This, 并且字段名为parent_id\\r\\n            if(column.getJavaType() != null && \\"This\\".equals(column.getJavaType().getValue()) && StringUtils.equalsIgnoreCase(\\"parent_id\\", column.getName())){\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * 是否包含自动编号类型的字段\\r\\n     * @return\\r\\n     */\\r\\n    public boolean getAutoSerialExists() {\\r\\n        for (DcTableColumn column : getColumnList()){\\r\\n            if(StringUtils.equalsIgnoreCase(column.getJavaType().getValue(), \\"Code\\")){\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * 是否包密码字段\\r\\n     * @return\\r\\n     */\\r\\n    public boolean getHasPassWordInput() {\\r\\n        for (DcTableColumn column : getColumnList()){\\r\\n            if(StringUtils.equalsIgnoreCase(column.getJavaType().getValue(), \\"Password\\")){\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * 是否多文件上传组件\\r\\n     * @return\\r\\n     */\\r\\n    public boolean getMutilFileUploadExists () {\\r\\n        for (DcTableColumn column : getColumnList()){\\r\\n            if(column.getJavaType() != null && \\"File\\".equals(column.getJavaType().getValue())\\r\\n                    && \\"1\\".equals(column.getIsEdit())){\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * 是否多图片上传\\r\\n     * @return\\r\\n     */\\r\\n    public boolean getImageUploadExists () {\\r\\n        for (DcTableColumn column : getColumnList()){\\r\\n            if(column.getJavaType() != null && \\"Image\\".equals(column.getJavaType().getValue())\\r\\n                    && \\"1\\".equals(column.getIsEdit())){\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    @JsonIgnore\\r\\n    public DcTableColumn getParentColumn() {\\r\\n        Iterator var1 = this.getColumnList().iterator();\\r\\n\\r\\n        DcTableColumn column;\\r\\n        do {\\r\\n            if (!var1.hasNext()) {\\r\\n                return null;\\r\\n            }\\r\\n\\r\\n            column = (DcTableColumn)var1.next();\\r\\n        } while(column.getJavaType() == null || !\\"This\\".equals(column.getJavaType().getValue()) || !StringUtils.equalsIgnoreCase(\\"parent_id\\", column.getName()));\\r\\n\\r\\n        return column;\\r\\n    }\\r\\n}\\r\\n","__config__":{"children":[]},"code":"package com.geeke.dc.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.utils.StringUtils;\\nimport com.google.common.collect.Lists;\\nimport java.util.Iterator;\\nimport java.util.List;\\n\\npublic class DcTableEx extends DcTable {\\n\\n    private static final long serialVersionUID = 57593538386163538L;\\n\\n    public DcTableEx() {}\\n\\n    public List<String> getImportList() {\\n        List<String> importList = Lists.newArrayList();\\n        Iterator var2 = this.getColumnList().iterator();\\n\\n        while (var2.hasNext()) {\\n            DcTableColumn c = (DcTableColumn) var2.next();\\n            DcTableColumnEx column = (DcTableColumnEx) c;\\n            String ann;\\n            if (column.getJavaType() != null && \\"Custom\\".equals(column.getJavaType().getValue())) {\\n                DcTable table = column.getCustomType();\\n                if (table != null && table.getScheme() != null) {\\n                    ann = table.getScheme().getPackageName() + \\".\\" + table.getScheme().getModuleName();\\n                    if (!StringUtils.isNullOrEmpty(table.getScheme().getSubModuleName())) {\\n                        ann = ann + \\".\\" + table.getScheme().getSubModuleName() + \\".entity\\";\\n                    } else {\\n                        ann = ann + \\".entity\\";\\n                    }\\n\\n                    ann = ann + \\".\\" + table.getClassName();\\n                    if (!importList.contains(ann)) {\\n                        importList.add(ann);\\n                    }\\n                }\\n            } else if (column.getJavaType() != null && \\"This\\".equals(column.getJavaType().getValue())) { // TODO\\n                for (int i = 0; i < this.getAssociationList().size(); i++) {\\n                    if (column.getCurrentSchemeTable().equals(this.getAssociationList().get(i).getName())) {\\n                        ann = this.getScheme().getPackageName() + \\".\\" + this.getScheme().getModuleName();\\n                        if (!StringUtils.isNullOrEmpty(this.getScheme().getSubModuleName())) {\\n                            ann = ann + \\".\\" + this.getScheme().getSubModuleName() + \\".entity\\";\\n                        } else {\\n                            ann = ann + \\".entity\\";\\n                        }\\n                        ann = ann + \\".\\" + this.getAssociationList().get(i).getClassName();\\n                        if (!importList.contains(ann)) {\\n                            importList.add(ann);\\n                        }\\n                    }\\n                }\\n            }\\n\\n            if (\\n                (\\n                    column.getIsNotBaseField() &&\\n                    StringUtils.indexOf(column.getJavaType().getValue(), \\".\\") != -1 &&\\n                    !importList.contains(column.getJavaType().getValue())\\n                )\\n            ) {\\n                importList.add(column.getJavaType().getValue());\\n            }\\n\\n            if (column.getIsNotBaseField()) {\\n                Iterator var7 = column.getAnnotationList().iterator();\\n\\n                while (var7.hasNext()) {\\n                    ann = (String) var7.next();\\n                    if (!importList.contains(StringUtils.substringBeforeLast(ann, \\"(\\"))) {\\n                        importList.add(StringUtils.substringBefore(ann, \\"(\\"));\\n                    }\\n                }\\n            }\\n\\n            if (\\"Long\\".equals(column.getJavaType().getValue())) {\\n                if (!importList.contains(\\"com.fasterxml.jackson.databind.annotation.JsonSerialize\\")) {\\n                    importList.add(\\"com.fasterxml.jackson.databind.annotation.JsonSerialize\\");\\n                }\\n\\n                if (!importList.contains(\\"com.fasterxml.jackson.databind.ser.std.ToStringSerializer\\")) {\\n                    importList.add(\\"com.fasterxml.jackson.databind.ser.std.ToStringSerializer\\");\\n                }\\n            }\\n        }\\n\\n        // 当前表是主表\\n        if ((\\"1\\").equals(this.getIsMainTable())) {\\n            if (!importList.contains(\\"java.util.List\\")) {\\n                importList.add(\\"java.util.List\\");\\n            }\\n\\n            if (!importList.contains(\\"com.google.common.collect.Lists\\")) {\\n                importList.add(\\"com.google.common.collect.Lists\\");\\n            }\\n        }\\n\\n        return importList;\\n    }\\n\\n    public Boolean getParentExists() {\\n        return (\\n            (\\"1\\").equals(this.getIsMainTable()) &&\\n            StringUtils.isNotBlank(this.getId()) &&\\n            StringUtils.isNotBlank(this.getParentTableFk())\\n        );\\n    }\\n\\n    public Boolean getIdExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"id\\", c.getName()));\\n\\n        return true;\\n    }\\n\\n    public Boolean getCreateDateExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"create_date\\", c.getName()));\\n\\n        return true;\\n    }\\n\\n    public Boolean getUpdateDateExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"update_date\\", c.getName()));\\n        this.setCheckVersion(\\"1\\");\\n        return true;\\n    }\\n\\n    public Boolean getUpdateByExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"update_by\\", c.getName()));\\n        return true;\\n    }\\n\\n    public Boolean getSortExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"sort\\", c.getName()));\\n\\n        return true;\\n    }\\n\\n    public DcTableColumn getSortColumn() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return null;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"sort\\", c.getName()));\\n\\n        return c;\\n    }\\n\\n    public Boolean getDelFlagExists() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn c;\\n        do {\\n            if (!var1.hasNext()) {\\n                return false;\\n            }\\n\\n            c = (DcTableColumn) var1.next();\\n        } while (!StringUtils.equalsIgnoreCase(\\"del_flag\\", c.getName()));\\n\\n        return true;\\n    }\\n\\n    /**\\n     * 是否为树形表\\n     * @return\\n     */\\n    public boolean getIsTreeTable() {\\n        for (DcTableColumn column : getColumnList()) {\\n            //java类型为This, 并且字段名为parent_id\\n            if (\\n                column.getJavaType() != null &&\\n                \\"This\\".equals(column.getJavaType().getValue()) &&\\n                StringUtils.equalsIgnoreCase(\\"parent_id\\", column.getName())\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * 是否包含自动编号类型的字段\\n     * @return\\n     */\\n    public boolean getAutoSerialExists() {\\n        for (DcTableColumn column : getColumnList()) {\\n            if (StringUtils.equalsIgnoreCase(column.getJavaType().getValue(), \\"Code\\")) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * 是否包密码字段\\n     * @return\\n     */\\n    public boolean getHasPassWordInput() {\\n        for (DcTableColumn column : getColumnList()) {\\n            if (StringUtils.equalsIgnoreCase(column.getJavaType().getValue(), \\"Password\\")) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * 是否多文件上传组件\\n     * @return\\n     */\\n    public boolean getMutilFileUploadExists() {\\n        for (DcTableColumn column : getColumnList()) {\\n            if (\\n                column.getJavaType() != null && \\"File\\".equals(column.getJavaType().getValue()) && \\"1\\".equals(column.getIsEdit())\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * 是否多图片上传\\n     * @return\\n     */\\n    public boolean getImageUploadExists() {\\n        for (DcTableColumn column : getColumnList()) {\\n            if (\\n                column.getJavaType() != null &&\\n                \\"Image\\".equals(column.getJavaType().getValue()) &&\\n                \\"1\\".equals(column.getIsEdit())\\n            ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    @JsonIgnore\\n    public DcTableColumn getParentColumn() {\\n        Iterator var1 = this.getColumnList().iterator();\\n\\n        DcTableColumn column;\\n        do {\\n            if (!var1.hasNext()) {\\n                return null;\\n            }\\n\\n            column = (DcTableColumn) var1.next();\\n        } while (\\n            column.getJavaType() == null ||\\n            !\\"This\\".equals(column.getJavaType().getValue()) ||\\n            !StringUtils.equalsIgnoreCase(\\"parent_id\\", column.getName())\\n        );\\n\\n        return column;\\n    }\\n}\\n"}]}', remarks='', create_by='超级管理员(super)', create_date='2023-01-11 14:14:38', update_by='超级管理员(super)', update_date='2023-05-22 13:26:30', del_flag='0'
WHERE id=1339746483134570550;
UPDATE dc_scheme
SET project_id=88888888, name='移动端方案', package_name='com.geeke', module_name='dc', sub_module_name='', function_name='移动端方案', template_id=1279029939292610715, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n              {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              // 分页属性\\n              {{if item.__slot__.pageFlag}}\\n                {{item['':data'']}}Page: 1,\\n                {{item['':data'']}}Total: 0,\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.layout == ''queryTableLayout''}}\\n              // 查询表格列头\\n              table{{item.__config__.formId}}Column: [\\n                {{each item.__config__.children filed}}\\n                  {{if filed.__config__.elName == ''ElTableColumn''}}\\n                    { {{@filed | getAttributes }}   display: {{filed.__config__.display}} },\\n                  {{/if}}\\n                {{/each}}\\n              ]\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n            // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/api/dc/","fileName":"dcMobileScheme.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n\\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'',\\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\n","__config__":{"children":[]},"locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getDcMobileSchemeById = (id) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listDcMobileSchemePage = (search) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listDcMobileSchemeAll = (search) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveDcMobileScheme = (dcMobileScheme) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/save'',\\n    method: ''post'',\\n    data: dcMobileScheme\\n  })\\n\\nexport const deleteDcMobileScheme = (dcMobileScheme) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/delete'',\\n    method: ''post'',\\n    data: dcMobileScheme\\n  })\\n\\nexport const bulkInsertDcMobileScheme = (dcMobileSchemes) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/bulkInsert'',\\n    method: ''post'',\\n    data: dcMobileSchemes\\n  })\\n\\nexport const bulkUpdateDcMobileScheme = (dcMobileSchemes) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/bulkUpdate'',\\n    method: ''post'',\\n    data: dcMobileSchemes\\n  })\\n\\nexport const bulkDeleteDcMobileScheme = (dcMobileSchemes) =>\\n  request({\\n    url: ''/dc/dcMobileScheme/bulkDelete'',\\n    method: ''post'',\\n    data: dcMobileSchemes\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/dc//controller","fileName":"DcMobileSchemeController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\n\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\n\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        ).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        String id = {{table.className | lowerCase}}Service.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{/if}}\\n  \\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.dc.entity.DcMobileScheme;\\nimport com.geeke.dc.service.DcMobileSchemeService;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * 移动端方案Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/dc/dcMobileScheme\\")\\npublic class DcMobileSchemeController extends BaseController {\\n\\n    @Autowired\\n    private DcMobileSchemeService dcMobileSchemeService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        DcMobileScheme entity = dcMobileSchemeService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<DcMobileScheme> result = dcMobileSchemeService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<DcMobileScheme> result = dcMobileSchemeService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(@RequestBody DcMobileScheme entity) {\\n        String id = dcMobileSchemeService.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody DcMobileScheme entity) {\\n        int rows = dcMobileSchemeService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<DcMobileScheme> entitys) {\\n        List<String> ids = dcMobileSchemeService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<DcMobileScheme> entitys) {\\n        List<String> ids = dcMobileSchemeService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<DcMobileScheme> entitys) {\\n        int rows = dcMobileSchemeService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//service","fileName":"DcMobileSchemeService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\n\\nimport java.util.Map;\\nimport java.util.List;\\n{{if table.hasPassWordInput}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\n{{/if}}\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\nimport org.springframework.transaction.annotation.Propagation;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\n{{if table.filter}}\\nimport com.geeke.common.data.Page;\\nimport com.geeke.common.data.PageRequest;\\nimport com.geeke.common.data.Parameter;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.autoSerialExists}}\\n    @Autowired\\n    SequenceService sequenceService;\\n    {{/if}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Autowired\\n    private SysFileService sysFileService;\\n    {{/if}}\\n\\n    {{if table.filter}}\\n    @Override\\n    public Page<{{table.className}}> listPage(List<Parameter> parameters, int offset, int limit, String orderby) {\\n        String filter = \\"{{@table.filter}}\\";\\n        return super.listPage(super.addFilter(parameters, filter), offset, limit, orderby);\\n    }\\n\\n    @Override\\n    public List<{{table.className}}> listAll(List<Parameter> parameters, String orderby) {\\n        String filter = \\"{{@table.filter}}\\";\\n        PageRequest pageRequest = new PageRequest(super.addFilter(parameters, filter), orderby);\\n        return dao.listAll(pageRequest);\\n    }\\n    {{/if}}\\n    {{if table.hasPassWordInput || (table.constraintList && table.constraintList.length > 0) || table.autoSerialExists || table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Transactional(readOnly = false, propagation = Propagation.REQUIRES_NEW)\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}},\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      MultipartFile[] {{c.javaField}}Uploads,\\n            {{/if}}\\n        {{/each}}\\n      String[] deleteIds) throws java.io.IOException {\\n    {{else}}\\n    @Override\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}}) {\\n    {{/if}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{table.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{c.defVal}}\\", {{table.className | lowerCase}});\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(sn);\\n        }\\n            {{/if}}\\n        {{/each}}\\n        {{if table.constraintList && table.constraintList.length > 0}}\\n        // 约束条件处理\\n        Map<String, String> colMaps = Maps.newHashMap();\\n          {{each table.constraintList constraint}}\\n              {{if constraint.name}}\\n                  // {{constraint.name}}\\n              {{/if}}\\n        colMaps.clear();\\n              {{each constraint.constraintColumn.split(\\",\\") column}}\\n                  {{each table.columnList c}}\\n                      {{if c.name == column}}\\n                        {{if c.javaType.value === ''This'' || c.javaType.value === ''Custom''}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_''}}.{{c.associatedField | camelCase ''_''}}\\");   \\n                        {{else}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n                        {{/if}}\\n                      {{/if}}\\n                  {{/each}}\\n              {{/each}}\\n        if(exists(dao, {{table.className | lowerCase}}, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        } \\n          {{/each}}\\n        {{/if}}\\n\\n        {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n        if(StringUtils.isEmpty({{table.className | lowerCase}}.get{{c.javaField | upperCase}}())) {\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList({{c.javaField}}Uploads, {{table.className | lowerCase}}.get{{c.javaField | upperCase}}());\\n            {{/if}}\\n        {{/each}}\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n        {{/if}}\\n\\n        {{table.className}} {{table.className | lowerCase}}Temp = super.save({{table.className | lowerCase}});\\n        {{if table.hasPassWordInput}}\\n        // 加密字段处理\\n        if (StringUtils.isNoneBlank({{table.className | lowerCase}}Temp.getId())) {\\n            {{each table.columnList c}}\\n                {{if c.javaType && c.javaType.value == ''Password''}}\\n            // 设置加密字段  {{c.comments}}\\n            if({{table.className | lowerCase}}.get{{c.javaField | upperCase}}Update()) {\\n                Md5Hash md5 = new Md5Hash({{table.className | lowerCase}}.get{{c.javaField | upperCase}}(), {{table.className | lowerCase}}.getId(), 6);\\n                   String md5Password = md5.toHex();\\n                   dao.update{{c.javaField | upperCase}}({{table.className | lowerCase}}.getId(), md5Password);\\n               }\\n                {{/if}}\\n            {{/each}}\\n        }\\n        {{/if}}        \\n        return {{table.className | lowerCase}}Temp;\\n    }\\n    {{/if}}\\n    \\n    {{if table.hasPassWordInput}}\\n     // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n     @Transactional(readOnly = false, propagation = Propagation.REQUIRES_NEW)\\n    public int change{{c.javaField | upperCase}}(String id, String pass) {\\n        // Md5密码\\n        Md5Hash md5 = new Md5Hash(pass, id, 6);\\n        String md5Password = md5.toHex();\\n    \\n        int rows = dao.update{{c.javaField | upperCase}}(id, md5Password);\\n        return rows;\\n    }\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.service;\\n\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.dc.dao.DcMobileSchemeDao;\\nimport com.geeke.dc.entity.DcMobileScheme;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport java.util.List;\\nimport java.util.Map;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Propagation;\\nimport org.springframework.transaction.annotation.Transactional;\\n\\n/**\\n * 移动端方案Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"dcMobileSchemeService\\")\\n@Transactional(readOnly = true)\\npublic class DcMobileSchemeService extends CrudService<DcMobileSchemeDao, DcMobileScheme> {}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//dao","fileName":"DcMobileSchemeDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.dao;\\n\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.dc.entity.DcMobileScheme;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 移动端方案DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface DcMobileSchemeDao extends CrudDao<DcMobileScheme> {}\\n"},{"filePath":"back/src/main/java/com.geeke/dc//entity","fileName":"DcMobileScheme.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\n\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{table.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t{{each table.childList c}}\\n\\tprivate List<{{c.className}}}} {{c.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n\\t{{/each}}\\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{table.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{table.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\t{{each table.childList c}}\\n\\tpublic List<{{c.className}}}} get{{c.className}}List() {\\n\\t\\treturn {{c.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{c.className}}List(List<{{c.className}}}} {{c.className | lowerCase}}List) {\\n\\t\\tthis.{{c.className | lowerCase}}List = {{c.className | lowerCase}}List;\\n\\t}\\n\\t{{/each}}\\n\\t\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"locked":true,"code":"package com.geeke.dc.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.geeke.dc.entity.DcScheme;\\nimport com.geeke.dc.entity.DcTemplate;\\nimport com.geeke.project.entity.Project;\\nimport com.google.common.collect.Lists;\\nimport java.util.List;\\nimport javax.validation.constraints.NotNull;\\nimport org.hibernate.validator.constraints.Length;\\n\\n/**\\n * 移动端方案Entity\\n * @author\\n * @version\\n */\\n\\npublic class DcMobileScheme extends DataEntity<DcMobileScheme> {\\n\\n    private static final long serialVersionUID = 1440433057862000819L;\\n\\n    private Project project; // 项目\\n\\n    private String name; // 名称\\n\\n    private DcScheme scheme; // 后端方案\\n\\n    private DcTemplate template; // 模板\\n\\n    private String templateJson; // 模板json\\n\\n    // 构造方法\\n    public DcMobileScheme() {\\n        super();\\n    }\\n\\n    public DcMobileScheme(String id) {\\n        super(id);\\n    }\\n\\n    // 生成get和set方法\\n\\n    @NotNull(message = \\"项目不能为空\\")\\n    public Project getProject() {\\n        return project;\\n    }\\n\\n    public void setProject(Project project) {\\n        this.project = project;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"名称长度必须介于 1 和 128 之间\\")\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    @NotNull(message = \\"后端方案不能为空\\")\\n    public DcScheme getScheme() {\\n        return scheme;\\n    }\\n\\n    public void setScheme(DcScheme scheme) {\\n        this.scheme = scheme;\\n    }\\n\\n    public DcTemplate getTemplate() {\\n        return template;\\n    }\\n\\n    public void setTemplate(DcTemplate template) {\\n        this.template = template;\\n    }\\n\\n    @Length(min = 0, max = -1, message = \\"模板json长度必须介于 0 和 -1 之间\\")\\n    public String getTemplateJson() {\\n        return templateJson;\\n    }\\n\\n    public void setTemplateJson(String templateJson) {\\n        this.templateJson = templateJson;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"dc_mobile_scheme\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1440433057862000819\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/dc/","fileName":"DcMobileSchemeDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n                {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.customType.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}{{if c.associatedFilter}} AND {{c.associatedFilter}}{{/if}}\\n                {{else}}\\n        LEFT JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}{{if c.associatedFilter}} AND {{c.associatedFilter}}{{/if}}\\n                {{/if}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n              {{if table.isAssociation && table.isAssociation == \\"1\\"}}\\n        INNER JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}} {{if c.currentTable.delFlagExists}} AND {{c.javaField}}.del_flag = 0{{/if}}{{if c.associatedFilter}} AND {{c.associatedFilter}}{{/if}}\\n              {{else}}\\n        LEFT JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField}} = a.{{c.name}}{{if c.associatedFilter}} AND {{c.associatedFilter}}{{/if}}\\n              {{/if}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n        \\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n</mapper>\\n","__config__":{"children":[]},"locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.dc.dao.DcMobileSchemeDao\\">\\n  <sql id=\\"dcMobileSchemeColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.project_id AS \\"project.id\\",\\n      IFNULL(project.status,'''') AS \\"project.status\\",\\n      IFNULL(project.name,'''') AS \\"project.name\\",\\n      a.name AS \\"name\\",\\n      a.scheme_id AS \\"scheme.id\\",\\n      IFNULL(scheme.name,'''') AS \\"scheme.name\\",\\n      a.template_id AS \\"template.id\\",\\n      IFNULL(template.name,'''') AS \\"template.name\\",\\n      a.template_json AS \\"templateJson\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"dcMobileSchemeJoins\\">\\n    LEFT JOIN prj_project project ON project.id = a.project_id\\n    LEFT JOIN dc_scheme scheme ON scheme.id = a.scheme_id\\n    LEFT JOIN dc_template template ON template.id = a.template_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.dc.entity.DcMobileScheme\\">\\n    SELECT\\n    <include refid=\\"dcMobileSchemeColumns\\" />\\n    FROM dc_mobile_scheme a\\n    <include refid=\\"dcMobileSchemeJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM dc_mobile_scheme a\\n    <include refid=\\"dcMobileSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.dc.entity.DcMobileScheme\\">\\n    SELECT\\n    <include refid=\\"dcMobileSchemeColumns\\" />\\n    FROM dc_mobile_scheme a\\n    <include refid=\\"dcMobileSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.dc.entity.DcMobileScheme\\">\\n    SELECT\\n    <include refid=\\"dcMobileSchemeColumns\\" />\\n    FROM dc_mobile_scheme a\\n    <include refid=\\"dcMobileSchemeJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO dc_mobile_scheme(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      project_id,\\n      name,\\n      scheme_id,\\n      template_id,\\n      template_json,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ project.id },\\n      #{ name },\\n      #{ scheme.id },\\n      #{ template.id },\\n      #{ templateJson },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE dc_mobile_scheme SET\\n    <trim suffixOverrides=\\",\\">\\n      project_id = #{ project.id },\\n      name = #{ name },\\n      scheme_id = #{ scheme.id },\\n      template_id = #{ template.id },\\n      template_json = #{ templateJson },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE dc_mobile_scheme SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO dc_mobile_scheme(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      project_id,\\n      name,\\n      scheme_id,\\n      template_id,\\n      template_json,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.project.id},\\n        #{entity.name},\\n        #{entity.scheme.id},\\n        #{entity.template.id},\\n        #{entity.templateJson},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_mobile_scheme\\n    <set>\\n      <trim prefix=\\"project_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.project.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.name}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"scheme_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.scheme.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"template_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.template.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"template_json=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.templateJson}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE dc_mobile_scheme\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n</mapper>"}]}', remarks='', create_by='超级管理员(super)', create_date='2023-03-20 10:40:48', update_by='超级管理员(super)', update_date='2023-05-22 13:29:28', del_flag='0'
WHERE id=1440433057862000817;
UPDATE dc_clien_scheme
SET project_id=88888888, name='项目', scheme_id=1351544466239864848, template_id=1324962226446794852, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return true\\n  }\\n  \\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n      tabName: ''editForm'', // tab标签页\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/project//project","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { downProject } from ''@/api/dc/dcCode''\\nimport { download } from ''@/utils/download''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = [{{@ table.filter}}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n        // 调整条件\\n        const st = this.search.params.find(item => item.columnName == ''status'')\\n        if(st.value == ''2'') {\\n          // 我负责的项目\\n          st.value = ''0''\\n          this.search.params.push({\\n            columnName: ''user_id'',\\n            queryType: ''='',\\n            value: currentUser.id\\n          })\\n        } else if(st.value == ''3'') {\\n          // 我参与的项目\\n          st.value = ''0''\\n          this.search.params.push({\\n            columnName: ''user_id'',\\n            queryType: ''<>'',\\n            value: currentUser.id\\n          })\\n        }\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{{@ table.filter}}]\\n        // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [list{{table.className}}RespData, listPermissionRespData] = await Promise.all([\\n          list{{table.className}}Page(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(list{{table.className}}RespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = list{{table.className}}RespData.data.total\\n          this.tableData = list{{table.className}}RespData.data.rows ? list{{table.className}}RespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : list{{table.className}}RespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDownLoad(scope) {\\n      this.setLoad()\\n      downProject(scope.row.id)\\n        .then((responseData) => {\\n          download(responseData, scope.row.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.38312242485439,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.8069932318909,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.35701408453102,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.434269404936,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.5490126615551,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [_this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [_this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"id","javaType":"String","comments":"标识","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"user_id","javaType":"Custom","comments":"用户","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1351544466239864850","apiPath":"admin/user","filter":""}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"status","javaType":"String","comments":"状态","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"Date","comments":"创建时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"Date","comments":"更新时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}}],"formId":116,"renderKey":116.99870095104554,"componentName":"ElConditionPanel116","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":118,"renderKey":118.61361379075272,"componentName":"SingleInput118"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"autocomplete":"undefined"}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":117,"renderKey":117.93327845304603,"componentName":"SingleInput117","field":{"id":"1351544466239864855","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=0, max=128, message=\\"名称长度必须介于 0 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"名称","v-if":null,"v-show":null},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"RadioGroup","label":"单选框组","tag":"el-form-item","tagIcon":"radio","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"RadioGroup","label":"单选框组","tag":"el-radio-group","tagIcon":"radio","defaultValue":"","designLayout":"function radioGroupLayout(h, element, index, parent) {\\r\\n    var _this4 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (conf.__config__.optionType === ''button'') {\\r\\n            list.push(h(\\"el-radio-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"label\\": item.value\\r\\n              }\\r\\n            }, [item.label]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-radio\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"label\\": item.value,\\r\\n                \\"border\\": conf.border\\r\\n              }\\r\\n            }, [item.label]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this4.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function radioGroupLayout(scheme, parent, isView) {\\r\\n    var buildElRadioGroupChild = function buildElRadioGroupChild() {\\r\\n      // el-radio-group 子级\\r\\n      var children = [];\\r\\n      var config = scheme.__config__;\\r\\n      var tag = config.optionType === ''button'' ? ''el-radio-button'' : ''el-radio'';\\r\\n      var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n      var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n      children.push(\\"<\\".concat(tag, \\"\\\\n              v-for=\\\\\\"(\\").concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n              :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n              :label=\\\\\\"\\").concat(value, \\"\\\\\\">\\\\n                {{\\").concat(label, \\"}}\\\\n              </\\").concat(tag, \\">\\"));\\r\\n      return children;\\r\\n    };\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = buildElRadioGroupChild();\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","propertyLayout":"function radioGroupLayout(h) {\\r\\n  var _this2 = this;\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.label = field.comments;\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData, field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\"\\r\\n    }\\r\\n  }, [h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item) {\\r\\n    return h(\\"el-radio\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.value\\r\\n      }\\r\\n    }, [item.label]);\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''optionType'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项样式\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''optionType'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.optionType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"optionType\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9ED8\\\\u8BA4\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"button\\"\\r\\n    }\\r\\n  }, [\\"\\\\u6309\\\\u94AE\\"])])]), this.hasOwnProperty(this.activeData, ''__config__'') && this.activeData.__config__.optionType === ''default'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否带边框\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''__config__'') && (this.activeData.border !== ''undefined'' || this.activeData.__config__.optionType === ''button'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__, ''dataType'') && this.activeData.__config__.dataType === ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''dataType'') && this.activeData.__config__.dataType === ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData, ''__slot__'') && this.hasOwnProperty(this.activeData.__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__, ''dataType'') && this.activeData.__config__.dataType === ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.radioGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","optionType":"button","dataType":"static","apiFn":"","apiFrom":"","optionParams":"","loopArray":"statusOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.label","optionValue":"item.value","document":"https://element.eleme.cn/#/zh-CN/component/radio","operator":"=","optWatchs":[],"isInner":true,"formId":134,"renderKey":134.2735729462252,"componentName":"RadioGroup134"},"__slot__":{"options":[{"label":"所有项目","value":"null"},{"label":"我负责的","value":"2"},{"label":"我参与的","value":"3"},{"label":"已归档的","value":"1"}]},"__vModel__":"status","v-if":null,"v-show":null,":disabled":null,"v-model":"queryFormData.status","size":null,"border":"undefined"}],"id":"formItemQ","span":18,"propertyLayout":"function itemRadioGroupLayout(h) {\\r\\n  var _this2 = this;\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  var queryTypes = [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }];\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.label = field.comments;\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item) {\\r\\n    return h(\\"el-radio\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.value\\r\\n      }\\r\\n    }, [item.label]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionType'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项样式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''optionType'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionType\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9ED8\\\\u8BA4\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"button\\"\\r\\n    }\\r\\n  }, [\\"\\\\u6309\\\\u94AE\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.activeData.__config__.children[0].__config__.optionType === ''default'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否带边框\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].border,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && (this.activeData.__config__.children[0].border !== ''undefined'' || this.activeData.__config__.children[0].__config__.optionType === ''button'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType === ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType === ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType === ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.radioGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":133,"renderKey":133.55844291025593,"componentName":"RadioGroup133","field":{"id":"1351544466239864856","name":"status","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"状态","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"status","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"状态长度必须介于 1 和 1 之间\\")"],"isNotBaseField":true,"isEditableField":true,"isType":false,"isChecked":false}},"label":"分类","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.68924485629289,"componentName":"ElQueryForm107","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":110,"renderKey":110.14569237257798,"componentName":"Button110","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\n  var _this = this;\\n  var isToolTip = false;\\n  isToolTip = this.activeData.disabled === ''undefined'';\\n  function onTooltipChange(val) {\\n    this.activeData.disabled = val ? ''undefined'' : true;\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮文字\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].icon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮类型\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否提示\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: isToolTip,\\n      callback: function callback($$v) {\\n        isToolTip = $$v;\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onTooltipChange.bind(this)\\n    }\\n  })]), isToolTip && h(\\"ToolTip\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","formId":109,"renderKey":109.97478062943743,"componentName":"Button109","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":108,"renderKey":108.48086423314105,"componentName":"ElRow108","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":120,"renderKey":120.47733265221714,"componentName":"ElTableColumn120","field":{"id":"1351544466239864855","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=0, max=128, message=\\"名称长度必须介于 0 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":119,"renderKey":119.40010429433386,"componentName":"ElTableColumn119","field":{"id":"1351544466239864854","name":"user.name","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"用户.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"user.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"用户不能为空\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"负责人","prop":"user.name","width":"200px","min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":"switch (value) {\\n  case \\"1\\":\\n    return \\"<span style=\\" + \\"color:red\\" + \\">√</span>\\"\\n  case \\"0\\":\\n    return \\"\\"\\n  default:\\n    return \\"\\"\\n }","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":144,"renderKey":144.75228700653992,"componentName":"ElTableColumn144"},"tree-node":true,"resizable":true,"visible":"undefined","label":"已归档","prop":"status","width":"80px","min-width":"80px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":135,"renderKey":135.13173566036602,"componentName":"ElTableColumn135"},"tree-node":true,"resizable":true,"visible":false,"label":"数据库用户","prop":"dbUsername","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":136,"renderKey":136.78452238629953,"componentName":"ElTableColumn136"},"tree-node":true,"resizable":true,"visible":false,"label":"数据库密码","prop":"dbPassword","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":137,"renderKey":137.1013283937347,"componentName":"ElTableColumn137"},"tree-node":true,"resizable":true,"visible":false,"label":"数据库地址","prop":"dbUrl","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":139,"renderKey":139.22518666437932,"componentName":"ElTableColumn139"},"tree-node":true,"resizable":true,"visible":"undefined","label":"数据库IP","prop":"dbIp","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":140,"renderKey":140.57420227855155,"componentName":"ElTableColumn140"},"tree-node":true,"resizable":true,"visible":"undefined","label":"数据库端口","prop":"dbPort","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":"","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":141,"renderKey":141.74956463166023,"componentName":"ElTableColumn141"},"tree-node":true,"resizable":true,"visible":"undefined","label":"数据库类型","prop":"dbType.name","width":null,"min-width":"120px","fixed":"undefined","align":"center","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":122,"renderKey":122.20763504274309,"componentName":"ElTableColumn122","field":{"id":"1351544466239864857","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":false,"label":"备注信息","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":123,"renderKey":123.11823673522392,"componentName":"ElTableColumn123","field":{"id":"1351544466239864858","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":124,"renderKey":124.71667273160092,"componentName":"ElTableColumn124","field":{"id":"1351544466239864859","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"创建时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":125,"renderKey":125.81665020819621,"componentName":"ElTableColumn125","field":{"id":"1351544466239864860","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":126,"renderKey":126.78212650784079,"componentName":"ElTableColumn126","field":{"id":"1351544466239864861","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"更新时间","prop":"updateDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":151,"renderKey":151.08278337591267,"componentName":"ViewColumnsSelect151","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":149,"renderKey":149.49625368725438,"componentName":"ElPopover149","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":150,"renderKey":150.290011248767,"componentName":"IconButton150"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":154,"renderKey":154.14282585419062,"componentName":"IconButton154","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":114,"renderKey":114.19466545473841,"componentName":"TableOptColumnHeader114","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":"scope.row.status == 0 && scope.row.user.id == currentUser.id","v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":143,"renderKey":143.08233422630138,"componentName":"IconButton143","locked":false},"v-on:click":"onDownLoad(scope)","type":"primary","v-if":"","v-show":"permission.edit","content":"下载代码","placement":"top","icon-name":"el-icon-download"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":"scope.row.status == 0 && scope.row.user.id == currentUser.id","v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.58215474742958,"componentName":"TableOptColumnMain115","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":113,"renderKey":113.36096687419308,"componentName":"ElTableOptColumn113","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":111,"renderKey":111.79188979069511,"componentName":"QueryTable111","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"row","document":"https://element.eleme.cn/#/zh-CN/component/pagination","formId":112,"renderKey":112.21160433439712,"componentName":"ElPagination112","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":145,"locked":true,"version":34,"code":"<template>\\n  <el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n    <history ref=\\"history\\" :bussObject=\\"curentRow\\"></history>\\n    <edit-form\\n      ref=\\"editForm\\"\\n      v-on:save-finished=\\"getList\\"\\n      v-on:before-load=\\"setLoad\\"\\n      v-on:after-load=\\"resetLoad\\"\\n      :permission=\\"permission\\"\\n    ></edit-form>\\n    <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"start\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n      <el-col :span=\\"24\\">\\n        <query-tag\\n          ref=\\"queryTag\\"\\n          v-model=\\"queryEditObject\\"\\n          :moreParm=\\"moreParm\\"\\n          :routerId=\\"$route && $route.meta.routerId\\"\\n          :isQueryConditionPanel=\\"isQueryConditionPanel\\"\\n          v-on:queryTagPanel=\\"onQueryTagPanel\\"\\n          v-on:queryTagClick=\\"onQueryTagClick\\"\\n          v-on:search=\\"onSearch\\"\\n          class=\\"dc-query-tag_ElConditionTag\\"\\n        ></query-tag>\\n      </el-col>\\n      <el-col :span=\\"6\\">\\n        <div style=\\"text-align: right\\">\\n          <el-button-group class=\\"dc-el-button-group_ButtonGroup\\">\\n            <el-tooltip effect=\\"dark\\" content=\\"搜索\\" placement=\\"top\\">\\n              <el-button v-on:click=\\"onSearch\\" type=\\"primary\\" icon=\\"el-icon-search\\"></el-button>\\n            </el-tooltip>\\n            <el-tooltip effect=\\"dark\\" content=\\"重置\\" placement=\\"top\\">\\n              <el-button\\n                v-on:click=\\"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()\\"\\n                type=\\"primary\\"\\n                icon=\\"el-icon-refresh-right\\"\\n              ></el-button>\\n            </el-tooltip>\\n            <el-tooltip effect=\\"dark\\" content=\\"更多\\" placement=\\"top\\">\\n              <el-button v-on:click=\\"onQueryConditionPanel(''query'')\\" type=\\"primary\\" icon=\\"el-icon-d-arrow-right\\"></el-button>\\n            </el-tooltip>\\n          </el-button-group>\\n        </div>\\n      </el-col>\\n    </el-row>\\n    <query-condition-panel\\n      v-if=\\"isQueryConditionPanel\\"\\n      ref=\\"conditionPanel\\"\\n      :conditionColumns=\\"\\n        metadata.find((item) => {\\n          return item.type == ''main''\\n        }).conditionPanel\\n      \\"\\n      v-model=\\"moreParm\\"\\n      :routerId=\\"$route.meta.routerId\\"\\n      class=\\"dc-query-condition-panel_ElConditionPanel\\"\\n    ></query-condition-panel>\\n    <el-form\\n      ref=\\"queryForm\\"\\n      :model=\\"queryFormData\\"\\n      label-width=\\"100px\\"\\n      v-if=\\"!isQueryConditionPanel\\"\\n      class=\\"dc-el-form_ElQueryForm\\"\\n    >\\n      <el-row>\\n        <el-col :span=\\"6\\">\\n          <el-form-item prop=\\"name\\" label=\\"名称\\" class=\\"dc-el-form-item_SingleInput\\">\\n            <el-input\\n              v-model=\\"queryFormData.name\\"\\n              :maxLength=\\"128\\"\\n              placeholder=\\"请输入名称\\"\\n              clearable\\n              class=\\"dc-el-input_SingleInput\\"\\n            ></el-input>\\n          </el-form-item>\\n        </el-col>\\n        <el-col :span=\\"18\\">\\n          <el-form-item prop=\\"status\\" label=\\"分类\\" class=\\"dc-el-form-item_RadioGroup\\">\\n            <el-radio-group v-model=\\"queryFormData.status\\" class=\\"dc-el-radio-group_RadioGroup\\">\\n              <el-radio-button v-for=\\"(item, index) in statusOptions\\" :key=\\"index\\" :label=\\"item.value\\">\\n                {{ item.label }}\\n              </el-radio-button>\\n            </el-radio-group>\\n          </el-form-item>\\n        </el-col>\\n      </el-row>\\n    </el-form>\\n    <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"end\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n      <el-tooltip v-show=\\"permission.add\\" disabled class=\\"dc-el-tooltip_Button\\">\\n        <el-button type=\\"primary\\" icon=\\"el-icon-plus\\" v-on:click=\\"onCreate\\">添加</el-button>\\n      </el-tooltip>\\n    </el-row>\\n    <ux-grid\\n      column-key\\n      ref=\\"table\\"\\n      :data=\\"tableData\\"\\n      border\\n      v-on:sort-change=\\"onSortChange\\"\\n      v-on:header-dragend=\\"onWidthChange($refs.table)\\"\\n      :tree-config=\\"{ children: '''', indent: 20, accordion: false, line: false, showIcon: true, iconOpen: '''', iconClose: '''' }\\"\\n      class=\\"dc-ux-grid_QueryTable\\"\\n    >\\n      <ux-table-column\\n        :field=\\"tableColumns[''120''].field\\"\\n        :title=\\"tableColumns[''120''].title\\"\\n        :width=\\"tableColumns[''120''].width\\"\\n        :visible=\\"tableColumns[''120''].visible\\"\\n        :params=\\"{ sortId: ''120'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''119''].field\\"\\n        :title=\\"tableColumns[''119''].title\\"\\n        :width=\\"tableColumns[''119''].width\\"\\n        :visible=\\"tableColumns[''119''].visible\\"\\n        :params=\\"{ sortId: ''119'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"120px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''144''].field\\"\\n        :title=\\"tableColumns[''144''].title\\"\\n        :width=\\"tableColumns[''144''].width\\"\\n        :visible=\\"tableColumns[''144''].visible\\"\\n        :params=\\"{ sortId: ''144'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"80px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      >\\n        <template slot-scope=\\"{ row, rowIndex }\\">\\n          <div\\n            v-html=\\"\\n              ((value, row, rowIndex) => {\\n                switch (value) {\\n                  case ''1'':\\n                    return ''<span style='' + ''color:red'' + ''>√</span>''\\n                  case ''0'':\\n                    return ''''\\n                  default:\\n                    return ''''\\n                }\\n              })(row.status, row, rowIndex)\\n            \\"\\n          ></div>\\n        </template>\\n      </ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''135''].field\\"\\n        :title=\\"tableColumns[''135''].title\\"\\n        :width=\\"tableColumns[''135''].width\\"\\n        :visible=\\"tableColumns[''135''].visible\\"\\n        :params=\\"{ sortId: ''135'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''136''].field\\"\\n        :title=\\"tableColumns[''136''].title\\"\\n        :width=\\"tableColumns[''136''].width\\"\\n        :visible=\\"tableColumns[''136''].visible\\"\\n        :params=\\"{ sortId: ''136'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''137''].field\\"\\n        :title=\\"tableColumns[''137''].title\\"\\n        :width=\\"tableColumns[''137''].width\\"\\n        :visible=\\"tableColumns[''137''].visible\\"\\n        :params=\\"{ sortId: ''137'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''139''].field\\"\\n        :title=\\"tableColumns[''139''].title\\"\\n        :width=\\"tableColumns[''139''].width\\"\\n        :visible=\\"tableColumns[''139''].visible\\"\\n        :params=\\"{ sortId: ''139'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''140''].field\\"\\n        :title=\\"tableColumns[''140''].title\\"\\n        :width=\\"tableColumns[''140''].width\\"\\n        :visible=\\"tableColumns[''140''].visible\\"\\n        :params=\\"{ sortId: ''140'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''141''].field\\"\\n        :title=\\"tableColumns[''141''].title\\"\\n        :width=\\"tableColumns[''141''].width\\"\\n        :visible=\\"tableColumns[''141''].visible\\"\\n        :params=\\"{ sortId: ''141'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"120px\\"\\n        align=\\"center\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''122''].field\\"\\n        :title=\\"tableColumns[''122''].title\\"\\n        :width=\\"tableColumns[''122''].width\\"\\n        :visible=\\"tableColumns[''122''].visible\\"\\n        :params=\\"{ sortId: ''122'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''123''].field\\"\\n        :title=\\"tableColumns[''123''].title\\"\\n        :width=\\"tableColumns[''123''].width\\"\\n        :visible=\\"tableColumns[''123''].visible\\"\\n        :params=\\"{ sortId: ''123'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''124''].field\\"\\n        :title=\\"tableColumns[''124''].title\\"\\n        :width=\\"tableColumns[''124''].width\\"\\n        :visible=\\"tableColumns[''124''].visible\\"\\n        :params=\\"{ sortId: ''124'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"160px\\"\\n        align=\\"right\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''125''].field\\"\\n        :title=\\"tableColumns[''125''].title\\"\\n        :width=\\"tableColumns[''125''].width\\"\\n        :visible=\\"tableColumns[''125''].visible\\"\\n        :params=\\"{ sortId: ''125'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''126''].field\\"\\n        :title=\\"tableColumns[''126''].title\\"\\n        :width=\\"tableColumns[''126''].width\\"\\n        :visible=\\"tableColumns[''126''].visible\\"\\n        :params=\\"{ sortId: ''126'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"160px\\"\\n        align=\\"right\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        title=\\"操作\\"\\n        :params=\\"{ sortId: ''113'' }\\"\\n        tree-node\\n        resizable\\n        width=\\"160px\\"\\n        min-width=\\"160px\\"\\n        fixed=\\"right\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        class=\\"dc-ux-table-column_ElTableOptColumn\\"\\n      >\\n        <template v-slot:header=\\"scope\\">\\n          <span>操作</span>\\n          <el-popover ref=\\"popover\\" width=\\"10\\" trigger=\\"click\\" placement=\\"bottom\\" offset=\\"0\\" class=\\"dc-el-popover_ElPopover\\">\\n            <view-columns-select\\n              v-model=\\"tableColumns\\"\\n              ref=\\"viewColumnsSelect\\"\\n              v-on:save-column-view=\\"saveColumn($event, ''table'')\\"\\n              v-on:show-all-column=\\"showAllColumn($event, ''table'')\\"\\n              v-on:show-default-column=\\"showDefaultColumn(''table'')\\"\\n              class=\\"dc-view-columns-select_ViewColumnsSelect\\"\\n            ></view-columns-select>\\n            <template slot=\\"reference\\">\\n              <OperationIcon type=\\"primary\\" content=\\"自定义列\\" placement=\\"top\\" icon-name=\\"el-icon-tickets\\"></OperationIcon>\\n            </template>\\n          </el-popover>\\n          <OperationIcon\\n            v-on:click=\\"onExport(tableData)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.export\\"\\n            content=\\"导出excel文件\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-download\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n        </template>\\n        <template slot-scope=\\"scope\\">\\n          <OperationIcon\\n            v-on:click=\\"onView(scope)\\"\\n            type=\\"info\\"\\n            v-show=\\"permission.view\\"\\n            content=\\"查看\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-view\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onEdit(scope)\\"\\n            type=\\"primary\\"\\n            v-if=\\"scope.row.status == 0 && scope.row.user.id == currentUser.id\\"\\n            v-show=\\"permission.edit\\"\\n            content=\\"编辑\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-edit\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onDownLoad(scope)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.edit\\"\\n            content=\\"下载代码\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-download\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onCopy(scope)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.add\\"\\n            content=\\"复制\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-document\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onDelete(scope)\\"\\n            type=\\"danger\\"\\n            v-if=\\"scope.row.status == 0 && scope.row.user.id == currentUser.id\\"\\n            v-show=\\"permission.remove\\"\\n            content=\\"删除\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-delete\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onShowHistory(scope)\\"\\n            type=\\"info\\"\\n            v-show=\\"permission.view\\"\\n            content=\\"历史记录\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-info\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n        </template>\\n      </ux-table-column>\\n    </ux-grid>\\n    <el-pagination\\n      :total=\\"tableDataTotal\\"\\n      :page-size=\\"search.limit\\"\\n      background\\n      :current-page=\\"tableDataPage\\"\\n      :page-sizes=\\"[10, 20, 30, 40, 50, 100]\\"\\n      layout=\\"total, sizes, prev, pager, next, jumper\\"\\n      v-on:size-change=\\"onSizeChange\\"\\n      v-on:current-change=\\"onCurrentChange\\"\\n      class=\\"dc-el-pagination_ElPagination\\"\\n    ></el-pagination>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { listProjectPage, deleteProject } from ''@/api/project/project''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from ''@/views/components/history''\\nimport EditForm from ''./form''\\nimport QueryTag from ''@/views/components/queryTag''\\nimport QueryConditionPanel from ''@/views/components/queryConditionPanel''\\nimport ViewColumnsSelect from ''@/views/components/DcViewColumnsSelect''\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { downProject } from ''@/api/dc/dcCode''\\nimport { download } from ''@/utils/download''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\n    EditForm,\\n    QueryTag,\\n    QueryConditionPanel,\\n    ViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      queryFormData: {\\n        name: '''', // 名称\\n        status: null // 分类\\n      },\\n      tableData: [],\\n      // 查询表格列头\\n      tableColumns: {\\n        120: {\\n          title: ''名称'',\\n          field: ''name'',\\n          visible: true,\\n          order: 0\\n        },\\n        119: {\\n          title: ''负责人'',\\n          field: ''user.name'',\\n          width: ''200px'',\\n          visible: true,\\n          order: 1\\n        },\\n        144: {\\n          title: ''已归档'',\\n          field: ''status'',\\n          width: ''80px'',\\n          visible: true,\\n          order: 2\\n        },\\n        135: {\\n          title: ''数据库用户'',\\n          field: ''dbUsername'',\\n          visible: false,\\n          order: 3\\n        },\\n        136: {\\n          title: ''数据库密码'',\\n          field: ''dbPassword'',\\n          visible: false,\\n          order: 4\\n        },\\n        137: {\\n          title: ''数据库地址'',\\n          field: ''dbUrl'',\\n          visible: false,\\n          order: 5\\n        },\\n        139: {\\n          title: ''数据库IP'',\\n          field: ''dbIp'',\\n          visible: true,\\n          order: 6\\n        },\\n        140: {\\n          title: ''数据库端口'',\\n          field: ''dbPort'',\\n          visible: true,\\n          order: 7\\n        },\\n        141: {\\n          title: ''数据库类型'',\\n          field: ''dbType.name'',\\n          visible: true,\\n          order: 8\\n        },\\n        122: {\\n          title: ''备注信息'',\\n          field: ''remarks'',\\n          visible: false,\\n          order: 9\\n        },\\n        123: {\\n          title: ''创建者'',\\n          field: ''createBy'',\\n          visible: false,\\n          order: 10\\n        },\\n        124: {\\n          title: ''创建时间'',\\n          field: ''createDate'',\\n          visible: false,\\n          order: 11\\n        },\\n        125: {\\n          title: ''更新者'',\\n          field: ''updateBy'',\\n          visible: false,\\n          order: 12\\n        },\\n        126: {\\n          title: ''更新时间'',\\n          field: ''updateDate'',\\n          visible: false,\\n          order: 13\\n        },\\n        113: {\\n          title: ''操作'',\\n          width: ''160px'',\\n          visible: true,\\n          order: 14\\n        }\\n      },\\n      // 分页属性\\n      tableDataPage: 1,\\n      tableDataTotal: 0,\\n      // 选项变量\\n      // 分类选项\\n      statusOptions: [\\n        {\\n          label: ''所有项目'',\\n          value: ''null''\\n        },\\n        {\\n          label: ''我负责的'',\\n          value: ''2''\\n        },\\n        {\\n          label: ''我参与的'',\\n          value: ''3''\\n        },\\n        {\\n          label: ''已归档的'',\\n          value: ''1''\\n        }\\n      ],\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 34,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''', // 排序字段名\\n        order: '''' // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1351544466239864850'',\\n      schemeId: ''1351544466239864848''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if (this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        this.search.params.push({\\n          columnName: ''name'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''status'',\\n          queryType: ''='',\\n\\n          value: !validatenull(this.queryFormData.status) ? this.queryFormData.status : null\\n        })\\n\\n        // 调整条件\\n        const st = this.search.params.find((item) => item.columnName == ''status'')\\n        if (st.value == ''2'') {\\n          // 我负责的项目\\n          st.value = ''0''\\n          this.search.params.push({\\n            columnName: ''user_id'',\\n            queryType: ''='',\\n            value: currentUser.id\\n          })\\n        } else if (st.value == ''3'') {\\n          // 我参与的项目\\n          st.value = ''0''\\n          this.search.params.push({\\n            columnName: ''user_id'',\\n            queryType: ''<>'',\\n            value: currentUser.id\\n          })\\n        }\\n      }\\n      // 数据权限: 项目prj_project\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      listProjectPage(this.search)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.tableDataTotal = responseData.data.total\\n            this.tableData = responseData.data.rows ? responseData.data.rows : []\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onSearch() {\\n      if (this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate((valid) => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = []\\n        // 数据权限: 项目prj_project\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [listProjectRespData, listPermissionRespData] = await Promise.all([\\n          listProjectPage(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if (listProjectRespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = listProjectRespData.data.total\\n          this.tableData = listProjectRespData.data.rows ? listProjectRespData.data.rows : []\\n          this.permission.view = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''project:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''project:export''\\n          })\\n\\n          this.permission.add = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''project:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''project:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''project:delete''\\n          })\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : listProjectRespData)\\n        }\\n        this.resetLoad()\\n      } catch (error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      })\\n        .then(() => {\\n          this.setLoad()\\n          deleteProject(scope.row)\\n            .then((responseData) => {\\n              if (responseData.code == 100) {\\n                this.getList()\\n                this.showMessage({\\n                  type: ''success'',\\n                  msg: ''删除成功''\\n                })\\n              } else {\\n                this.showMessage(responseData)\\n              }\\n              this.resetLoad()\\n            })\\n            .catch((error) => {\\n              this.outputError(error)\\n            })\\n        })\\n        .catch(() => {})\\n    },\\n\\n    onSortChange(orderby) {\\n      if (validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {},\\n    onDownLoad(scope) {\\n      this.setLoad()\\n      downProject(scope.row.id)\\n        .then((responseData) => {\\n          download(responseData, scope.row.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    }\\n  },\\n  watch: {},\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/project//project","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}},linkJdbcConnection } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nconst artTemplate = require(''art-template/lib/index'')\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      tabName: ''editForm'', // tab标签页\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {\\n    //计算from表单数据中的三个属性\\n    computeUrl(){\\n      const {dbIp, dbPort, dbName , dbType } = this.editFormData;\\n      return {dbIp, dbPort, dbName , dbType};\\n    }\\n\\n  },\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      let validFlag = true\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{ if item.__config__.tag == ''el-form'' && item.__config__.elName == ''ElEditForm'' }}\\n            {{each item.__config__.children childItem}}\\n              {{if childItem.__config__.elName == ''EditTable''}}\\n        this.$refs[''{{item.ref}}''].validate(valid => {\\n          if (valid) {\\n          } else {\\n            this.tabName = ''{{childItem.ref}}''\\n            validFlag = false\\n            return false\\n          }\\n        })\\n              {{/if}}\\n            {{/each}}\\n        \\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''editForm''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      if(validFlag) {\\n        this.doSave()\\n      }\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDeleteChild(tableData, index) { // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    initEditData(This) {\\n      let newPrj = {\\n        user: currentUser, // 当前用户作为项目负责人\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n      newPrj.memberList = [ {user: currentUser, remarks: ''''} ]  // 当前用户作为项目成员\\n      return newPrj\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.elName == ''EditTable''}}\\n    onAdd{{item['':data''] | upperCase}}() {\\n      this.editFormData.{{item['':data'']}}.push({\\n        {{each item.__config__.children columnItem}}\\n          {{if columnItem.__config__.tag == ''ux-table-column''}}\\n          {{each columnItem.__config__.children formItem}}\\n            {{if formItem.__config__.tag == ''el-form-item'' && formItem.__config__.children[0][''__vModel__'']}}\\n              {{set component = formItem.__config__.children[0]}}\\n              {{if columnItem.__config__.field && (columnItem.__config__.field.javaType.value == ''Custom'' || columnItem.__config__.field.javaType.value == ''This'')}}\\n      {{component[''__vModel__'']}}: {\\n                  {{each columnItem.__config__.field.childFields field}}\\n        {{field.value | camelCase ''_''}}: null,\\n                  {{/each}}\\n      },\\n                {{else if component.__config__.elName === ''PickerTimeRange'' || component.__config__.elName == ''PickerMonthRange'' || component.__config__.elName == ''PickerTimeDateRange''}}\\n                  {{if component[''__vModel__''].start && component[''__vModel__''].end}}\\n                    {{component[''__vModel__''].start}}: {{@ component.__config__.defaultValue[0] ? component.__config__.defaultValue[0] : null | stringify}}, // {{columnItem[''label'']}}\\n                    {{component[''__vModel__''].end}}: {{@ component.__config__.defaultValue[1] ? component.__config__.defaultValue[1] : null | stringify}}, // {{columnItem[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n      {{component[''__vModel__'']}}: {{@ component.__config__.defaultValue | stringify}}, // {{columnItem[''label'']}}\\n                {{/if}}\\n              {{/if}}\\n          {{/each}}\\n          {{/if}}\\n        {{/each}}\\n      })\\n    },\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      linkJdbcConnection(){\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n          //发送请求到后端 看是否能连接到数据库\\n          this.setLoad()\\n          linkJdbcConnection(this.editFormData).then(responseData => {\\n            if (responseData.code == 100) {\\n              this.showMessage(responseData)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n          })\\n        } else {\\n          return false\\n        }\\n      })\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    tabName(val, oldVal) {\\n      this.$nextTick(() => {\\n        if(this.$refs[val] && this.$refs[val].doLayout) {\\n          this.$refs[val].doLayout()\\n        }\\n      })\\n    },\\n    \\n    computeUrl(){\\n      const {dbIp, dbPort, dbName , dbType } = this.computeUrl\\n      if(!validatenull(dbType.id)){\\n        let rule = dbType.rule;\\n        this.editFormData.dbUrl = artTemplate.render(rule, this.computeUrl)\\n      }\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else if item.__config__.elName == ''EditTable''}}\\n        for (var i = 0; i <= this.editFormData.{{item['':data'']}}.length - 1; i++) {\\n          this.editFormData.{{item['':data'']}}[i].id = null\\n        } \\n          {{else if item.__config__.tag === ''el-select'' && item.__config__.elName == ''ObjectSelect''}}\\n        for (var i = 0; i <= this.editFormData.{{item[''__vModel__'']}}.length - 1; i++) {\\n          this.editFormData.{{item[''__vModel__'']}}[i].id = null\\n        }\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n    //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n<style>\\n    .my-input-sc {\\n       display: inline-block;\\n       height: 30px;\\n       line-height: 30px;\\n       -webkit-appearance: none;\\n       background-color: #FFFFFF;\\n       background-image: none;\\n       border-radius: 4px;\\n       border: 1px solid #DCDFE6;\\n       box-sizing: border-box;\\n       color: #606266;\\n       font-size: inherit;\\n       outline: none;\\n       padding: 0 15px;\\n       transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n       width: 100%;\\n    }\\n  </style>","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"elName":"ElTabs","designLayout":"function tabsLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-tabs\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": element.type,\\r\\n        \\"closable\\": element.closable != ''undefined'',\\r\\n        \\"addable\\": element.addable != ''undefined'',\\r\\n        \\"editable\\": element.editable != ''undefined''\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"tab-click\\": function tabClick(tab, event) {\\r\\n          activeItem(config.children[tab.index], element);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function tabsLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"绑定值\\",\\r\\n      \\"prop\\": \\"v-model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入绑定值（v-model）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''绑定值'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''v-model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入绑定值变量名（v-model）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''风格类型'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"card\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"border-card\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''能否关闭'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''closable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.closable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"closable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否增加\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否增加'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''addable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.addable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"addable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否编辑\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否编辑'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''editable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.editable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"editable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"tab-click\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''tab-click'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''tab-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"tab 被选中时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:tab-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:tab-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"tab-remove\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''tab-remove'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''tab-remove'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击 tab移除按钮后触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:tab-remove''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:tab-remove'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"tab-add\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''tab-add'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''tab-add'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击 tabs 的新增按钮后触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:tab-add''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:tab-add'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"edit\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''edit'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''edit'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击 tabs 的新增按钮或 tab被关闭后触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:edit''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:edit'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabs'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-tabs","tagIcon":"tab","label":"tabs标签页","document":"https://element.eleme.io/#/zh-CN/component/tabs","children":[{"__config__":{"elName":"ElTabPane","designLayout":"function tabPaneLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-tab-pane\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": element.label,\\r\\n        \\"closable\\": element.closable != ''undefined''\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function tabPaneLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入选项卡标题\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''名称'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''name'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入与选项卡绑定值value对应的标识符\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.name,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"name\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''能否关闭'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''closable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.closable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"closable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-tab-pane","tagIcon":"row","label":"tab页","document":"https://element.eleme.io/#/zh-CN/component/tabs","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"form","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":111,"renderKey":111.72573118112624,"componentName":"SingleInput111"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":16,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":110,"renderKey":110.44640281530057,"componentName":"SingleInput110","field":{"id":"1351544466239864855","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=0, max=128, message=\\"名称长度必须介于 0 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"名称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"名称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"Switch","label":"开关","tag":"el-form-item","tagIcon":"switch","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"Switch","label":"开关","tag":"el-switch","tagIcon":"switch","defaultValue":0,"designLayout":"function generalFieldLayout(h, element, index, parent) {\\r\\n    var _this = this;\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/switch","maxLength":10,"valWatchs":[],"valWatchExp":"","isInner":true,"formId":133,"renderKey":133.16592608406935,"componentName":"Switch133"},"__vModel__":"status","v-model":"editFormData.status","active-text":null,"inactive-text":null,"active-color":null,"inactive-color":null,"active-value":1,"inactive-value":0,":disabled":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSwitchLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  function onSwitchValueInput(val, name) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.children[0], name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.children[0], name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : ''0'';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') ? this.activeData.__config__.children[0][''active-value''] : false,\\r\\n      \\"inactive-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') ? this.activeData.__config__.children[0][''inactive-value''] : false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入开启提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入关闭提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].active-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''active-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入开启值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''active-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].inactive-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''inactive-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入关闭值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''inactive-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","field":{"id":"1351544466239864856","name":"status","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"状态","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"status","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"状态长度必须介于 1 和 1 之间\\")"],"isNotBaseField":true,"isEditableField":true},"formId":132,"renderKey":132.92821778763124,"componentName":"Switch132"},"label":"归档","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":144,"renderKey":144.26240808326986,"componentName":"SingleInput144"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbIp","v-model":"editFormData.dbIp",":maxLength":64,"placeholder":"请输入数据库IP","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":143,"renderKey":143.8003591849583,"componentName":"SingleInput143","field":{"id":"1367898430393573379","name":"db_ip","createBy":"超级管理员(super)","createDate":"2023-01-30 13:17:50","updateBy":"超级管理员(super)","updateDate":"2023-01-30 13:23:35","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库IP","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbIp","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=64, message=\\"数据库IP长度必须介于 1 和 64 之间\\")"],"isEditableField":true,"simpleJavaType":"String","decimalLenth":0,"dataLength":64,"isType":false,"isChecked":false}},"label":"数据库IP","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listSysDbTypeAll","apiFrom":"@/api/dbtype/sysDbType.js","optionParams":"","loopArray":"dbTypeOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":160,"renderKey":160.46357418869314,"componentName":"SelectInput160"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"dbType","v-model":"editFormData.dbType",":style":{"width":"100%"},"placeholder":"请选择数据库类型","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":159,"renderKey":159.75081106024652,"componentName":"SelectInput159","field":{"id":"1371197910170394748","name":"db_type_id","createBy":"超级管理员(super)","createDate":"2023-02-01 18:53:53","updateBy":"超级管理员(super)","updateDate":"2023-02-01 19:17:54","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库类型","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1371119793305198596","name":"sys_db_type","scheme":{"name":"数据库类型","packageName":"com.geeke","moduleName":"dbtype","subModuleName":"","replace":false,"dcTableList":[]},"className":"SysDbType","comments":"数据库类型","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"dbType","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1371119793305198596","name":"sys_db_type","scheme":{"name":"数据库类型","packageName":"com.geeke","moduleName":"dbtype","subModuleName":"","replace":false,"dcTableList":[]},"className":"SysDbType","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1371119793305198596","name":"sys_db_type","scheme":{"name":"数据库类型","packageName":"com.geeke","moduleName":"dbtype","subModuleName":"","replace":false,"dcTableList":[]},"className":"SysDbType","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"驱动","value":"driver","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1371119793305198596","name":"sys_db_type","scheme":{"name":"数据库类型","packageName":"com.geeke","moduleName":"dbtype","subModuleName":"","replace":false,"dcTableList":[]},"className":"SysDbType","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"连接地址规则","value":"rule","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1371119793305198596","name":"sys_db_type","scheme":{"name":"数据库类型","packageName":"com.geeke","moduleName":"dbtype","subModuleName":"","replace":false,"dcTableList":[]},"className":"SysDbType","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"simpleJavaType":"Custom","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":[],"dataLength":21,"decimalLenth":0,"isType":false,"isChecked":false}},"label":"数据库类型","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"数据库类型不能为空\\", trigger: \\"change\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":148,"renderKey":148.57449279887848,"componentName":"SingleInput148"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbName","v-model":"editFormData.dbName",":maxLength":32,"placeholder":"请输入数据库名","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":147,"renderKey":147.6081824056062,"componentName":"SingleInput147","field":{"id":"1367898430393573382","name":"db_name","createBy":"超级管理员(super)","createDate":"2023-01-30 13:17:50","updateBy":"超级管理员(super)","updateDate":"2023-01-30 13:23:35","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库名","jdbcType":"varchar(32)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbName","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=32, message=\\"数据库名长度必须介于 1 和 32 之间\\")"],"isEditableField":true,"simpleJavaType":"String","decimalLenth":0,"dataLength":32,"isType":false,"isChecked":false}},"label":"数据库名","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":136,"renderKey":136.85474958825225,"componentName":"SingleInput136"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbUsername","v-model":"editFormData.dbUsername",":maxLength":64,"placeholder":"请输入数据库用户","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":135,"renderKey":135.95663812966933,"componentName":"SingleInput135","field":{"id":"1365056502072901638","name":"db_username","createBy":"超级管理员(super)","createDate":"2023-01-28 15:38:24","updateBy":"超级管理员(super)","updateDate":"2023-01-28 15:38:24","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库用户","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbUsername","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isEditableField":true,"simpleAnnotationList":["Length(min=0, max=64, message=\\"数据库用户长度必须介于 0 和 64 之间\\")"],"simpleJavaType":"String","isNotBaseField":true,"decimalLenth":0,"dataLength":64,"isType":false,"isChecked":false}},"label":"数据库用户","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":138,"renderKey":138.39998500797674,"componentName":"SingleInput138"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbPassword","v-model":"editFormData.dbPassword",":maxLength":64,"placeholder":"请输入数据库密码","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":137,"renderKey":137.03815317846502,"componentName":"SingleInput137","field":{"id":"1365056502072901639","name":"db_password","createBy":"超级管理员(super)","createDate":"2023-01-28 15:38:24","updateBy":"超级管理员(super)","updateDate":"2023-01-28 15:38:24","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库密码","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbPassword","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isEditableField":true,"simpleAnnotationList":["Length(min=0, max=64, message=\\"数据库密码长度必须介于 0 和 64 之间\\")"],"simpleJavaType":"String","isNotBaseField":true,"decimalLenth":0,"dataLength":64,"isType":false,"isChecked":false}},"label":"数据库密码","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":146,"renderKey":146.8760691795757,"componentName":"SingleInput146"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbPort","v-model":"editFormData.dbPort",":maxLength":10,"placeholder":"请输入数据库端口","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":8,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":145,"renderKey":145.1837309684509,"componentName":"SingleInput145","field":{"id":"1367898430393573380","name":"db_port","createBy":"超级管理员(super)","createDate":"2023-01-30 13:17:50","updateBy":"超级管理员(super)","updateDate":"2023-01-30 13:23:35","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库端口","jdbcType":"varchar(10)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbPort","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isNotBaseField":true,"simpleAnnotationList":["Length(min=1, max=10, message=\\"数据库端口长度必须介于 1 和 10 之间\\")"],"isEditableField":true,"simpleJavaType":"String","decimalLenth":0,"dataLength":10,"isType":false,"isChecked":false}},"label":"数据库端口","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":140,"renderKey":140.63629095297546,"componentName":"SingleInput140"},"__slot__":{"prepend":"","append":""},"__vModel__":"dbUrl","v-model":"editFormData.dbUrl",":maxLength":128,"placeholder":"请输入数据库地址","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":12,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":139,"renderKey":139.32662742138524,"componentName":"SingleInput139","field":{"id":"1365056502072901640","name":"db_url","createBy":"超级管理员(super)","createDate":"2023-01-28 15:38:24","updateBy":"超级管理员(super)","updateDate":"2023-01-28 15:38:24","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"数据库地址","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"dbUrl","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"isEditableField":true,"simpleAnnotationList":["Length(min=0, max=128, message=\\"数据库地址长度必须介于 0 和 128 之间\\")"],"simpleJavaType":"String","isNotBaseField":true,"decimalLenth":0,"dataLength":128,"isType":false,"isChecked":false}},"label":"数据库地址","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this3 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this3.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":167,"renderKey":167.732798555144,"componentName":"SingleInput167"},"__slot__":{"prepend":"","append":""},"__vModel__":"cloudName","v-model":"editFormData.cloudName",":maxLength":64,"placeholder":"请输入服务名","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"modelExp":"`${parent[\\":model\\"]}${scheme.__config__.childClassName ? \\".\\" + scheme.__config__.childClassName + \\"List[0]\\" : \\"\\"}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.childClassName ? scheme.__config__.childClassName + \\"List[0].\\" : \\"\\"}${scheme.__config__.children[0].__vModel__}\\"`","id":"formItemE","span":12,"field":{"id":"1434552646337929218","name":"cloud_name","createBy":"超级管理员(super)","createDate":"2023-03-16 11:12:15","updateBy":"超级管理员(super)","updateDate":"2023-03-16 11:12:25","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"服务名","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"cloudName","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"isNotBaseField":true,"isEditableField":true,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"服务名长度必须介于 1 和 64 之间\\")"],"isType":false,"isChecked":false},"childClassName":"","regList":[],"propertyLayout":"function itemSingleInputLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field, group) {\\r\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\r\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.id,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item,\\r\\n          \\"disabled\\": _this.handelDisabled(item)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            if (!_this.handelDisabled(item)) {\\r\\n              onChangeModel.call(_this, item, group);\\r\\n            }\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [h(\\"span\\", {\\r\\n        \\"style\\": \\"padding-left: 6px;\\"\\r\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n        \\"style\\": \\"float: right;\\",\\r\\n        \\"attrs\\": {\\r\\n          \\"className\\": \\"filed-tip\\"\\r\\n        }\\r\\n      }, [item.isType && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"danger\\"\\r\\n        }\\r\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"warning\\"\\r\\n        }\\r\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\r\\n      \\"parent\\": this.activeData,\\r\\n      \\"hasOneZOne\\": hasOneZOne\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":166,"renderKey":166.33842149400544,"componentName":"SingleInput166"},"label":"服务名","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"服务名不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":115,"renderKey":115.13740853301393,"componentName":"MutilpleInput115"},"__vModel__":"remarks","v-model":"editFormData.remarks","type":"textarea","placeholder":"请输入备注信息","rows":2,":maxLength":255,":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val !== -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","formId":114,"renderKey":114.27902762626867,"componentName":"MutilpleInput114","field":{"id":"1351544466239864857","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Project","comments":"项目","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true}},"label":"备注信息","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.77702622115564,"componentName":"ElEditForm107","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":154,"renderKey":154.92174632680073,"componentName":"Button154"},"__slot__":{"default":"测试连接"},"type":"primary","icon":"el-icon-refresh-right","size":null,"v-on:click":"linkJdbcConnection",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":153,"renderKey":153.70143840617544,"componentName":"Button153"},"v-if":null,"v-show":null,"disabled":true,"effect":"","content":"","placement":""}],"formId":106,"renderKey":106.64721822784583,"componentName":"ElTabPane106"},"v-if":null,"v-show":null,":disabled":null,"label":"项目信息","name":"editForm","closable":"undefined"},{"__config__":{"elName":"ElTabPane","designLayout":"function tabPaneLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-tab-pane\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": element.label,\\r\\n        \\"closable\\": element.closable != ''undefined''\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function tabPaneLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入选项卡标题\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''名称'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''name'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入与选项卡绑定值value对应的标识符\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.name,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"name\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''能否关闭'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''closable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.closable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"closable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tabPane'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-tab-pane","tagIcon":"row","label":"tab页","document":"https://element.eleme.io/#/zh-CN/component/tabs","children":[{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":121,"renderKey":121.34224020977814,"componentName":"Button121"},"__slot__":{"default":""},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onAddMemberList",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":120,"renderKey":120.67136211705677,"componentName":"Button120","locked":true},"v-if":null,"v-show":null,"disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":119,"renderKey":119.04072516492543,"componentName":"ElRow119","locked":true},"v-if":"action != \\"view\\"","v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"form","span":24,"children":[{"__config__":{"elName":"EditTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function editTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var slot = scheme.__slot__;\\r\\n    // 处理编辑表格:data\\r\\n    var dataAttr = '''';\\r\\n    if (scheme['':data'']) {\\r\\n      if (parent['':model'']) {\\r\\n        dataAttr = \\":data=\\".concat(parent['':model''], \\".\\").concat(scheme['':data'']);\\r\\n      } else if (config.elName === ''QueryTable'') {\\r\\n        dataAttr = \\":data=\\".concat(scheme['':data'']);\\r\\n      }\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView, ['':data'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = '''';\\r\\n    str = \\"<\\".concat(Tag, \\" \\").concat(dataAttr, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function editTableLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"子表\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''table'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": \\"name\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择子表\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.table,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"table\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.dbModel.childTables.filter(function (item) {\\r\\n    return item[''isAssociation''] != ''1'';\\r\\n  }).map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', '':data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"当前行变量\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', '':currentRow'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入当前行变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':currentRow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':currentRow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否斑马纹\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否有边框\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示表头\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高亮当前行\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.tableE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function tableDataOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    // 当前行变量\\r\\n    if (scheme['':currentRow'']) {\\r\\n      list.push(\\"\\".concat(scheme['':currentRow''], \\": {}, // \\\\u5F53\\\\u524D\\\\u884C\\"));\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table编辑","tagIcon":"tables","span":24,"table":{"id":"1351544466239864851","name":"prj_member","remarks":"","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:46","source":"BASE TABLE","scheme":{"id":"1351544466239864848","name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","parentTableFk":"project_id","isMainTable":"0","isAssociation":"0","associationField":"","checkVersion":"1","filter":"","constraintJson":"[]","isTreeTable":false,"delFlagExists":true,"columnList":[{"id":"1351544466239864864","name":"id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"标识","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"id","childFields":[],"isPk":"1","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=21, message=\\"标识长度必须介于 1 和 21 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864865","name":"project_id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"项目","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"prj_project","javaField":"project","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","remarks":"","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","dictType":{"id":"5006","name":"低代码-数据类型","remarks":"代码生成模块的业务表字段配置数据类型","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","code":"dc_javaType","isSystem":"0","dictItemList":[]},"value":"String"},"customType":{"isTreeTable":false,"delFlagExists":false,"columnList":[],"importList":[],"parentExists":false,"idExists":false,"sortExists":false,"createDateExists":false,"updateDateExists":false,"updateByExists":false,"autoSerialExists":false,"hasPassWordInput":false,"mutilFileUploadExists":false,"imageUploadExists":false},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","remarks":"","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","dictType":{"id":"5006","name":"低代码-数据类型","remarks":"代码生成模块的业务表字段配置数据类型","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","code":"dc_javaType","isSystem":"0","dictItemList":[]},"value":"String"},"customType":{"isTreeTable":false,"delFlagExists":false,"columnList":[],"importList":[],"parentExists":false,"idExists":false,"sortExists":false,"createDateExists":false,"updateDateExists":false,"updateByExists":false,"autoSerialExists":false,"hasPassWordInput":false,"mutilFileUploadExists":false,"imageUploadExists":false},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"1351544466239864850","name":"prj_project","className":"Project","comments":"项目","isTreeTable":false,"delFlagExists":true,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Member","simpleAnnotationList":["NotNull(message=\\"项目不能为空\\")"],"isNotBaseField":true,"isEditableField":true},{"id":"1351544466239864866","name":"user_id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"用户","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"user","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"用户不能为空\\")"],"isNotBaseField":true,"isEditableField":true},{"id":"1351544466239864867","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true},{"id":"1351544466239864868","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864869","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"创建时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864870","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864871","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864872","name":"del_flag","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"删除标记（0：正常；1：删除）","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"delFlag","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"删除标记（0：正常；1：删除）长度必须介于 1 和 1 之间\\")"],"isNotBaseField":false,"isEditableField":false}],"importList":["com.geeke.project.entity.Project","javax.validation.constraints.NotNull","com.geeke.admin.entity.User"],"parentExists":false,"idExists":true,"sortExists":false,"createDateExists":true,"updateDateExists":true,"updateByExists":true,"autoSerialExists":false,"hasPassWordInput":false,"mutilFileUploadExists":false,"imageUploadExists":false,"columns":[{"id":"1351544466239864864","name":"id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"标识","jdbcType":"bigint(21) unsigned","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"id","childFields":[],"isPk":"1","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=21, message=\\"标识长度必须介于 1 和 21 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864865","name":"project_id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"项目","jdbcType":"bigint(21) unsigned","javaType":{"id":"8101","name":"This","value":"This"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"prj_project","javaField":"project","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","remarks":"","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","dictType":{"id":"5006","name":"低代码-数据类型","remarks":"代码生成模块的业务表字段配置数据类型","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","code":"dc_javaType","isSystem":"0","dictItemList":[]},"value":"String"},"customType":{"isTreeTable":false,"delFlagExists":false,"columnList":[],"importList":[],"parentExists":false,"idExists":false,"sortExists":false,"createDateExists":false,"updateDateExists":false,"updateByExists":false,"autoSerialExists":false,"hasPassWordInput":false,"mutilFileUploadExists":false,"imageUploadExists":false},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","remarks":"","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","dictType":{"id":"5006","name":"低代码-数据类型","remarks":"代码生成模块的业务表字段配置数据类型","createBy":"超级管理员(super)","createDate":"2022-09-27 16:44:44","updateBy":"超级管理员(super)","updateDate":"2022-12-07 12:41:14","code":"dc_javaType","isSystem":"0","dictItemList":[]},"value":"String"},"customType":{"isTreeTable":false,"delFlagExists":false,"columnList":[],"importList":[],"parentExists":false,"idExists":false,"sortExists":false,"createDateExists":false,"updateDateExists":false,"updateByExists":false,"autoSerialExists":false,"hasPassWordInput":false,"mutilFileUploadExists":false,"imageUploadExists":false},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"1351544466239864850","name":"prj_project","className":"Project","comments":"项目","isTreeTable":false,"delFlagExists":true,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Member","simpleAnnotationList":["NotNull(message=\\"项目不能为空\\")"],"isNotBaseField":true,"isEditableField":true},{"id":"1351544466239864866","name":"user_id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"用户","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"user","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"用户不能为空\\")"],"isNotBaseField":true,"isEditableField":true},{"id":"1351544466239864867","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true},{"id":"1351544466239864868","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864869","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"创建时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864870","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864871","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false},{"id":"1351544466239864872","name":"del_flag","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"删除标记（0：正常；1：删除）","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"delFlag","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"删除标记（0：正常；1：删除）长度必须介于 1 和 1 之间\\")"],"isNotBaseField":false,"isEditableField":false}]},"children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tagIcon":"select","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColELayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    scheme.__config__.parentTableDate = parent['':data'']; // 获取父级table的:data属性，用于form-item的prop属性拼接\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    // 非编辑状态下插槽对象(formItem)\\r\\n    var cloneFormItem = JSON.parse(JSON.stringify(config.children[0]));\\r\\n    cloneFormItem.__config__.outputHtml = config.children[0].__config__.outputHtml;\\r\\n    cloneFormItem.__config__.children[0].__config__.outputHtml = function (scheme, parent, isView) {\\r\\n      return scheme.__config__.staticExp ? eval(scheme.__config__.staticExp) : \\"{{ \\".concat(scheme[\\"v-model\\"], \\" }}\\");\\r\\n    };\\r\\n    var slotChild = cloneFormItem.__config__.outputHtml.call(this, cloneFormItem, scheme, isView); // scheme此时相当于parent\\r\\n    var header = config.children[0].required ? \\"<span style=''color: #F56C6C''>*</span>{{ column.title }}\\" : ''{{ column.title }}'';\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot:header=''{ column }''>\\\\n                  \\").concat(header, \\"\\\\n                </template>\\\\n                <template v-slot:edit=''{row, rowIndex}''>\\\\n                  \\").concat(children.join(''\\\\n''), \\"\\\\n                </template>\\\\n                <template v-slot=\\\\\\"{row, rowIndex}\\\\\\">\\\\n                  <span class=\\\\\\"my-input-sc\\\\\\">\\\\n                    \\").concat(slotChild, \\"\\\\n                  </span>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    delete parent.__config__.parentTableDate; // 删除获取父级table的:data属性字段parentTableDate\\r\\n    return str;\\r\\n  }","propertyLayout":"function colSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.prop = field.javaField;\\r\\n    this.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.__config__.children[0].required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'' || field.javaType.value === ''This'') {\\r\\n      this.activeData.__config__.children[0].__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0].__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this2.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this2, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0].__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':currentRow''], \\".row.\\"),\\r\\n      \\"parent\\": this.activeData\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''min-width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''fixed'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), this.hasOwnProperty(this.activeData, ''align'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), this.hasOwnProperty(this.activeData, ''header-align'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0].__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':currentRow''], \\".row\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this8 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this8.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"","loopArray":"userOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"staticExp":"`{{ ${scheme.__config__.dataType == \\"dynamic\\" ? scheme.__config__.optionLabel.replace(scheme.__config__.loopItem + \\".\\", scheme[\\"v-model\\"] + \\".\\") : scheme[\\"v-model\\"]} }}`","isInner":true,"formId":165,"renderKey":165.87364251669987,"componentName":"SelectInput165"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"user","v-model":"row.user",":style":{"width":"100%"},"placeholder":"请选择用户","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"modelExp":"`row.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`:prop=''\\"${parent.__config__.parentTableDate}.\\" + rowIndex + \\".${scheme.__config__.children[0].__vModel__}\\"''`","regList":[],"isInner":true,"formId":164,"renderKey":164.94246249034248,"componentName":"SelectInput164"},"label":null,"label-width":"0px","required":true,":rules":"[{required: true,  message: \\"用户不能为空\\", trigger: \\"change\\"}]"}],"formId":163,"renderKey":163.70381811511706,"componentName":"SelectInput163","field":{"id":"1351544466239864866","name":"user_id","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"用户","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"user","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"用户不能为空\\")"],"isNotBaseField":true,"isEditableField":true,"isType":false,"isChecked":false},"parentTableDate":"memberList"},"tree-node":true,"resizable":true,"visible":"undefined","label":"用户","prop":"user","width":null,"min-width":null,"fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null,":edit-render":"{autofocus: \\".el-input__inner\\"}"},{"__config__":{"elName":"MutilpleInput","label":"多行文本","tagIcon":"textarea","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColELayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    scheme.__config__.parentTableDate = parent['':data'']; // 获取父级table的:data属性，用于form-item的prop属性拼接\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    // 非编辑状态下插槽对象(formItem)\\r\\n    var cloneFormItem = JSON.parse(JSON.stringify(config.children[0]));\\r\\n    cloneFormItem.__config__.outputHtml = config.children[0].__config__.outputHtml;\\r\\n    cloneFormItem.__config__.children[0].__config__.outputHtml = function (scheme, parent, isView) {\\r\\n      return scheme.__config__.staticExp ? eval(scheme.__config__.staticExp) : \\"{{ \\".concat(scheme[\\"v-model\\"], \\" }}\\");\\r\\n    };\\r\\n    var slotChild = cloneFormItem.__config__.outputHtml.call(this, cloneFormItem, scheme, isView); // scheme此时相当于parent\\r\\n    var header = config.children[0].required ? \\"<span style=''color: #F56C6C''>*</span>{{ column.title }}\\" : ''{{ column.title }}'';\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot:header=''{ column }''>\\\\n                  \\").concat(header, \\"\\\\n                </template>\\\\n                <template v-slot:edit=''{row, rowIndex}''>\\\\n                  \\").concat(children.join(''\\\\n''), \\"\\\\n                </template>\\\\n                <template v-slot=\\\\\\"{row, rowIndex}\\\\\\">\\\\n                  <span class=\\\\\\"my-input-sc\\\\\\">\\\\n                    \\").concat(slotChild, \\"\\\\n                  </span>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    delete parent.__config__.parentTableDate; // 删除获取父级table的:data属性字段parentTableDate\\r\\n    return str;\\r\\n  }","propertyLayout":"function colMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.prop = field.javaField;\\r\\n    this.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.__config__.children[0].required = field.isNull != ''1'';\\r\\n    this.activeData.__config__.children[0].__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0].__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':currentRow''], \\".row.\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''min-width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''fixed'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), this.hasOwnProperty(this.activeData, ''align'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), this.hasOwnProperty(this.activeData, ''header-align'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''tableE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData.__config__.children[0]\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","children":[{"__config__":{"modelExp":"`row.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`:prop=''\\"${parent.__config__.parentTableDate}.\\" + rowIndex + \\".${scheme.__config__.children[0].__vModel__}\\"''`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":127,"renderKey":127.45406254539661,"componentName":"MutilpleInput127"},"__vModel__":"remarks","v-model":"row.remarks","type":"textarea","placeholder":"请输入备注信息","rows":2,":maxLength":255,":disabled":null,":readonly":null}],"regList":[],"isInner":true,"formId":126,"renderKey":126.82268184408746,"componentName":"MutilpleInput126"},"label":null,"label-width":"0px","required":false,":rules":"[]"}],"formId":125,"renderKey":125.0851863766843,"componentName":"MutilpleInput125","field":{"id":"1351544466239864867","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-19 13:03:31","updateBy":"超级管理员(super)","updateDate":"2023-01-19 13:03:47","dcTable":{"id":"1351544466239864851","name":"prj_member","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[]},"className":"Member","comments":"项目成员","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true},"parentTableDate":"memberList"},"tree-node":true,"resizable":true,"visible":"undefined","label":"备注信息","prop":"remarks","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null,":edit-render":"{autofocus: \\".el-input__inner\\"}"},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":"if(cellValue.id == editFormData.user.id) {\\n  return \\"负责人\\"\\n}\\nreturn \\"成员\\"","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":134,"renderKey":134.49990059457872,"componentName":"ElTableColumn134"},"tree-node":true,"resizable":true,"visible":"undefined","label":"角色","prop":"user","width":null,"min-width":null,"fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    child.unshift(h(\\"span\\", [parent.label]));\\r\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        justifyContent: parent[''header-align'']\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\r\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    return \\"\\".concat(children.join(''\\\\n''));\\r\\n  }","tag":"el-row","tagIcon":"row","children":[],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":129,"renderKey":129.10017831398994,"componentName":"TableOptColumnHeader129"},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": {\\r\\n          justifyContent: parent.align\\r\\n        },\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\r\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    return \\"\\".concat(children.join(''\\\\n''));\\r\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"icon-btn","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":131,"renderKey":131.97158067645577,"componentName":"IconButton131","locked":true},"v-on:click":"onDeleteChild(editFormData.memberList, scope.rowIndex)","type":"danger","v-if":"scope.row.user.id != editFormData.user.id","v-show":null,"content":"删除","placement":"top","icon-name":"el-icon-delete"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":130,"renderKey":130.5565536475814,"componentName":"TableOptColumnMain130"},"align":null}],"tag":"ux-table-column","tagIcon":"opt-column","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":128,"renderKey":128.9636993781085,"componentName":"ElTableOptColumn128","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"80px","fixed":"right","align":"left","header-align":"center","v-if":"action != \\"view\\""}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":118,"renderKey":118.81450267903696,"componentName":"EditTable118","locked":true},"ref":"memberTable",":data":"memberList",":currentRow":"table118CurrentRow","height":"200px","max-height":null,"stripe":"undefined","border":true,"size":null,"show-header":"undefined",":edit-config":"{trigger: \\"click\\", mode: \\"cell\\"}","highlight-current-row":"undefined","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":117,"renderKey":117.81652262985448,"componentName":"ElEditForm117","locked":true},"ref":"memberForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"formId":116,"renderKey":116.69530127464554,"componentName":"ElTabPane116","locked":true},"v-if":null,"v-show":null,":disabled":null,"label":"项目成员","name":"memberTable","closable":"undefined"}],"formId":102,"renderKey":102.84250996196393,"componentName":"ElTabs102"},"v-if":null,"v-show":null,"v-model":"tabName","type":"border-card","closable":"undefined","addable":"undefined","editable":"undefined","tab-position":"top","stretch":"undefined",":before-leave":null,"v-on:tab-click":null,"v-on:tab-remove":null,"v-on:tab-add":null,"v-on:edit":null}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.3178756364201,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"项目","v-loading":"loading","width":"70%","fullscreen":false}]},"maxFormId":167,"locked":true,"version":34,"code":"<template>\\n  <el-row class=\\"dc-container\\">\\n    <el-dialog\\n      v-on:open=\\"onDialogOpen\\"\\n      v-on:close=\\"onDialogClose\\"\\n      v-loading=\\"loading\\"\\n      width=\\"70%\\"\\n      :fullscreen=\\"false\\"\\n      :title=\\"dialogProps.title\\"\\n      :visible.sync=\\"dialogProps.visible\\"\\n      :close-on-click-modal=\\"false\\"\\n      class=\\"dc-el-dialog_ElDialog\\"\\n    >\\n      <el-row>\\n        <el-tabs v-model=\\"tabName\\" type=\\"border-card\\" tab-position=\\"top\\" class=\\"dc-el-tabs_ElTabs\\">\\n          <el-tab-pane label=\\"项目信息\\" name=\\"editForm\\" class=\\"dc-el-tab-pane_ElTabPane\\">\\n            <el-form\\n              ref=\\"editForm\\"\\n              :model=\\"editFormData\\"\\n              label-width=\\"100px\\"\\n              :disabled=\\"action == ''view''\\"\\n              class=\\"dc-el-form_ElEditForm\\"\\n            >\\n              <el-row>\\n                <el-col :span=\\"16\\">\\n                  <el-form-item\\n                    prop=\\"name\\"\\n                    label=\\"名称\\"\\n                    :rules=\\"[{ required: true, message: ''名称不能为空'', trigger: ''blur'' }]\\"\\n                    class=\\"dc-el-form-item_SingleInput\\"\\n                  >\\n                    <el-input\\n                      v-model=\\"editFormData.name\\"\\n                      :maxLength=\\"128\\"\\n                      placeholder=\\"请输入名称\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"status\\" label=\\"归档\\" class=\\"dc-el-form-item_Switch\\">\\n                    <el-switch\\n                      v-model=\\"editFormData.status\\"\\n                      active-value=\\"1\\"\\n                      inactive-value=\\"0\\"\\n                      class=\\"dc-el-switch_Switch\\"\\n                    ></el-switch>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"dbIp\\" label=\\"数据库IP\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbIp\\"\\n                      :maxLength=\\"64\\"\\n                      placeholder=\\"请输入数据库IP\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item\\n                    prop=\\"dbType\\"\\n                    label=\\"数据库类型\\"\\n                    :rules=\\"[{ required: true, message: ''数据库类型不能为空'', trigger: ''change'' }]\\"\\n                    class=\\"dc-el-form-item_SelectInput\\"\\n                  >\\n                    <el-select\\n                      v-model=\\"editFormData.dbType\\"\\n                      :style=\\"{ width: ''100%'' }\\"\\n                      placeholder=\\"请选择数据库类型\\"\\n                      clearable\\n                      value-key=\\"id\\"\\n                      filterable\\n                      class=\\"dc-el-select_SelectInput\\"\\n                    >\\n                      <el-option\\n                        v-for=\\"(item, index) in dbTypeOptions\\"\\n                        :key=\\"index\\"\\n                        :label=\\"item.name\\"\\n                        :value=\\"item\\"\\n                      ></el-option>\\n                    </el-select>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"dbName\\" label=\\"数据库名\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbName\\"\\n                      :maxLength=\\"32\\"\\n                      placeholder=\\"请输入数据库名\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"dbUsername\\" label=\\"数据库用户\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbUsername\\"\\n                      :maxLength=\\"64\\"\\n                      placeholder=\\"请输入数据库用户\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"dbPassword\\" label=\\"数据库密码\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbPassword\\"\\n                      :maxLength=\\"64\\"\\n                      placeholder=\\"请输入数据库密码\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"8\\">\\n                  <el-form-item prop=\\"dbPort\\" label=\\"数据库端口\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbPort\\"\\n                      :maxLength=\\"10\\"\\n                      placeholder=\\"请输入数据库端口\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"12\\">\\n                  <el-form-item prop=\\"dbUrl\\" label=\\"数据库地址\\" class=\\"dc-el-form-item_SingleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.dbUrl\\"\\n                      :maxLength=\\"128\\"\\n                      placeholder=\\"请输入数据库地址\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"12\\">\\n                  <el-form-item\\n                    prop=\\"cloudName\\"\\n                    label=\\"服务名\\"\\n                    :rules=\\"[{ required: true, message: ''服务名不能为空'', trigger: ''blur'' }]\\"\\n                    class=\\"dc-el-form-item_SingleInput\\"\\n                  >\\n                    <el-input\\n                      v-model=\\"editFormData.cloudName\\"\\n                      :maxLength=\\"64\\"\\n                      placeholder=\\"请输入服务名\\"\\n                      clearable\\n                      class=\\"dc-el-input_SingleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n                <el-col :span=\\"24\\">\\n                  <el-form-item prop=\\"remarks\\" label=\\"备注信息\\" class=\\"dc-el-form-item_MutilpleInput\\">\\n                    <el-input\\n                      v-model=\\"editFormData.remarks\\"\\n                      type=\\"textarea\\"\\n                      placeholder=\\"请输入备注信息\\"\\n                      rows=\\"2\\"\\n                      :maxLength=\\"255\\"\\n                      class=\\"dc-el-input_MutilpleInput\\"\\n                    ></el-input>\\n                  </el-form-item>\\n                </el-col>\\n              </el-row>\\n            </el-form>\\n            <el-tooltip disabled class=\\"dc-el-tooltip_Button\\">\\n              <el-button\\n                type=\\"primary\\"\\n                icon=\\"el-icon-refresh-right\\"\\n                v-on:click=\\"linkJdbcConnection\\"\\n                class=\\"dc-el-button_Button\\"\\n              >\\n                测试连接\\n              </el-button>\\n            </el-tooltip>\\n          </el-tab-pane>\\n          <el-tab-pane label=\\"项目成员\\" name=\\"memberTable\\" class=\\"dc-el-tab-pane_ElTabPane\\">\\n            <el-row v-if=\\"action != ''view''\\" gutter=\\"0\\" type=\\"flex\\" justify=\\"end\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n              <el-tooltip disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button\\n                  type=\\"primary\\"\\n                  icon=\\"el-icon-plus\\"\\n                  v-on:click=\\"onAddMemberList\\"\\n                  class=\\"dc-el-button_Button\\"\\n                ></el-button>\\n              </el-tooltip>\\n            </el-row>\\n            <el-form\\n              ref=\\"memberForm\\"\\n              :model=\\"editFormData\\"\\n              label-width=\\"100px\\"\\n              :disabled=\\"action == ''view''\\"\\n              class=\\"dc-el-form_ElEditForm\\"\\n            >\\n              <el-row>\\n                <ux-grid\\n                  :data=\\"editFormData.memberList\\"\\n                  ref=\\"memberTable\\"\\n                  :currentRow=\\"table118CurrentRow\\"\\n                  height=\\"200px\\"\\n                  border\\n                  :edit-config=\\"{ trigger: ''click'', mode: ''cell'' }\\"\\n                  class=\\"dc-ux-grid_EditTable\\"\\n                >\\n                  <ux-table-column\\n                    field=\\"user\\"\\n                    title=\\"用户\\"\\n                    tree-node\\n                    resizable\\n                    align=\\"left\\"\\n                    header-align=\\"center\\"\\n                    show-overflow\\n                    :edit-render=\\"{ autofocus: ''.el-input__inner'' }\\"\\n                    class=\\"dc-ux-table-column_SelectInput\\"\\n                  >\\n                    <template v-slot:header=\\"{ column }\\">\\n                      <span style=\\"color: #f56c6c\\">*</span>\\n                      {{ column.title }}\\n                    </template>\\n                    <template v-slot:edit=\\"{ row, rowIndex }\\">\\n                      <el-form-item\\n                        :prop=\\"''memberList.'' + rowIndex + ''.user''\\"\\n                        label-width=\\"0px\\"\\n                        :rules=\\"[{ required: true, message: ''用户不能为空'', trigger: ''change'' }]\\"\\n                        class=\\"dc-el-form-item_SelectInput\\"\\n                      >\\n                        <el-select\\n                          v-model=\\"row.user\\"\\n                          :style=\\"{ width: ''100%'' }\\"\\n                          placeholder=\\"请选择用户\\"\\n                          clearable\\n                          value-key=\\"id\\"\\n                          filterable\\n                          class=\\"dc-el-select_SelectInput\\"\\n                        >\\n                          <el-option\\n                            v-for=\\"(item, index) in userOptions\\"\\n                            :key=\\"index\\"\\n                            :label=\\"item.name\\"\\n                            :value=\\"item\\"\\n                          ></el-option>\\n                        </el-select>\\n                      </el-form-item>\\n                    </template>\\n                    <template v-slot=\\"{ row, rowIndex }\\">\\n                      <span class=\\"my-input-sc\\">\\n                        <el-form-item\\n                          :prop=\\"''memberList.'' + rowIndex + ''.user''\\"\\n                          label-width=\\"0px\\"\\n                          :rules=\\"[{ required: true, message: ''用户不能为空'', trigger: ''change'' }]\\"\\n                          class=\\"dc-el-form-item_SelectInput\\"\\n                        >\\n                          {{ row.user.name }}\\n                        </el-form-item>\\n                      </span>\\n                    </template>\\n                  </ux-table-column>\\n                  <ux-table-column\\n                    field=\\"remarks\\"\\n                    title=\\"备注信息\\"\\n                    tree-node\\n                    resizable\\n                    min-width=\\"120px\\"\\n                    align=\\"left\\"\\n                    header-align=\\"center\\"\\n                    show-overflow\\n                    :edit-render=\\"{ autofocus: ''.el-input__inner'' }\\"\\n                    class=\\"dc-ux-table-column_MutilpleInput\\"\\n                  >\\n                    <template v-slot:header=\\"{ column }\\">\\n                      {{ column.title }}\\n                    </template>\\n                    <template v-slot:edit=\\"{ row, rowIndex }\\">\\n                      <el-form-item\\n                        :prop=\\"''memberList.'' + rowIndex + ''.remarks''\\"\\n                        label-width=\\"0px\\"\\n                        class=\\"dc-el-form-item_MutilpleInput\\"\\n                      >\\n                        <el-input\\n                          v-model=\\"row.remarks\\"\\n                          type=\\"textarea\\"\\n                          placeholder=\\"请输入备注信息\\"\\n                          rows=\\"2\\"\\n                          :maxLength=\\"255\\"\\n                          class=\\"dc-el-input_MutilpleInput\\"\\n                        ></el-input>\\n                      </el-form-item>\\n                    </template>\\n                    <template v-slot=\\"{ row, rowIndex }\\">\\n                      <span class=\\"my-input-sc\\">\\n                        <el-form-item\\n                          :prop=\\"''memberList.'' + rowIndex + ''.remarks''\\"\\n                          label-width=\\"0px\\"\\n                          class=\\"dc-el-form-item_MutilpleInput\\"\\n                        >\\n                          {{ row.remarks }}\\n                        </el-form-item>\\n                      </span>\\n                    </template>\\n                  </ux-table-column>\\n                  <ux-table-column\\n                    field=\\"user\\"\\n                    title=\\"角色\\"\\n                    tree-node\\n                    resizable\\n                    align=\\"left\\"\\n                    header-align=\\"center\\"\\n                    show-overflow\\n                    class=\\"dc-ux-table-column_ElTableColumn\\"\\n                  >\\n                    <template slot-scope=\\"{ row, rowIndex }\\">\\n                      <div\\n                        v-html=\\"\\n                          ((cellValue, row, index) => {\\n                            if (cellValue.id == editFormData.user.id) {\\n                              return ''负责人''\\n                            }\\n                            return ''成员''\\n                          })(row.user, row, rowIndex)\\n                        \\"\\n                      ></div>\\n                    </template>\\n                  </ux-table-column>\\n                  <ux-table-column\\n                    title=\\"操作\\"\\n                    tree-node\\n                    resizable\\n                    width=\\"160px\\"\\n                    min-width=\\"80px\\"\\n                    fixed=\\"right\\"\\n                    align=\\"left\\"\\n                    header-align=\\"center\\"\\n                    v-if=\\"action != ''view''\\"\\n                    class=\\"dc-ux-table-column_ElTableOptColumn\\"\\n                  >\\n                    <template v-slot:header=\\"scope\\">\\n                      <span>操作</span>\\n                    </template>\\n                    <template slot-scope=\\"scope\\">\\n                      <OperationIcon\\n                        v-on:click=\\"onDeleteChild(editFormData.memberList, scope.rowIndex)\\"\\n                        type=\\"danger\\"\\n                        v-if=\\"scope.row.user.id != editFormData.user.id\\"\\n                        content=\\"删除\\"\\n                        placement=\\"top\\"\\n                        icon-name=\\"el-icon-delete\\"\\n                        class=\\"dc-OperationIcon_IconButton\\"\\n                      ></OperationIcon>\\n                    </template>\\n                  </ux-table-column>\\n                </ux-grid>\\n              </el-row>\\n            </el-form>\\n          </el-tab-pane>\\n        </el-tabs>\\n      </el-row>\\n      <span slot=\\"footer\\" class=\\"dialog-footer\\">\\n        <el-button v-on:click=\\"onSubmit\\" type=\\"primary\\" v-show=\\"action != ''view''\\">保存</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action != ''view''\\">取消</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action == ''view''\\">关闭</el-button>\\n      </span>\\n    </el-dialog>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\nimport { listSysDbTypeAll } from ''@/api/dbtype/sysDbType.js''\\nimport { listUserAll } from ''@/api/admin/user.js''\\n/** 根据用户界面配置import组件 结束 */\\nimport { getProjectById, saveProject, linkJdbcConnection } from ''@/api/project/project''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nconst artTemplate = require(''art-template/lib/index'')\\nexport default {\\n  extends: BaseUI,\\n  name: ''project-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      // 对话框属性变量\\n      dialogProps: {\\n        visible: false,\\n        title: ''项目''\\n      },\\n      dialogTitle: ''项目'',\\n      // 选项变量\\n      // 数据库类型选项\\n      dbTypeOptions: [],\\n      table118CurrentRow: {}, // 当前行\\n      // null选项\\n      userOptions: [],\\n      tabName: ''editForm'', // tab标签页\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {\\n    //计算from表单数据中的三个属性\\n    computeUrl() {\\n      const { dbIp, dbPort, dbName, dbType } = this.editFormData\\n      return {\\n        dbIp,\\n        dbPort,\\n        dbName,\\n        dbType\\n      }\\n    }\\n  },\\n  methods: {\\n    onSubmit() {\\n      let validFlag = true\\n\\n      this.$refs[''memberForm''].validate((valid) => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''memberTable''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''editForm''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      if (validFlag) {\\n        this.doSave()\\n      }\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      saveProject(this.editFormData)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.dialogProps.visible = false\\n            this.showMessage({\\n              type: ''success'',\\n              msg: ''保存成功''\\n            })\\n            this.$emit(''save-finished'')\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n        getProjectById(id)\\n          .then((responseData) => {\\n            let form = {}\\n            if (responseData.code == 100) {\\n              form = responseData.data\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n            resolve(form)\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n\\n    listDbTypeOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [])\\n\\n      // 数据权限: 数据库类型sys_db_type\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1371119793305198596'')\\n\\n      listSysDbTypeAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.dbTypeOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    listUserOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [])\\n\\n      listUserAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.userOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n\\n      this.listDbTypeOptions()\\n\\n      this.listUserOptions()\\n    },\\n    onDeleteChild(tableData, index) {\\n      // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    initEditData(This) {\\n      let newPrj = {\\n        user: currentUser, // 当前用户作为项目负责人\\n        name: '''', // 名称\\n        status: ''0'', // 归档\\n        dbIp: '''', // 数据库IP\\n        dbType: {\\n          id: null,\\n          name: null,\\n          driver: null,\\n          rule: null\\n        },\\n        dbName: '''', // 数据库名\\n        dbUsername: '''', // 数据库用户\\n        dbPassword: '''', // 数据库密码\\n        dbPort: '''', // 数据库端口\\n        dbUrl: '''', // 数据库地址\\n        cloudName: '''', // 服务名\\n        remarks: '''', // 备注信息\\n        memberList: []\\n      }\\n      newPrj.memberList = [\\n        {\\n          user: currentUser,\\n          remarks: ''''\\n        }\\n      ] // 当前用户作为项目成员\\n      return newPrj\\n    },\\n\\n    onAddMemberList() {\\n      this.editFormData.memberList.push({\\n        user: {\\n          id: null,\\n\\n          name: null\\n        },\\n\\n        remarks: '''' // 备注信息\\n      })\\n    },\\n\\n    linkJdbcConnection() {\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n          //发送请求到后端 看是否能连接到数据库\\n          this.setLoad()\\n          linkJdbcConnection(this.editFormData).then((responseData) => {\\n            if (responseData.code == 100) {\\n              this.showMessage(responseData)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n          })\\n        } else {\\n          return false\\n        }\\n      })\\n    }\\n  },\\n  watch: {\\n    tabName(val, oldVal) {\\n      this.$nextTick(() => {\\n        if (this.$refs[val] && this.$refs[val].doLayout) {\\n          this.$refs[val].doLayout()\\n        }\\n      })\\n    },\\n\\n    computeUrl() {\\n      const { dbIp, dbPort, dbName, dbType } = this.computeUrl\\n      if (!validatenull(dbType.id)) {\\n        let rule = dbType.rule\\n        this.editFormData.dbUrl = artTemplate.render(rule, this.computeUrl)\\n      }\\n    }\\n  },\\n  mounted: function () {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function (id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function (id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function () {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function (id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.editFormData.id = null //把id设置为空，添加一个新的\\n\\n        for (var i = 0; i <= this.editFormData.memberList.length - 1; i++) {\\n          this.editFormData.memberList[i].id = null\\n        }\\n\\n        this.dialogProps.visible = true\\n      })\\n    })\\n  }\\n}\\n</script>\\n<style>\\n.my-input-sc {\\n  display: inline-block;\\n  height: 30px;\\n  line-height: 30px;\\n  -webkit-appearance: none;\\n  background-color: #ffffff;\\n  background-image: none;\\n  border-radius: 4px;\\n  border: 1px solid #dcdfe6;\\n  box-sizing: border-box;\\n  color: #606266;\\n  font-size: inherit;\\n  outline: none;\\n  padding: 0 15px;\\n  transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n  width: 100%;\\n}\\n</style>\\n"},{"filePath":"client/src/views/project//project","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":34,"code":"const conditions = [\\n  {\\n    name: ''id'',\\n    comments: ''标识'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''user_id'',\\n    comments: ''用户'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: {\\n      labelField: ''name'',\\n      className: ''User'',\\n      fieldId: ''id'',\\n      tableId: ''1351544466239864850'',\\n      apiPath: ''admin/user'',\\n      filter: ''''\\n    }\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''名称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''status'',\\n    comments: ''状态'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''remarks'',\\n    comments: ''备注信息'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_by'',\\n    comments: ''创建者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_date'',\\n    comments: ''创建时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  },\\n\\n  {\\n    name: ''update_by'',\\n    comments: ''更新者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''update_date'',\\n    comments: ''更新时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  }\\n]\\n\\nconst metadata = [\\n  {\\n    id: ''1351544466239864850'',\\n    schemeId: ''1351544466239864848'',\\n    name: ''项目'',\\n    conditionPanel: conditions,\\n    type: ''main'',\\n    dataRules: []\\n  }\\n]\\nexport default metadata\\n"}],"version":34}', remarks='', create_by='超级管理员(super)', create_date='2023-01-28 15:42:13', update_by='超级管理员(super)', update_date='2023-05-22 10:11:58', del_flag='0'
WHERE id=1365056502072901644;
UPDATE dc_clien_scheme
SET project_id=88888888, name='移动端方案', scheme_id=1440433057862000817, template_id=1324748199636492454, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/dc//dcMobileScheme","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { downMobile, downMobileScheme } from ''@/api/dc/dcCode''\\nimport { download } from ''@/utils/download''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = []\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''list-tree'' && item.__config__.locked}}\\n      if(validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      this.search.params.push({\\n      \\tcolumnName: ''{{item.__config__.associatedField}}'',\\n      \\tqueryType: ''{{item.__config__.operator}}'',\\n      \\tvalue: this.parentTable.id\\n      })\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.initOptions(this.queryModel)\\n      this.setLoad()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      if(validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      let row={\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''list-tree'' && item.__config__.locked}}\\n            {{if item.__config__.associatedField && item.__config__.field}}\\n        ''{{item.__config__.field.javaField}}'': \\n              {{if item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This''}}\\n              {\\n                {{each item.__config__.field.childFields field}}\\n                {{field.value}}: this.parentTable.{{field.value}},           \\n              {{/each}}\\n              }\\n              {{else}}\\n              this.parentTable.id,\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      this.$refs.tplDialog.$emit(''selectTemplate'', row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    afterChangeTpl(clientTpl, dbModel) {\\n      const parant = {\\n        project: this.parentTable\\n      }\\n      this.$refs.editForm.$emit(''openAddDialog'', parant, clientTpl, dbModel)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onChangeCurrentRow(currentRow, oldCurrentRow) {\\n      if(currentRow != oldCurrentRow) {\\n        this.parentTable = currentRow\\n        this.initOptions(this.queryModel)\\n        this.onSearch()\\n      }\\n    },\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDownload() {\\n      this.setLoad()\\n      downMobile(this.parentTable.id)\\n        .then((responseData) => {\\n          download(responseData, this.parentTable.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onDownloadScheme(scope) {\\n      this.setLoad()\\n      downMobileScheme(scope.row.id)\\n        .then((responseData) => {\\n          download(responseData, this.parentTable.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    }\\n  },\\n  watch: {\\n     {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.58019016266202,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.15152263828583,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"tpl-dialog","tagIcon":"import","label":"引入组件","component":"TplDialog","from":"./tplDialog","methousList":[{"name":"after-change","value":"afterChangeTpl"}],"attrsList":[],"formId":141,"renderKey":141.45171897530597,"componentName":"ElImport141"},"ref":"tplDialog","v-if":null,"v-show":null},{"__config__":{"elName":"ElContainer","designLayout":"function containerLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var Tag = \\"\\".concat(config.tag);\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''container-layout drawing-row-item active-from-item'' : ''container-layout drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var isContainer = Tag == ''el-container'';\\r\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","tag":"el-container","tagIcon":"row","label":"Container布局","changeLayout":"aside-main","document":"https://element.eleme.io/2.15/#/zh-CN/component/container","children":[{"__config__":{"elName":"ElAside","designLayout":"function containerChildLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var Tag = \\"\\".concat(config.tag);\\n    return h(Tag, {\\n      \\"attrs\\": {\\n        \\"width\\": element.width,\\n        \\"height\\": element.height\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": \\"width:100%; height:100%\\",\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var isContainer = Tag == ''el-container'';\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\">\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function headerLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [this.activeData.__config__.elName == ''ElHeader'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度'',\\n      \\"guide\\": this.getHelp(''page.container'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入高度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.__config__.elName == ''ElAside'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.container'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.container'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.container'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-aside","children":[{"__config__":{"elName":"ListTree","designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function listTreeLayout(h, hasOneZOne) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }];\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple'', ''File'', ''Image''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: ''name'',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: '''',\\r\\n      filter: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: ''name'',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: '''',\\r\\n      filter: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.label; // 说明\\r\\n      search.name = item.value; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.dcTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.dcTable.scheme.moduleName + ''/'' + (item.dcTable.scheme.subModuleName ? item.dcTable.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function addSearchConditions() {\\r\\n    // 初始循环添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    // this.params.activeSearchName.push(index)\\r\\n  }\\r\\n\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n\\r\\n  function onChangeModel(field) {\\r\\n    var _this = this;\\r\\n    this.activeData.__config__.tableColumnsChildFields = [];\\r\\n    this.activeData.__config__.searchList = [];\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.activeData['':api''] = {\\r\\n      baseURL: '''',\\r\\n      method: ''post'',\\r\\n      url: '''',\\r\\n      params: [],\\r\\n      data: null,\\r\\n      reqBefore: ''return config'',\\r\\n      reqResponse: '''',\\r\\n      reqError: ''console.error(error)''\\r\\n    };\\r\\n    if (field.javaType.value == ''Custom'') {\\r\\n      this.activeData.__config__.tableColumnsChildFields = field.childFields;\\r\\n      this.activeData['':api''].baseURL = \\"BASE_API\\";\\r\\n      this.activeData['':api''].url =\\r\\n      // ''/'' + field.customType.scheme.moduleName + ''/'' + (field.customType.scheme.subModuleName ? (field.customType.scheme.subModuleName + ''/''):\\"\\")  + (field.customType.isTreeTable?\\"tree\\":\\"list\\")\\r\\n      field.customType.scheme.moduleName + ''/'' + (field.customType.scheme.subModuleName ? field.customType.scheme.subModuleName + ''/'' : '''') + field.customType.className.charAt(0).toLowerCase() + field.customType.className.slice(1) + (field.customType.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n      this.activeData['':api''].data = field.customType.filter;\\r\\n      //添加查询字段\\r\\n      this.activeData.__config__.tableColumnsChildFields.forEach(function (item, index) {\\r\\n        addSearchConditions.call(_this);\\r\\n        onChangeSearchColumn.call(_this, item, index);\\r\\n      });\\r\\n    } else if (field.javaType.value == ''This'') {\\r\\n      this.activeData.__config__.tableColumnsChildFields = field.childFields;\\r\\n      if (this.dbModel.table.name == field.currentSchemeTable) {\\r\\n        this.activeData['':api''].url =\\r\\n        // ''/'' + this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? (this.dbModel.table.scheme.subModuleName + ''/'') : \\"\\") + (this.dbModel.table.isTreeTable ? \\"tree\\" : \\"list\\")\\r\\n        this.dbModel.customType.scheme.moduleName + ''/'' + (this.dbModel.customType.scheme.subModuleName ? this.dbModel.customType.scheme.subModuleName + ''/'' : '''') + this.dbModel.customType.className.charAt(0).toLowerCase() + this.dbModel.customType.className.slice(1) + (this.dbModel.table.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n        this.activeData['':api''].params = this.dbModel.table.filter;\\r\\n      }\\r\\n      this.dbModel.childTables.forEach(function (element) {\\r\\n        if (element.name == field.currentSchemeTable) {\\r\\n          _this.activeData['':api''].url =\\r\\n          // ''/'' + element.scheme.moduleName + ''/'' + (element.scheme.subModuleName ? (element.scheme.subModuleName + ''/'') : \\"\\") + (element.isTreeTable ? \\"tree\\" : \\"list\\")\\r\\n          element.scheme.moduleName + ''/'' + (element.scheme.subModuleName ? element.scheme.subModuleName + ''/'' : '''') + element.className.charAt(0).toLowerCase() + element.className.slice(1) + (element.isTreeTable ? \\"/tree\\" : \\"/list\\");\\r\\n          _this.activeData['':api''].params = element.filter;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"field\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示字段（v-model）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示字段'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''field'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入显示字段\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列表名'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入列表名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''格式化'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"关联数据\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''associatedField'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.associatedField\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''关联字段'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''associatedField'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择关联字段\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.associatedField,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"associatedField\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.filter(function (table) {\\r\\n    return table.name.indexOf(''子表'') < 0;\\r\\n  }).map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this2, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.name,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.name\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''查询方式'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this2.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [_this2.activeData.__config__.tableColumnsChildFields.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.value, \\": \\").concat(item.label),\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this2, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this2, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this2.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''选项参数'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''filter'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"请输入选项参数\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.filter,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, \\"filter\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this2, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this2.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this2.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this2.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this2, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this2.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this2, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this2.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this2.getHelp(''page.listTree'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''头对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"api\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"RequestApi\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData['':api''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, '':api'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"7\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.listTree'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function listTreeData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.tag == ''list-tree'' && scheme.__config__.locked) {\\r\\n      list.push(''parentTable: {},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"list-tree","label":"列表","tagIcon":"table","associatedField":"project_id","operator":"=","document":"http://www.umyui.com/umycomponent/uxGridApi","tableColumnsChildFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"状态","value":"status","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"是否多租户（0：否；1：是）","value":"multil_ten","javaType":{"id":"8108","name":"Boolean","value":"Boolean"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"searchList":[{"tag":"el-input","name":"id","javaType":"String","comments":"标识","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple","File","Image"]},{"tag":"el-input","name":"name","javaType":"String","comments":"名称","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple","File","Image"]},{"tag":"el-input","name":"status","javaType":"String","comments":"状态","queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{},"id":"string","component":"单行文本","types":["String","Code","Mutilple","File","Image"]},{"tag":"el-switch","name":"multil_ten","javaType":"Boolean","comments":"是否多租户（0：否；1：是）","queryType":"=","operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{"active-value":true,"inactive-value":false},"id":"boolean","component":"开关","types":["Boolean"]}],"formId":125,"renderKey":125.86997011407196,"componentName":"ListTree125","locked":true,"field":{"id":"1440433057862000839","name":"project_id","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"项目","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"Project","comments":"项目","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"project","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"状态","value":"status","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"是否多租户（0：否；1：是）","value":"multil_ten","javaType":{"id":"8108","name":"Boolean","value":"Boolean"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"项目不能为空\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"Custom","isType":false}},"v-if":null,"v-show":null,"ref":"listTree","height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","v-on:current-change":"onChangeCurrentRow","v-on:row-click":"","title":"项目","field":"name","data-render":null,"align":"left","header-align":"center","show-overflow":true,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""},":api":{"baseURL":"BASE_API","method":"post","url":"project/project/listAll","params":[],"data":"return {\\n        params: [\\n          {\\"columnName\\":\\"status\\", \\"queryType\\": \\"=\\", \\"value\\": \\"0\\"}\\n        ],\\n      }","reqBefore":"\\nconfig.headers[\\"X-Token\\"] = sessionStorage.getItem(\\"dev_token\\")\\n    return config","reqResponse":"if (response.data.code == 100) {\\n\\treturn response.data.data\\n}","reqError":"console.error(error)"}}],"isInner":true,"formId":104,"renderKey":104.88111682646077,"componentName":"ElAside104","locked":true},"width":"200px","height":"60px","v-if":null,"v-show":null},{"__config__":{"elName":"ElMain","designLayout":"function containerChildLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var Tag = \\"\\".concat(config.tag);\\n    return h(Tag, {\\n      \\"attrs\\": {\\n        \\"width\\": element.width,\\n        \\"height\\": element.height\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": \\"width:100%; height:100%\\",\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), child, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function containerLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var isContainer = Tag == ''el-container'';\\n    var child = !isContainer ? \\"<el-row>\\\\n      \\".concat(children.join(''\\\\n''), \\"\\\\n    </el-row>\\") : \\"\\".concat(children.join(''\\\\n''));\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\">\\\\n        \\").concat(child, \\"\\\\n    </\\").concat(Tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function mainLayout(h) {\\n    return h(\\"info\\", {\\n      \\"attrs\\": {\\n        \\"text\\": \\"暂无可定义属性！\\"\\n      }\\n    });\\n  }","tag":"el-main","children":[{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionTagLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''事件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:search''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":108,"renderKey":108.19032693039324,"componentName":"ElConditionTag108","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            list.push(h(\\"el-tooltip\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"effect\\": item.__config__.effect,\\r\\n                \\"content\\": item.__config__.content,\\r\\n                \\"placement\\": item.__config__.placement\\r\\n              }\\r\\n            }, [h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled,\\r\\n                \\"plain\\": item.plain == true ? true : false\\r\\n              }\\r\\n            }, [item.__slot__.default])]));\\r\\n          } else {\\r\\n            list.push(h(\\"el-button\\", {\\r\\n              \\"attrs\\": {\\r\\n                \\"type\\": item.type,\\r\\n                \\"icon\\": item.icon,\\r\\n                \\"plain\\": item.plain == true ? true : false,\\r\\n                \\"size\\": conf.__config__.size,\\r\\n                \\"disabled\\": item.disabled\\r\\n              }\\r\\n            }, [item.__slot__.default]));\\r\\n          }\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\r\\n    var conf = element;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": conf,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode = h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        textAlign: element.align\\r\\n      }\\r\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\r\\n    var _this = this;\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__;\\r\\n      if (slot && slot.options && slot.options.length) {\\r\\n        slot.options.forEach(function (item) {\\r\\n          item.size = scheme.__config__.size;\\r\\n          var attrs = _this.getAttrs(item, isView);\\r\\n          if (item.__config__.tooltip === true) {\\r\\n            var obj = {\\r\\n              effect: item.__config__.effect,\\r\\n              content: item.__config__.content,\\r\\n              placement: item.__config__.placement\\r\\n            };\\r\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\r\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\r\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\r\\n          } else {\\r\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\r\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\r\\n  var _this = this;\\r\\n  function addReg() {\\r\\n    this.activeData.__slot__.options.push({\\r\\n      __config__: {\\r\\n        tooltip: false,\\r\\n        // 是否增加按钮提示\\r\\n        effect: '''',\\r\\n        // 提示主题\\r\\n        content: '''',\\r\\n        // 提示内容\\r\\n        placement: '''' // 提示方向\\r\\n      },\\r\\n\\r\\n      __slot__: {\\r\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\r\\n      },\\r\\n      ''v-on:click'': '''',\\r\\n      type: ''primary'',\\r\\n      icon: null,\\r\\n      '':disabled'': undefined,\\r\\n      ''v-if'': undefined,\\r\\n      ''v-show'': undefined\\r\\n    });\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"对齐方式\\",\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"按钮\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"drag-collapse query-filed\\"\\r\\n  }, [h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\r\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })])])]), h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮文字\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__slot__.default,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮图标\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\r\\n      }\\r\\n    }), h(\\"IconInput\\", {\\r\\n      \\"model\\": {\\r\\n        value: item.icon,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"icon\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"按钮类型\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"primary\\",\\r\\n        \\"value\\": \\"primary\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"success\\",\\r\\n        \\"value\\": \\"success\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"warning\\",\\r\\n        \\"value\\": \\"warning\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"danger\\",\\r\\n        \\"value\\": \\"danger\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"info\\",\\r\\n        \\"value\\": \\"info\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"text\\",\\r\\n        \\"value\\": \\"text\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"默认\\",\\r\\n        \\"value\\": \\"\\"\\r\\n      }\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"是否提示\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\r\\n      }\\r\\n    }), h(\\"el-switch\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"inactive-value\\": ''undefined''\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.__config__.tooltip,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"activeData\\": item.__config__\\r\\n      }\\r\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"点击事件\\",\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": item.__config__.locked,\\r\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-on:click''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-on:click'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''禁用条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item['':disabled''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, '':disabled'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''渲染条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-if''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-if'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示条件'',\\r\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"rows\\": 2,\\r\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item[''v-show''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, ''v-show'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addReg.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\r\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":110,"renderKey":110.7101331238016,"componentName":"ButtonGroup110","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"left"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":107,"renderKey":107.92165100401894,"componentName":"ElRow107","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  var dateTypeOptions = [{\\r\\n    id: ''date'',\\r\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\r\\n    value: ''datetime''\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    label: ''年月日(yyyy-MM-dd)'',\\r\\n    value: ''date''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年月(yyyy-MM)'',\\r\\n    value: ''month''\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    label: ''年(yyyy)'',\\r\\n    value: ''year''\\r\\n  }];\\r\\n  var tagList = [{\\r\\n    id: ''string'',\\r\\n    component: ''单行文本'',\\r\\n    tag: ''el-input'',\\r\\n    queryType: ''like'',\\r\\n    types: [''String'', ''Code'', ''Mutilple''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {}\\r\\n  }, {\\r\\n    id: ''boolean'',\\r\\n    component: ''开关'',\\r\\n    tag: ''el-switch'',\\r\\n    types: [''Boolean''],\\r\\n    queryType: ''='',\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''active-value'': true,\\r\\n      ''inactive-value'': false\\r\\n    }\\r\\n  }, {\\r\\n    id: ''date'',\\r\\n    component: ''日期'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Date''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''datetime'',\\r\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''time'',\\r\\n    component: ''时间'',\\r\\n    tag: ''el-time-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Time''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      ''value-format'': ''HH:mm:ss''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''month'',\\r\\n    component: ''年月'',\\r\\n    tag: ''el-date-picker'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month''],\\r\\n    operations: [{\\r\\n      value: ''like'',\\r\\n      label: ''包含''\\r\\n    }, {\\r\\n      value: ''not like'',\\r\\n      label: ''不包含''\\r\\n    }, {\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      type: ''month'',\\r\\n      ''value-format'': ''yyyy-MM''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''number'',\\r\\n    component: ''金额/数值'',\\r\\n    tag: ''number-input'',\\r\\n    queryType: ''='',\\r\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''between'',\\r\\n      label: ''介于''\\r\\n    }, {\\r\\n      value: ''not between'',\\r\\n      label: ''不介于''\\r\\n    }],\\r\\n    attribute: {\\r\\n      '':min'': 0,\\r\\n      '':max'': 999999999999,\\r\\n      '':precision'': 0\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''下拉选择'',\\r\\n    tag: ''el-select'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: '''',\\r\\n      filter: ''''\\r\\n    }\\r\\n  }, {\\r\\n    id: ''custom'',\\r\\n    component: ''级联选择'',\\r\\n    tag: ''el-cascader'',\\r\\n    queryType: ''='',\\r\\n    types: [''Custom'', ''This''],\\r\\n    operations: [{\\r\\n      value: ''='',\\r\\n      label: ''等于''\\r\\n    }, {\\r\\n      value: ''<>'',\\r\\n      label: ''不等于''\\r\\n    }, {\\r\\n      value: ''in'',\\r\\n      label: ''在列表''\\r\\n    }, {\\r\\n      value: ''not in'',\\r\\n      label: ''不在列表''\\r\\n    }],\\r\\n    attribute: {\\r\\n      labelField: '''',\\r\\n      // 级联显示标题\\r\\n      className: '''',\\r\\n      fieldId: '''',\\r\\n      tableId: '''',\\r\\n      apiPath: '''',\\r\\n      filter: ''''\\r\\n    }\\r\\n  }];\\r\\n  if (!this.params.activeSearchName) {\\r\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\r\\n  }\\r\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\r\\n    this.$set(this.params, ''currentKey'', 0);\\r\\n  }\\r\\n  function onChangeSearchColumn(item, index) {\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    if (item) {\\r\\n      var javaType = item.javaType.value;\\r\\n      search.javaType = javaType; // 类型\\r\\n      search.comments = item.comments; // 说明\\r\\n      search.name = item.name; // 字段名\\r\\n      var tags = tagList.filter(function (tag) {\\r\\n        return tag.types.indexOf(javaType) >= 0;\\r\\n      });\\r\\n      if (tags != null && tags.length > 0) {\\r\\n        for (var i = 0; i < tags.length; i++) {\\r\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\r\\n        }\\r\\n      }\\r\\n      // 自定义类型时，写入api和className、fieldId\\r\\n      if (javaType == ''Custom'') {\\r\\n        var className = item.customType.className;\\r\\n        tags[0].attribute.className = className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\r\\n      } else if (javaType == ''This'') {\\r\\n        var _className = item.currentTable.className;\\r\\n        tags[0].attribute.className = _className;\\r\\n        tags[0].attribute.fieldId = item.associatedField;\\r\\n        tags[0].attribute.tableId = item.dcTable.id;\\r\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\r\\n      }\\r\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\r\\n    }\\r\\n  }\\r\\n  function onChangeSearchTag(item, index) {\\r\\n    // 修改\\r\\n    this.params.currentKey++;\\r\\n    var search = this.activeData.__config__.searchList[index];\\r\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\r\\n  }\\r\\n  function addSearchCondition() {\\r\\n    // 添加查询条件\\r\\n    this.activeData.__config__.searchList.push({\\r\\n      tag: '''',\\r\\n      name: '''',\\r\\n      javaType: '''',\\r\\n      comments: '''',\\r\\n      queryType: '''',\\r\\n      operations: [],\\r\\n      attribute: {}\\r\\n    });\\r\\n    var index = this.activeData.__config__.searchList.length;\\r\\n    this.params.activeSearchName.push(index);\\r\\n  }\\r\\n  function dateTypeChange(type, attribute) {\\r\\n    if (type.value === ''date'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\r\\n    } else if (type.value === ''datetime'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\r\\n    } else if (type.value === ''month'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\r\\n    } else if (type.value === ''year'') {\\r\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\r\\n    }\\r\\n  }\\r\\n  function onSwitchValueInput(val, name, searchIndex) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  var custProperties = []; // 自定义属性类型的属性列表\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"className\\": \\"condition-panel\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入字段名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''字段名'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入字段名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':conditionColumns''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"查询字段\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"class\\": \\"query-filed\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.params.activeSearchName,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\r\\n    return h(\\"el-collapse-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"name\\": searchIndex + 1\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"title\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"key\\": _this.params.currentKey + searchIndex,\\r\\n      \\"class\\": \\"header-inner\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\r\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''字段'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择查询字段\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\r\\n      return table.name.indexOf(''子表'') < 0;\\r\\n    }).map(function (group, groupIndex) {\\r\\n      return h(\\"el-option-group\\", {\\r\\n        \\"key\\": groupIndex,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n          \\"value\\": groupIndex\\r\\n        }\\r\\n      }, [group.tableColumns.map(function (item) {\\r\\n        return h(\\"el-option\\", {\\r\\n          \\"key\\": item.name,\\r\\n          \\"attrs\\": {\\r\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n            \\"value\\": item.name\\r\\n          },\\r\\n          \\"nativeOn\\": {\\r\\n            \\"click\\": function click(event) {\\r\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n              event.stopPropagation();\\r\\n            }\\r\\n          }\\r\\n        });\\r\\n      })]);\\r\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.name,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item.name\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''控件'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"filterable\\": true,\\r\\n        \\"placeholder\\": \\"请选择控件\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.tag,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search, \\"tag\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [tagList.filter(function (tag) {\\r\\n      return tag.types.indexOf(search.javaType) >= 0;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.tag,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.name,\\r\\n          \\"value\\": item.tag\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeSearchTag.call(_this, item, searchIndex);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''显示名'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择显示名\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.labelField,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\r\\n      return table.name.indexOf(''子表'') < 0;\\r\\n    }).map(function (group, groupIndex) {\\r\\n      return h(\\"el-option-group\\", {\\r\\n        \\"key\\": groupIndex,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n          \\"value\\": groupIndex\\r\\n        }\\r\\n      }, [group.tableColumns.some(function (item) {\\r\\n        if (item.name == search.name) {\\r\\n          custProperties = item.childFields;\\r\\n          return true;\\r\\n        }\\r\\n      }) && custProperties.map(function (item) {\\r\\n        return h(\\"el-option\\", {\\r\\n          \\"key\\": item.value,\\r\\n          \\"attrs\\": {\\r\\n            \\"label\\": item.label,\\r\\n            \\"value\\": item.value\\r\\n          }\\r\\n        });\\r\\n      })]);\\r\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\r\\n      if (item.name == search.name) {\\r\\n        custProperties = item.childFields;\\r\\n        return true;\\r\\n      }\\r\\n    }) && custProperties.map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''选项参数'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"textarea\\",\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"请输入选项参数\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.filter,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间类型'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间类型\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute.type,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, \\"type\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [dateTypeOptions.filter(function (type) {\\r\\n      return type.id === search.id;\\r\\n    }).map(function (item) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.value,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": item.label,\\r\\n          \\"value\\": item.value\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            dateTypeChange.call(_this, item, search.attribute);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''时间格式'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\r\\n      }\\r\\n    }), h(\\"el-select\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"请选择时间格式\\"\\r\\n      },\\r\\n      \\"style\\": \\"width: 100%\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute[''value-format''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, ''value-format'', $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm:ss\\",\\r\\n        \\"value\\": \\"HH:mm:ss\\"\\r\\n      }\\r\\n    }), h(\\"el-option\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"HH:mm\\",\\r\\n        \\"value\\": \\"HH:mm\\"\\r\\n      }\\r\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''开启值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\r\\n        \\"placeholder\\": \\"请输入开启值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''关闭值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\r\\n        \\"placeholder\\": \\"请输入关闭值\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最小值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"max\\": search.attribute['':max''],\\r\\n        \\"allow-negative\\": true,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最小值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':min''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':min'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''最大值'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\r\\n      }\\r\\n    }), h(\\"number-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"min\\": search.attribute['':min''],\\r\\n        \\"allow-negative\\": false,\\r\\n        \\"precision\\": search.attribute['':precision''],\\r\\n        \\"placeholder\\": \\"请输入最大值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':max''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':max'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n      \\"slot\\": ''label'',\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": ''精度'',\\r\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\r\\n      }\\r\\n    }), h(\\"el-input-number\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"精度\\",\\r\\n        \\"step\\": 1,\\r\\n        \\"min\\": 0,\\r\\n        \\"max\\": 10\\r\\n      },\\r\\n      \\"style\\": \\"width:100%;\\",\\r\\n      \\"model\\": {\\r\\n        value: search.attribute['':precision''],\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(search.attribute, '':precision'', $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])]);\\r\\n  })])]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSearchCondition.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.locked) return list;\\r\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\r\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\r\\n      scheme.__config__.searchList.forEach(function (search) {\\r\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\r\\n      });\\r\\n    }\\r\\n    list.push(''],'');\\r\\n    return list;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"id","javaType":"String","comments":"主键","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"project_id","javaType":"Custom","comments":"项目","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"Project","fieldId":"id","tableId":"1440433057862000819","apiPath":"project/project","filter":""}},{"name":"name","javaType":"String","comments":"名称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"scheme_id","javaType":"Custom","comments":"后端方案","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"DcScheme","fieldId":"id","tableId":"1440433057862000819","apiPath":"dc/dcScheme","filter":""}},{"name":"template_id","javaType":"Custom","comments":"模板","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"DcTemplate","fieldId":"id","tableId":"1440433057862000819","apiPath":"dc/dcTemplate","filter":"{ columnName: ''type'', queryType: ''='', value: this.$route.params.typeParam }"}},{"name":"template_json","javaType":"String","comments":"模板json","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"remarks","javaType":"Mutilple","comments":"备注信息","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"Date","comments":"创建时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"Date","comments":"更新时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}}],"formId":122,"renderKey":122.8909596768312,"componentName":"ElConditionPanel122","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function queryFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单名'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表单尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签对齐'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标签宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this3 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this3.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":128,"renderKey":128.24913366114623,"componentName":"SingleInput128"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true}],"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","id":"formItemQ","span":6,"childClassName":"","field":{"id":"1440433057862000840","name":"name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"String"},"propertyLayout":"function itemSingleInputLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field, group) {\\r\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\r\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.id,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item,\\r\\n          \\"disabled\\": _this.handelDisabled(item)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            if (!_this.handelDisabled(item)) {\\r\\n              onChangeModel.call(_this, item, group);\\r\\n            }\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [h(\\"span\\", {\\r\\n        \\"style\\": \\"padding-left: 6px;\\"\\r\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n        \\"style\\": \\"float: right;\\",\\r\\n        \\"attrs\\": {\\r\\n          \\"className\\": \\"filed-tip\\"\\r\\n        }\\r\\n      }, [item.isType && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"danger\\"\\r\\n        }\\r\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"warning\\"\\r\\n        }\\r\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\r\\n      \\"parent\\": this.activeData,\\r\\n      \\"hasOneZOne\\": hasOneZOne\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":127,"renderKey":127.38702029695713,"componentName":"SingleInput127"},"label":"名称","v-if":null,"v-show":null},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this8 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this8.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listDcSchemeAll","apiFrom":"@/api/dc/dcScheme.js","optionParams":"","loopArray":"schemeOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","operator":"=","optWatchs":[],"isInner":true,"formId":146,"renderKey":146.50853054165717,"componentName":"SelectInput146"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"scheme","v-model":"queryFormData.scheme",":style":{"width":"100%"},"placeholder":"请选择后端方案","clearable":true,"value-key":"id","filterable":true}],"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}${scheme.__config__.field && scheme.__config__.field.associatedField ? \\".\\" + scheme.__config__.field.associatedField :\\"\\"}\\"`","id":"formItemQ","span":6,"childClassName":"","field":{"id":"1440433057862000841","name":"scheme_id","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"后端方案","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","comments":"低代码-代码方案","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"scheme","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"方案名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0,"dataLength":21,"simpleJavaType":"Custom","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["NotNull(message=\\"后端方案不能为空\\")"],"isType":false,"isChecked":false},"propertyLayout":"function itemSelectLayout(h, hasOneZOne) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field, group) {\\r\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\r\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.id,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item,\\r\\n          \\"disabled\\": _this2.handelDisabled(item)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            if (!_this2.handelDisabled(item)) {\\r\\n              onChangeModel.call(_this2, item, group);\\r\\n            }\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [h(\\"span\\", {\\r\\n        \\"style\\": \\"padding-left: 6px;\\"\\r\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n        \\"style\\": \\"float: right;\\",\\r\\n        \\"attrs\\": {\\r\\n          \\"className\\": \\"filed-tip\\"\\r\\n        }\\r\\n      }, [item.isType && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"danger\\"\\r\\n        }\\r\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"warning\\"\\r\\n        }\\r\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this2.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this2, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\r\\n      \\"parent\\": this.activeData,\\r\\n      \\"hasOneZOne\\": hasOneZOne\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":145,"renderKey":145.16993033972946,"componentName":"SelectInput145"},"label":"后端方案","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":113,"renderKey":113.59466051821113,"componentName":"ElQueryForm113","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var idFlex = element.type == ''flex'' ? true : false;\\r\\n    var items;\\r\\n    if (element.align == ''top'') {\\r\\n      items = ''start'';\\r\\n    } else if (element.align == ''bottom'') {\\r\\n      items = ''end'';\\r\\n    } else if (element.align == ''middle'') {\\r\\n      items = ''center'';\\r\\n    }\\r\\n\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": idFlex ? {\\r\\n          width: ''100%'',\\r\\n          display: ''flex'',\\r\\n          ''justify-content'': element.justify,\\r\\n          ''align-items'': items\\r\\n        } : '''',\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": config.gutter\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function rowLayout(h) {\\r\\n  var _this = this;\\r\\n  var justifyOptions = [{\\r\\n    value: ''start'',\\r\\n    label: ''左对齐''\\r\\n  }, {\\r\\n    value: ''end'',\\r\\n    label: ''右对齐''\\r\\n  }, {\\r\\n    value: ''center'',\\r\\n    label: ''居中对齐''\\r\\n  }, {\\r\\n    value: ''space-around'',\\r\\n    label: ''两侧间隔相等''\\r\\n  }, {\\r\\n    value: ''space-between'',\\r\\n    label: ''两端对齐''\\r\\n  }];\\r\\n  var alignOptions = [{\\r\\n    value: ''top'',\\r\\n    label: ''起点对齐''\\r\\n  }, {\\r\\n    value: ''bottom'',\\r\\n    label: ''终点对齐''\\r\\n  }, {\\r\\n    value: ''middle'',\\r\\n    label: ''居中对齐''\\r\\n  }];\\r\\n  function onChange(val) {\\r\\n    if (val === ''flex'') {\\r\\n      this.activeData.justify = ''start'';\\r\\n      this.activeData.align = ''top'';\\r\\n    } else {\\r\\n      this.activeData.justify = undefined;\\r\\n      this.activeData.align = undefined;\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格间隔'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50,\\r\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.gutter,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''布局模式'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"default\\"\\r\\n    }\\r\\n  }), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"flex\\"\\r\\n    }\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''水平排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.justify,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [justifyOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''垂直排列'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [alignOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": \\"2\\",\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":143,"renderKey":143.9148545394969,"componentName":"Button143"},"__slot__":{"default":"下载代码"},"type":"","icon":"el-icon-download","size":null,"v-on:click":"onDownload",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":142,"renderKey":142.82155258162348,"componentName":"Button142"},"v-if":"tableData.length > 0","v-show":"","disabled":true,"effect":"","content":"","placement":""},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":116,"renderKey":116.00056099934831,"componentName":"Button116","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":115,"renderKey":115.15773410331938,"componentName":"Button115","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":114,"renderKey":114.07367856937775,"componentName":"ElRow114","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // fixed 时不能拖动\\r\\n    config.children.forEach(function (item, i) {\\r\\n      if (item.fixed !== ''undefined'') {\\r\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\r\\n      }\\r\\n    });\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"filter\\": \\".forbid\\",\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup,\\r\\n          \\"move\\": function move(e) {\\r\\n            // 固定列不允许停靠\\r\\n            if (e.relatedContext.element) {\\r\\n              return e.relatedContext.element.fixed == ''undefined'';\\r\\n            }\\r\\n            return false;\\r\\n          }\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"div\\", {\\r\\n      \\"class\\": ''table-wrapper''\\r\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\r\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function queryTableLayout(h) {\\r\\n  var _this = this;\\r\\n  // 注册监听， 设置树形配置\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''表格名'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"prop\\": \\"::data\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入显示的数据名（data）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':data''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':data'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''栅格'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.height,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大高度(px)\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''最大高度(px)'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''max-height''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否斑马纹'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.stripe,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否有边框'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.border,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示表头'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-header''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''高亮当前行'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''highlight-current-row''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"树形\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''子节点属性'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"子节点属性名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].children,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''缩进长度'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"缩进长度\\",\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 50\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].indent,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''启用连接线'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].line,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"展开后图标\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''展开后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''收起后图标'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行变化\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行变化'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''排序'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:sort-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''列宽'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:header-dragend''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''单元格点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:cell-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''行点击'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"行被点击时触发\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:row-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme['':data'']) {\\r\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\r\\n      if (scheme.__config__.elName == ''QueryTable'') {\\r\\n        // 查询表格列头\\r\\n        list.push(''// 查询表格列头'');\\r\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\r\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n        });\\r\\n        list.push(''},'');\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":132,"renderKey":132.10743452741335,"componentName":"ElTableColumn132","field":{"id":"1440433057862000840","name":"name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":"undefined","label":"名称","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":130,"renderKey":130.48406320517145,"componentName":"ElTableColumn130","field":{"id":"1440433057862000839","name":"project.status","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"项目.状态","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"Project","comments":"项目","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"project.status","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"状态","value":"status","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"是否多租户（0：否；1：是）","value":"multil_ten","javaType":{"id":"8108","name":"Boolean","value":"Boolean"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"项目不能为空\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"Custom"}},"tree-node":true,"resizable":true,"visible":false,"label":"项目.状态","prop":"project.status","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":131,"renderKey":131.2605373881557,"componentName":"ElTableColumn131","field":{"id":"1440433057862000839","name":"project.name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"项目.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"Project","comments":"项目","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"project.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"状态","value":"status","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"是否多租户（0：否；1：是）","value":"multil_ten","javaType":{"id":"8108","name":"Boolean","value":"Boolean"},"dcTable":{"id":"1351544466239864850","name":"prj_project","scheme":{"name":"项目","packageName":"com.geeke","moduleName":"project","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"Project","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"项目不能为空\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"Custom"}},"tree-node":true,"resizable":true,"visible":false,"label":"项目.名称","prop":"project.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":133,"renderKey":133.52537570861278,"componentName":"ElTableColumn133","field":{"id":"1440433057862000841","name":"scheme.name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"后端方案.方案名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","comments":"低代码-代码方案","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"scheme.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"方案名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"后端方案不能为空\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"Custom"}},"tree-node":true,"resizable":true,"visible":"undefined","label":"后端方案","prop":"scheme.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":134,"renderKey":134.29900858618984,"componentName":"ElTableColumn134","field":{"id":"1440433057862000842","name":"template.name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"模板.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1338205620666941461","name":"dc_template","scheme":{"name":"模板管理","packageName":"com.geeke","moduleName":"dc","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"DcTemplate","comments":"低代码-模板","filter":"{ columnName: ''type'', queryType: ''='', value: this.$route.params.typeParam }","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"template.name","childFields":[{"label":"主键","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1338205620666941461","name":"dc_template","scheme":{"name":"模板管理","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcTemplate","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1338205620666941461","name":"dc_template","scheme":{"name":"模板管理","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcTemplate","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleAnnotationList":[],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"Custom"}},"tree-node":true,"resizable":true,"visible":"undefined","label":"模板","prop":"template.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":135,"renderKey":135.1173201599086,"componentName":"ElTableColumn135","field":{"id":"1440433057862000843","name":"template_json","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"模板json","jdbcType":"longtext","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"templateJson","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":-1,"decimalLenth":0,"simpleAnnotationList":["Length(min=0, max=-1, message=\\"模板json长度必须介于 0 和 -1 之间\\")"],"isEditableField":true,"isNotBaseField":true,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":false,"label":"模板json","prop":"templateJson","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":136,"renderKey":136.3977928419309,"componentName":"ElTableColumn136","field":{"id":"1440433057862000844","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"备注信息","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleAnnotationList":[],"isEditableField":true,"isNotBaseField":false,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":false,"label":"备注信息","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":137,"renderKey":137.5392829113757,"componentName":"ElTableColumn137","field":{"id":"1440433057862000845","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isEditableField":false,"isNotBaseField":false,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":138,"renderKey":138.89824569698368,"componentName":"ElTableColumn138","field":{"id":"1440433057862000846","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"创建时间","jdbcType":"datetime","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":-1,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isEditableField":false,"isNotBaseField":false,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"120px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":139,"renderKey":139.34288957353183,"componentName":"ElTableColumn139","field":{"id":"1440433057862000847","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isEditableField":false,"isNotBaseField":false,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"'', summary: \\").concat(scheme.__config__.summary, \\"}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((value, row, rowIndex) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": index,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": \\"\\".concat(group.childClassName ? group.childClassName + ''List[0].'' : '''').concat(item.javaField)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            onChangeModel.call(_this, item);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      });\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''EditTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableE.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [!item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"合计列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''summary'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.summary,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"summary\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","summary":false,"formId":140,"renderKey":140.73374355299566,"componentName":"ElTableColumn140","field":{"id":"1440433057862000848","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"datetime","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":-1,"decimalLenth":0,"simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isEditableField":false,"isNotBaseField":false,"simpleJavaType":"String"}},"tree-node":true,"resizable":true,"visible":"undefined","label":"更新时间","prop":"updateDate","width":null,"min-width":"120px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-col-opt table-column-container'',\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      },\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, h(\\"div\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"class\\": \\"table-col-opt-inner\\"\\r\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName === ''QueryTable'') {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    } else {\\r\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\r\\n    }\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColOprLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\r\\n\\r\\n    // 以 slot 属性来存储\\r\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\r\\n    var conf = Object.assign({}, element, {\\r\\n      width: ''''\\r\\n    });\\r\\n    child = h(\\"render\\", {\\r\\n      \\"class\\": ''popover-item-container'',\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": conf\\r\\n      }\\r\\n    });\\r\\n    var slotChildren = element.__slot__.__config__.children;\\r\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\r\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\r\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\r\\n    var copyItem = itemBtns.children[1];\\r\\n    var DeleteItem = itemBtns.children.pop();\\r\\n    return h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [child, h(\\"div\\", {\\r\\n      \\"class\\": ''drawing-item-btns''\\r\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\r\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function popoverLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件ref'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入ref名称\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示位置'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\",\\r\\n      \\"value\\": \\"top\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-start\\",\\r\\n      \\"value\\": \\"top-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top-end\\",\\r\\n      \\"value\\": \\"top-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\",\\r\\n      \\"value\\": \\"bottom\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-start\\",\\r\\n      \\"value\\": \\"bottom-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom-end\\",\\r\\n      \\"value\\": \\"bottom-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\",\\r\\n      \\"value\\": \\"left\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-start\\",\\r\\n      \\"value\\": \\"left-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left-end\\",\\r\\n      \\"value\\": \\"left-end\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\",\\r\\n      \\"value\\": \\"right\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-start\\",\\r\\n      \\"value\\": \\"right-start\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right-end\\",\\r\\n      \\"value\\": \\"right-end\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"位置偏移\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''位置偏移'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 0,\\r\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.offset,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"添加类名\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''添加类名'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''popper-class''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''触发方式'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%;\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.trigger,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"click\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"focus激活\\",\\r\\n      \\"value\\": \\"focus\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"hover激活\\",\\r\\n      \\"value\\": \\"hover\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''show'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-enter'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-enter''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''hide'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:hide''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''after-leave'',\\r\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:after-leave''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名（ref）'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"保存回调\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:save-column-view''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"全部显示\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-all-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"恢复默认\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:show-default-column''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":153,"renderKey":153.52591029522725,"componentName":"ViewColumnsSelect153","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":151,"renderKey":151.61320393621727,"componentName":"ElPopover151","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":152,"renderKey":152.50576053474833,"componentName":"IconButton152"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":158,"renderKey":158.1448362870211,"componentName":"IconButton158","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":120,"renderKey":120.02090995997881,"componentName":"TableOptColumnHeader120","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"icon-btn","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":144,"renderKey":144.39177337367198,"componentName":"IconButton144"},"v-on:click":"onDownloadScheme(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"下载代码","placement":"top","icon-name":"el-icon-download"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n        content = config.content,\\r\\n        placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''icon-name''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"图标类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"提示内容\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入提示内容\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.content,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"方位\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.placement,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"bottom\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":121,"renderKey":121.80810922073731,"componentName":"TableOptColumnMain121","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":119,"renderKey":119.69895807390677,"componentName":"ElTableOptColumn119","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":117,"renderKey":117.59882790945515,"componentName":"QueryTable117","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","propertyLayout":"function paginationLayout(h) {\\r\\n  var _this = this;\\r\\n  function onInput(val) {\\r\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''总条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"总条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':total''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':total'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''当前页数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"当前页数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':current-page''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''每页条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"每页条目数变量\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':page-size''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''可选条目数'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"可选条目数\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.sizes,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否背景色'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.background,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''上一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"上一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''prev-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"下一页文字\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''下一页文字'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"下一页文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''next-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''size-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:size-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''current-change'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:current-change''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''prev-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:prev-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''next-click'',\\r\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:next-click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])])]);\\r\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 分页属性'');\\r\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\r\\n      // 页数\\r\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\r\\n    }\\r\\n    if (scheme['':current-page'']) {\\r\\n      // 当前页\\r\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\r\\n    }\\r\\n    if (scheme['':total'']) {\\r\\n      // 总条数\\r\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"10, 20, 30, 40, 50, 100","formId":126,"renderKey":126.57583360270824,"componentName":"ElPagination126","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}],"isInner":true,"formId":105,"renderKey":105.2287554968143,"componentName":"ElMain105","locked":true}}],"formId":103,"renderKey":103.92120188111664,"componentName":"ElContainer103","locked":true},"direction":"horizontal","v-if":null,"v-show":null}]},"maxFormId":146,"locked":true,"version":13,"code":"<template>\\n  <el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n    <history ref=\\"history\\" :bussObject=\\"curentRow\\"></history>\\n    <edit-form\\n      ref=\\"editForm\\"\\n      v-on:save-finished=\\"getList\\"\\n      v-on:before-load=\\"setLoad\\"\\n      v-on:after-load=\\"resetLoad\\"\\n      :permission=\\"permission\\"\\n    ></edit-form>\\n    <tpl-dialog ref=\\"tplDialog\\" v-on:after-change=\\"afterChangeTpl\\" class=\\"dc-tpl-dialog_ElImport\\"></tpl-dialog>\\n    <el-container direction=\\"horizontal\\" class=\\"dc-el-container_ElContainer\\">\\n      <el-aside width=\\"200px\\" height=\\"60px\\">\\n        <el-row>\\n          <list-tree\\n            ref=\\"listTree\\"\\n            border\\n            v-on:current-change=\\"onChangeCurrentRow\\"\\n            title=\\"项目\\"\\n            field=\\"name\\"\\n            align=\\"left\\"\\n            header-align=\\"center\\"\\n            show-overflow\\n            :tree-config=\\"{\\n              children: '''',\\n              indent: 20,\\n              accordion: false,\\n              line: false,\\n              showIcon: true,\\n              iconOpen: '''',\\n              iconClose: ''''\\n            }\\"\\n            :api=\\"{\\n              baseURL: ''BASE_API'',\\n              method: ''post'',\\n              url: ''project/project/listAll'',\\n              params: [],\\n              data: ''return {\\\\n        params: [\\\\n          {&quot;columnName&quot;:&quot;status&quot;, &quot;queryType&quot;: &quot;=&quot;, &quot;value&quot;: &quot;0&quot;}\\\\n        ],\\\\n      }'',\\n              reqBefore:\\n                ''\\\\nconfig.headers[&quot;X-Token&quot;] = sessionStorage.getItem(&quot;dev_token&quot;)\\\\n    return config'',\\n              reqResponse: ''if (response.data.code == 100) {\\\\n\\\\treturn response.data.data\\\\n}'',\\n              reqError: ''console.error(error)''\\n            }\\"\\n            class=\\"dc-list-tree_ListTree\\"\\n          ></list-tree>\\n        </el-row>\\n      </el-aside>\\n      <el-main>\\n        <el-row>\\n          <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"start\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n            <el-col :span=\\"24\\">\\n              <query-tag\\n                ref=\\"queryTag\\"\\n                v-model=\\"queryEditObject\\"\\n                :moreParm=\\"moreParm\\"\\n                :routerId=\\"$route && $route.meta.routerId\\"\\n                :isQueryConditionPanel=\\"isQueryConditionPanel\\"\\n                v-on:queryTagPanel=\\"onQueryTagPanel\\"\\n                v-on:queryTagClick=\\"onQueryTagClick\\"\\n                v-on:search=\\"onSearch\\"\\n                class=\\"dc-query-tag_ElConditionTag\\"\\n              ></query-tag>\\n            </el-col>\\n            <el-col :span=\\"6\\">\\n              <div style=\\"text-align: left\\">\\n                <el-button-group class=\\"dc-el-button-group_ButtonGroup\\">\\n                  <el-tooltip effect=\\"dark\\" content=\\"搜索\\" placement=\\"top\\">\\n                    <el-button v-on:click=\\"onSearch\\" type=\\"primary\\" icon=\\"el-icon-search\\"></el-button>\\n                  </el-tooltip>\\n                  <el-tooltip effect=\\"dark\\" content=\\"重置\\" placement=\\"top\\">\\n                    <el-button\\n                      v-on:click=\\"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()\\"\\n                      type=\\"primary\\"\\n                      icon=\\"el-icon-refresh-right\\"\\n                    ></el-button>\\n                  </el-tooltip>\\n                  <el-tooltip effect=\\"dark\\" content=\\"更多\\" placement=\\"top\\">\\n                    <el-button\\n                      v-on:click=\\"onQueryConditionPanel(''query'')\\"\\n                      type=\\"primary\\"\\n                      icon=\\"el-icon-d-arrow-right\\"\\n                    ></el-button>\\n                  </el-tooltip>\\n                </el-button-group>\\n              </div>\\n            </el-col>\\n          </el-row>\\n          <query-condition-panel\\n            v-if=\\"isQueryConditionPanel\\"\\n            ref=\\"conditionPanel\\"\\n            :conditionColumns=\\"\\n              metadata.find((item) => {\\n                return item.type == ''main''\\n              }).conditionPanel\\n            \\"\\n            v-model=\\"moreParm\\"\\n            :routerId=\\"$route.meta.routerId\\"\\n            class=\\"dc-query-condition-panel_ElConditionPanel\\"\\n          ></query-condition-panel>\\n          <el-form\\n            ref=\\"queryForm\\"\\n            :model=\\"queryFormData\\"\\n            label-width=\\"100px\\"\\n            v-if=\\"!isQueryConditionPanel\\"\\n            class=\\"dc-el-form_ElQueryForm\\"\\n          >\\n            <el-row>\\n              <el-col :span=\\"6\\">\\n                <el-form-item prop=\\"name\\" label=\\"名称\\" class=\\"dc-el-form-item_SingleInput\\">\\n                  <el-input\\n                    v-model=\\"queryFormData.name\\"\\n                    :maxLength=\\"128\\"\\n                    placeholder=\\"请输入名称\\"\\n                    clearable\\n                    class=\\"dc-el-input_SingleInput\\"\\n                  ></el-input>\\n                </el-form-item>\\n              </el-col>\\n              <el-col :span=\\"6\\">\\n                <el-form-item prop=\\"scheme.id\\" label=\\"后端方案\\" class=\\"dc-el-form-item_SelectInput\\">\\n                  <el-select\\n                    v-model=\\"queryFormData.scheme\\"\\n                    :style=\\"{ width: ''100%'' }\\"\\n                    placeholder=\\"请选择后端方案\\"\\n                    clearable\\n                    value-key=\\"id\\"\\n                    filterable\\n                    class=\\"dc-el-select_SelectInput\\"\\n                  >\\n                    <el-option v-for=\\"(item, index) in schemeOptions\\" :key=\\"index\\" :label=\\"item.name\\" :value=\\"item\\"></el-option>\\n                  </el-select>\\n                </el-form-item>\\n              </el-col>\\n            </el-row>\\n          </el-form>\\n          <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"end\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n            <el-tooltip v-if=\\"tableData.length > 0\\" disabled class=\\"dc-el-tooltip_Button\\">\\n              <el-button icon=\\"el-icon-download\\" v-on:click=\\"onDownload\\" class=\\"dc-el-button_Button\\">下载代码</el-button>\\n            </el-tooltip>\\n            <el-tooltip v-show=\\"permission.add\\" disabled class=\\"dc-el-tooltip_Button\\">\\n              <el-button type=\\"primary\\" icon=\\"el-icon-plus\\" v-on:click=\\"onCreate\\">添加</el-button>\\n            </el-tooltip>\\n          </el-row>\\n          <ux-grid\\n            column-key\\n            ref=\\"table\\"\\n            :data=\\"tableData\\"\\n            border\\n            v-on:sort-change=\\"onSortChange\\"\\n            v-on:header-dragend=\\"onWidthChange($refs.table)\\"\\n            :tree-config=\\"{\\n              children: '''',\\n              indent: 20,\\n              accordion: false,\\n              line: false,\\n              showIcon: true,\\n              iconOpen: '''',\\n              iconClose: ''''\\n            }\\"\\n            class=\\"dc-ux-grid_QueryTable\\"\\n          >\\n            <ux-table-column\\n              :field=\\"tableColumns[''132''].field\\"\\n              :title=\\"tableColumns[''132''].title\\"\\n              :width=\\"tableColumns[''132''].width\\"\\n              :visible=\\"tableColumns[''132''].visible\\"\\n              :params=\\"{ sortId: ''132'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''130''].field\\"\\n              :title=\\"tableColumns[''130''].title\\"\\n              :width=\\"tableColumns[''130''].width\\"\\n              :visible=\\"tableColumns[''130''].visible\\"\\n              :params=\\"{ sortId: ''130'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''131''].field\\"\\n              :title=\\"tableColumns[''131''].title\\"\\n              :width=\\"tableColumns[''131''].width\\"\\n              :visible=\\"tableColumns[''131''].visible\\"\\n              :params=\\"{ sortId: ''131'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''133''].field\\"\\n              :title=\\"tableColumns[''133''].title\\"\\n              :width=\\"tableColumns[''133''].width\\"\\n              :visible=\\"tableColumns[''133''].visible\\"\\n              :params=\\"{ sortId: ''133'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''134''].field\\"\\n              :title=\\"tableColumns[''134''].title\\"\\n              :width=\\"tableColumns[''134''].width\\"\\n              :visible=\\"tableColumns[''134''].visible\\"\\n              :params=\\"{ sortId: ''134'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''135''].field\\"\\n              :title=\\"tableColumns[''135''].title\\"\\n              :width=\\"tableColumns[''135''].width\\"\\n              :visible=\\"tableColumns[''135''].visible\\"\\n              :params=\\"{ sortId: ''135'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''136''].field\\"\\n              :title=\\"tableColumns[''136''].title\\"\\n              :width=\\"tableColumns[''136''].width\\"\\n              :visible=\\"tableColumns[''136''].visible\\"\\n              :params=\\"{ sortId: ''136'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''137''].field\\"\\n              :title=\\"tableColumns[''137''].title\\"\\n              :width=\\"tableColumns[''137''].width\\"\\n              :visible=\\"tableColumns[''137''].visible\\"\\n              :params=\\"{ sortId: ''137'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''138''].field\\"\\n              :title=\\"tableColumns[''138''].title\\"\\n              :width=\\"tableColumns[''138''].width\\"\\n              :visible=\\"tableColumns[''138''].visible\\"\\n              :params=\\"{ sortId: ''138'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"right\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''139''].field\\"\\n              :title=\\"tableColumns[''139''].title\\"\\n              :width=\\"tableColumns[''139''].width\\"\\n              :visible=\\"tableColumns[''139''].visible\\"\\n              :params=\\"{ sortId: ''139'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"180px\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              :field=\\"tableColumns[''140''].field\\"\\n              :title=\\"tableColumns[''140''].title\\"\\n              :width=\\"tableColumns[''140''].width\\"\\n              :visible=\\"tableColumns[''140''].visible\\"\\n              :params=\\"{ sortId: ''140'', summary: false }\\"\\n              tree-node\\n              resizable\\n              min-width=\\"120px\\"\\n              align=\\"right\\"\\n              header-align=\\"center\\"\\n              sortable\\n              show-overflow\\n              class=\\"dc-ux-table-column_ElTableColumn\\"\\n            ></ux-table-column>\\n            <ux-table-column\\n              title=\\"操作\\"\\n              :params=\\"{ sortId: ''119'' }\\"\\n              tree-node\\n              resizable\\n              width=\\"160px\\"\\n              min-width=\\"160px\\"\\n              fixed=\\"right\\"\\n              align=\\"left\\"\\n              header-align=\\"center\\"\\n              class=\\"dc-ux-table-column_ElTableOptColumn\\"\\n            >\\n              <template v-slot:header=\\"scope\\">\\n                <span>操作</span>\\n                <el-popover\\n                  ref=\\"popover\\"\\n                  width=\\"10\\"\\n                  trigger=\\"click\\"\\n                  placement=\\"bottom\\"\\n                  offset=\\"10\\"\\n                  class=\\"dc-el-popover_ElPopover\\"\\n                >\\n                  <view-columns-select\\n                    v-model=\\"tableColumns\\"\\n                    ref=\\"viewColumnsSelect\\"\\n                    v-on:save-column-view=\\"saveColumn($event, ''table'')\\"\\n                    v-on:show-all-column=\\"showAllColumn($event, ''table'')\\"\\n                    v-on:show-default-column=\\"showDefaultColumn(''table'')\\"\\n                    class=\\"dc-view-columns-select_ViewColumnsSelect\\"\\n                  ></view-columns-select>\\n                  <template slot=\\"reference\\">\\n                    <OperationIcon\\n                      type=\\"primary\\"\\n                      content=\\"自定义列\\"\\n                      placement=\\"top\\"\\n                      icon-name=\\"el-icon-tickets\\"\\n                    ></OperationIcon>\\n                  </template>\\n                </el-popover>\\n                <OperationIcon\\n                  v-on:click=\\"onExport(tableData)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.export\\"\\n                  content=\\"导出excel文件\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-download\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n              </template>\\n              <template slot-scope=\\"scope\\">\\n                <OperationIcon\\n                  v-on:click=\\"onView(scope)\\"\\n                  type=\\"info\\"\\n                  v-show=\\"permission.view\\"\\n                  content=\\"查看\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-view\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onEdit(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.edit\\"\\n                  content=\\"编辑\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-edit\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onDownloadScheme(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.edit\\"\\n                  content=\\"下载代码\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-download\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onCopy(scope)\\"\\n                  type=\\"primary\\"\\n                  v-show=\\"permission.add\\"\\n                  content=\\"复制\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-document\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onDelete(scope)\\"\\n                  type=\\"danger\\"\\n                  v-show=\\"permission.remove\\"\\n                  content=\\"删除\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-delete\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n                <OperationIcon\\n                  v-on:click=\\"onShowHistory(scope)\\"\\n                  type=\\"info\\"\\n                  v-show=\\"permission.view\\"\\n                  content=\\"历史记录\\"\\n                  placement=\\"top\\"\\n                  icon-name=\\"el-icon-info\\"\\n                  class=\\"dc-OperationIcon_IconButton\\"\\n                ></OperationIcon>\\n              </template>\\n            </ux-table-column>\\n          </ux-grid>\\n          <el-pagination\\n            :total=\\"tableDataTotal\\"\\n            :page-size=\\"search.limit\\"\\n            background\\n            :current-page=\\"tableDataPage\\"\\n            :page-sizes=\\"[10, 20, 30, 40, 50, 100]\\"\\n            layout=\\"total, sizes, prev, pager, next, jumper\\"\\n            v-on:size-change=\\"onSizeChange\\"\\n            v-on:current-change=\\"onCurrentChange\\"\\n            class=\\"dc-el-pagination_ElPagination\\"\\n          ></el-pagination>\\n        </el-row>\\n      </el-main>\\n    </el-container>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\nimport { listDcMobileSchemePage, deleteDcMobileScheme } from ''@/api/dc/dcMobileScheme''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n/** 根据用户界面配置import组件 开始 */\\nimport History from ''@/views/components/history''\\nimport EditForm from ''./form''\\nimport TplDialog from ''./tplDialog''\\nimport QueryTag from ''@/views/components/queryTag''\\nimport QueryConditionPanel from ''@/views/components/queryConditionPanel''\\nimport { listDcSchemeAll } from ''@/api/dc/dcScheme.js''\\nimport ViewColumnsSelect from ''@/views/components/DcViewColumnsSelect''\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { downMobile, downMobileScheme } from ''@/api/dc/dcCode''\\nimport { download } from ''@/utils/download''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\n    EditForm,\\n    TplDialog,\\n    QueryTag,\\n    QueryConditionPanel,\\n    ViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n      /** 根据用户界面配置生成data数据 开始 */\\n      parentTable: {},\\n      queryFormData: {\\n        name: '''', // 名称\\n        scheme: {\\n          id: null,\\n          name: null\\n        }\\n      },\\n      tableData: [],\\n      // 查询表格列头\\n      tableColumns: {\\n        132: {\\n          title: ''名称'',\\n          field: ''name'',\\n          visible: true,\\n          order: 0\\n        },\\n        130: {\\n          title: ''项目.状态'',\\n          field: ''project.status'',\\n          visible: false,\\n          order: 1\\n        },\\n        131: {\\n          title: ''项目.名称'',\\n          field: ''project.name'',\\n          visible: false,\\n          order: 2\\n        },\\n        133: {\\n          title: ''后端方案'',\\n          field: ''scheme.name'',\\n          visible: true,\\n          order: 3\\n        },\\n        134: {\\n          title: ''模板'',\\n          field: ''template.name'',\\n          visible: true,\\n          order: 4\\n        },\\n        135: {\\n          title: ''模板json'',\\n          field: ''templateJson'',\\n          visible: false,\\n          order: 5\\n        },\\n        136: {\\n          title: ''备注信息'',\\n          field: ''remarks'',\\n          visible: false,\\n          order: 6\\n        },\\n        137: {\\n          title: ''创建者'',\\n          field: ''createBy'',\\n          visible: false,\\n          order: 7\\n        },\\n        138: {\\n          title: ''创建时间'',\\n          field: ''createDate'',\\n          visible: false,\\n          order: 8\\n        },\\n        139: {\\n          title: ''更新者'',\\n          field: ''updateBy'',\\n          visible: false,\\n          order: 9\\n        },\\n        140: {\\n          title: ''更新时间'',\\n          field: ''updateDate'',\\n          visible: true,\\n          order: 10\\n        },\\n        119: {\\n          title: ''操作'',\\n          width: ''160px'',\\n          visible: true,\\n          order: 11\\n        }\\n      },\\n      // 分页属性\\n      tableDataPage: 1,\\n      tableDataTotal: 0,\\n      // 选项变量\\n      // 后端方案选项\\n      schemeOptions: [],\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 13,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''', // 排序字段名\\n        order: '''' // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1440433057862000819'',\\n      schemeId: ''1440433057862000817''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n\\n      if (validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      this.search.params.push({\\n        columnName: ''project_id'',\\n        queryType: ''='',\\n        value: this.parentTable.id\\n      })\\n\\n      if (this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        this.search.params.push({\\n          columnName: ''name'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''scheme_id'',\\n          queryType: ''='',\\n\\n          value: !validatenull(this.queryFormData.scheme.id) ? this.queryFormData.scheme.id : null\\n        })\\n      }\\n      // 数据权限: 移动端方案dc_mobile_scheme\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      listDcMobileSchemePage(this.search)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.tableDataTotal = responseData.data.total\\n            this.tableData = responseData.data.rows ? responseData.data.rows : []\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onSearch() {\\n      if (this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate((valid) => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.initOptions(this.queryModel)\\n      this.setLoad()\\n      listResourcePermission(this.$route.meta.routerId)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.permission.view = responseData.data.find((item) => {\\n              return item.permission === ''dcMobileScheme:read''\\n            })\\n            this.permission.export = responseData.data.find((item) => {\\n              return item.permission === ''dcMobileScheme:export''\\n            })\\n\\n            this.permission.add = responseData.data.find((item) => {\\n              return item.permission === ''dcMobileScheme:create''\\n            })\\n            this.permission.edit = responseData.data.find((item) => {\\n              return item.permission === ''dcMobileScheme:update''\\n            })\\n            this.permission.remove = responseData.data.find((item) => {\\n              return item.permission === ''dcMobileScheme:delete''\\n            })\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate() {\\n      if (validatenull(this.parentTable)) {\\n        this.$alert(''请选择左侧列表'', ''提示'', {\\n          confirmButtonText: ''确定'',\\n          type: ''info''\\n        })\\n        return\\n      }\\n      let row = {\\n        project: {\\n          id: this.parentTable.id,\\n\\n          name: this.parentTable.name,\\n\\n          status: this.parentTable.status,\\n\\n          multil_ten: this.parentTable.multil_ten\\n        }\\n      }\\n      this.$refs.tplDialog.$emit(''selectTemplate'', row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    afterChangeTpl(clientTpl, dbModel) {\\n      const parant = {\\n        project: this.parentTable\\n      }\\n      this.$refs.editForm.$emit(''openAddDialog'', parant, clientTpl, dbModel)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      })\\n        .then(() => {\\n          this.setLoad()\\n          deleteDcMobileScheme(scope.row)\\n            .then((responseData) => {\\n              if (responseData.code == 100) {\\n                this.getList()\\n                this.showMessage({\\n                  type: ''success'',\\n                  msg: ''删除成功''\\n                })\\n              } else {\\n                this.showMessage(responseData)\\n              }\\n              this.resetLoad()\\n            })\\n            .catch((error) => {\\n              this.outputError(error)\\n            })\\n        })\\n        .catch(() => {})\\n    },\\n\\n    onChangeCurrentRow(currentRow, oldCurrentRow) {\\n      if (currentRow != oldCurrentRow) {\\n        this.parentTable = currentRow\\n        this.initOptions(this.queryModel)\\n        this.onSearch()\\n      }\\n    },\\n    onSortChange(orderby) {\\n      if (validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n\\n    listSchemeOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [])\\n\\n      // 数据权限: 低代码-代码方案dc_scheme\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1339746483134570552'')\\n\\n      listDcSchemeAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.schemeOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n      this.listSchemeOptions()\\n    },\\n    onDownload() {\\n      this.setLoad()\\n      downMobile(this.parentTable.id)\\n        .then((responseData) => {\\n          download(responseData, this.parentTable.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onDownloadScheme(scope) {\\n      this.setLoad()\\n      downMobileScheme(scope.row.id)\\n        .then((responseData) => {\\n          download(responseData, this.parentTable.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    }\\n  },\\n  watch: {},\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/dc//dcMobileScheme","fileName":"form.vue","source":"<template>\\n  <el-row class=\\"dc-container\\">\\n    <tpl-dialog ref=\\"tplDialog\\" v-on:after-change=\\"afterChangeTpl\\" class=\\"dc-tpl-dialog_ElImport\\"></tpl-dialog>\\n    <el-dialog\\n      v-on:open=\\"onDialogOpen\\"\\n      v-on:close=\\"onDialogClose\\"\\n      v-loading=\\"loading\\"\\n      width=\\"100%\\"\\n      fullscreen\\n      :title=\\"dialogProps.title\\"\\n      :visible.sync=\\"dialogProps.visible\\"\\n      :show-close=\\"false\\"\\n      :close-on-click-modal=\\"false\\"\\n      class=\\"code-desinge-dialog\\"\\n    >\\n      <div slot=\\"title\\" class=\\"dialog-header\\">\\n        <el-form ref=\\"editForm\\" :model=\\"editFormData\\" label-width=\\"100px\\" class=\\"edit-form\\">\\n          <el-row>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"name\\"\\n                label=\\"标题\\"\\n                :rules=\\"[{ required: true, message: ''标题不能为空'', trigger: ''blur'' }]\\"\\n                class=\\"dc-el-form-item_SingleInput\\"\\n              >\\n                <el-input\\n                  v-model=\\"editFormData.name\\"\\n                  :maxLength=\\"128\\"\\n                  placeholder=\\"请输入名称\\"\\n                  clearable\\n                  :disabled=\\"action == ''view''\\"\\n                  class=\\"dc-el-input_SingleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"12\\">\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"success\\" v-on:click=\\"openTemplateDialog\\" class=\\"dc-el-button_Button\\">更换模板</el-button>\\n              </el-tooltip>\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"primary\\" v-on:click=\\"generate()\\" :disabled=\\"isDesignerDisabled\\" class=\\"dc-el-button_Button\\">\\n                  下载代码\\n                </el-button>\\n              </el-tooltip>\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"primary\\" v-on:click=\\"onSubmit\\" :disabled=\\"!isDesignerDisabled\\" class=\\"dc-el-button_Button\\">\\n                  保存\\n                </el-button>\\n              </el-tooltip>\\n              <el-tooltip disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button v-on:click=\\"dialogProps.visible = false\\" class=\\"dc-el-button_Button\\">关闭</el-button>\\n              </el-tooltip>\\n            </el-col>\\n          </el-row>\\n        </el-form>\\n      </div>\\n      <div class=\\"code-generator-container\\" :class=\\"settings.size\\" v-if=\\"editFormData.scheme.id && dbModel\\">\\n        <MDesigner\\n          ref=\\"designer\\"\\n          v-if=\\"jsonTpl && jsonTpl.pages && jsonTpl.pages.length > 0 && dbModel\\"\\n          :style=\\"colorObject\\"\\n          v-model=\\"jsonTpl\\"\\n          :dbModel=\\"dbModel\\"\\n          :tplMode=\\"false\\"\\n          class=\\"dc-Designer_ElImport\\"\\n        ></MDesigner>\\n      </div>\\n    </el-dialog>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { getExtensionName } from ''@/utils/file''\\nimport { downMobileScheme } from ''@/api/dc/dcCode''\\nimport { getDcSchemeById } from ''@/api/dc/dcScheme''\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { constructDbModel } from ''../utils''\\nimport { download } from ''@/utils/download''\\nconst renderCode = window[''vue-m-codegenerator''].renderCode\\nconst prettify = window[''vue-m-codegenerator''].prettify\\nconst stringifyTemplate = window[''vue-m-codegenerator''].stringifyTemplate\\nconst parseTemplate = window[''vue-m-codegenerator''].parseTemplate\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      jsonTpl: null, // 当前编辑的模板json对象\\n      dbModel: null,\\n      isDesignerDisabled: false, // 生成代码按钮\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      tplUnwatch: null,\\n      bizUnwatch: null,\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {\\n    ...Vuex.mapGetters([''settings'']),\\n    colorObject() {\\n      return {\\n        ''--active-color'': this.settings.theme\\n      }\\n    }\\n  },\\n  methods: {\\n    generate() {\\n      // 生成代码\\n      this.setLoad()\\n      downMobileScheme(this.editFormData.id).then((responseData) => {\\n        download(responseData, this.editFormData.project.name, ''application/zip;'')\\n        this.resetLoad()\\n      })\\n      .catch((error) => {\\n        this.outputError(error)\\n      })\\n    },\\n    openTemplateDialog() {\\n      this.$refs.tplDialog.$emit(\\n        ''switchTemplate'',\\n        {\\n          template: this.editFormData.template,\\n          scheme: this.editFormData.scheme\\n        },\\n        this.dbModel\\n      )\\n    },\\n\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n      if (!validatenull(this.jsonTpl) && !validatenull(this.jsonTpl.pages)) {\\n        let version = 0\\n        if (this.jsonTpl.hasOwnProperty(''version'')) {\\n          // 已存在版本号\\n          version = this.jsonTpl.version\\n        }\\n        this.$set(this.jsonTpl, ''version'', version + 1)\\n        for (let i = 0; i < this.jsonTpl.pages.length; i++) {\\n          this.$set(this.jsonTpl.pages[i], ''version'', version + 1)\\n          const page = this.jsonTpl.pages[i]\\n          let code = renderCode(page.source, {\\n            element:\\n              this.jsonTpl.pages[i].fileName == ''metadata.js''\\n                ? this.jsonTpl.pages.find((item) => item.fileName == ''index.vue'')\\n                : page,\\n            ...this.dbModel\\n          })\\n          code = prettify(getExtensionName(page.fileName), code)\\n          this.$set(this.jsonTpl.pages[i], ''code'', code)\\n        }\\n      }\\n      this.editFormData.templateJson = stringifyTemplate(this.jsonTpl)\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.editFormData.id = responseData.data.id\\n          this.editFormData.updateDate = responseData.data.updateDate\\n          this.isDesignerDisabled = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n          this.jsonTpl = parseTemplate(form.templateJson)\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.resetWatch()\\n      this.$emit(''save-finished'')\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initDbModel(backScheme) {\\n      this.dbModel = null\\n      if (!validatenull(backScheme) && !validatenull(backScheme.id)) {\\n        this.setLoad()\\n        getDcSchemeById(backScheme.id)\\n          .then((responseData) => {\\n            if (responseData.code == 100) {\\n              let schema = responseData.data\\n              if (!validatenull(schema.dcTableList)) {\\n                for (let i = 0; i < schema.dcTableList.length; i++) {\\n                  for (let j = 0; j < schema.dcTableList[i].columnList.length; j++) {\\n                    const childFields = schema.dcTableList[i].columnList[j].childFields\\n                    this.$set(\\n                      schema.dcTableList[i].columnList[j],\\n                      ''childFields'',\\n                      !validatenull(childFields) ? JSON.parse(childFields) : []\\n                    )\\n                  }\\n                }\\n              }\\n              this.dbModel = constructDbModel(schema)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      }\\n    },\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        name: '''', // 名称\\n        scheme: {\\n          // 后端方案\\n          id: null,\\n          name: null\\n        },\\n        template: {\\n          // 模板\\n          id: null,\\n          name: null\\n        },\\n        templateJson: '''', // 模板json\\n        remarks: '''' // 备注信息\\n      }\\n    },\\n    setWatch() {\\n      this.$nextTick(() => {\\n        this.tplUnwatch = this.$watch(\\n          ''jsonTpl'',\\n          function (val, oldVal) {\\n            this.isDesignerDisabled = true\\n          },\\n          {\\n            deep: true\\n          }\\n        )\\n        this.bizUnwatch = this.$watch(\\n          ''editFormData.name'',\\n          function (val, oldVal) {\\n            this.isDesignerDisabled = true\\n          },\\n          {\\n            deep: true\\n          }\\n        )\\n      })\\n    },\\n    resetWatch() {\\n      this.tplUnwatch && this.tplUnwatch()\\n      this.tplUnwatch = null\\n\\n      this.bizUnwatch && this.bizUnwatch()\\n      this.bizUnwatch = null\\n    },\\n    afterChangeTpl(clientTpl, dbModel) {\\n      let version = this.jsonTpl.version\\n      this.jsonTpl = parseTemplate(clientTpl.template.json)\\n      this.$set(this.jsonTpl, ''version'', version)\\n      this.editFormData.templateJson = clientTpl.template.json // 模板JSON\\n      this.editFormData.template = clientTpl.template // 所选模板对象\\n      this.editFormData.scheme = clientTpl.scheme\\n\\n      this.dbModel = dbModel\\n\\n      // 执行模板初始化JS方法\\n      this.$nextTick(() => {\\n        if (this.$refs.designer) {\\n          this.$refs.designer.$emit(''doInitJs'')\\n        }\\n      })\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.initDbModel(this.editFormData.scheme)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = false\\n        this.initDbModel(this.editFormData.scheme)\\n        this.setWatch()\\n      })\\n      this.$on(''openAddDialog'', function(parent, clientTpl, dbModel) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {...this.initEditData(), ...parent}\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = true // 不能生成代码\\n        this.jsonTpl = parseTemplate(clientTpl.template.json) // 模板JSON转为对象\\n        this.$set(this.jsonTpl, ''version'', 1)\\n        this.editFormData.templateJson = clientTpl.template.json // 模板JSON\\n        this.editFormData.template = clientTpl.template // 所选模板对象\\n        this.editFormData.scheme = clientTpl.scheme // 所选后端方案\\n        this.editFormData.name = clientTpl.scheme.name\\n        this.dbModel = dbModel\\n        this.setWatch()\\n        // 执行模板初始化JS方法\\n        this.$nextTick(() => {\\n          this.$refs.designer.$emit(''doInitJs'')\\n        })\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n        //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = true // 不能生成代码\\n        this.$set(this.jsonTpl, ''version'', 1)\\n        this.initDbModel(this.editFormData.scheme)\\n        this.setWatch()\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n<style scoped lang=\\"scss\\">\\n/* var(--active-color) */\\n.item-empty-info {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -10px;\\n  margin-left: -63px;\\n  text-align: center;\\n  font-size: 14px;\\n  color: #ccb1ea;\\n  z-index: 2000;\\n}\\n\\n.code-generator-container {\\n  /deep/ .page-opt .drawing-item-plus {\\n    background-color: var(--active-color);\\n  }\\n\\n  /deep/ .right-board {\\n    .document-link {\\n      background-color: var(--active-color);\\n    }\\n  }\\n\\n  /deep/ .drawing-row-item.active-from-item,\\n  /deep/ .drawing-row-item .active-from-item {\\n    border-color: var(--active-color);\\n    outline-color: var(--active-color);\\n  }\\n\\n  /deep/ .drawing-row-item .drawing-item-btns > .drawing-item-icon,\\n  /deep/ .drawing-item .drawing-item-btns > .drawing-item-icon {\\n    background-color: var(--active-color) !important;\\n    border-color: var(--active-color) !important;\\n  }\\n\\n  /deep/ .drawing-item:hover,\\n  /deep/ .drawing-row-item:hover {\\n    outline-color: var(--active-color);\\n  }\\n}\\n</style>\\n\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"tpl-dialog","tagIcon":"import","label":"引入组件","component":"TplDialog","from":"./tplDialog","methousList":[{"name":"after-changeafterChangeTpl","value":"afterChangeTpl"}],"attrsList":[],"formId":115,"renderKey":115.84778115056884,"componentName":"ElImport115"},"ref":"tplDialog","v-if":null,"v-show":null},{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function editFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名(ref)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单名\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"label\\": \\"数据对象\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单尺寸\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签对齐\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签宽度\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"行内提示\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''inline-message''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this3 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this3.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":117,"renderKey":117.80485779979222,"componentName":"SingleInput117"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入名称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"modelExp":"`${parent[\\":model\\"]}${scheme.__config__.childClassName ? \\".\\" + scheme.__config__.childClassName + \\"List[0]\\" : \\"\\"}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.childClassName ? scheme.__config__.childClassName + \\"List[0].\\" : \\"\\"}${scheme.__config__.children[0].__vModel__}\\"`","id":"formItemE","span":12,"field":{"id":"1440433057862000840","name":"name","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"名称","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","project":{"id":"","name":"","status":"0","cloudName":"","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0,"dataLength":128,"simpleJavaType":"String","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["Length(min=1, max=128, message=\\"名称长度必须介于 1 和 128 之间\\")"],"isType":false},"childClassName":"","regList":[],"propertyLayout":"function itemSingleInputLayout(h, hasOneZOne) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field, group) {\\r\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\r\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.id,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item,\\r\\n          \\"disabled\\": _this.handelDisabled(item)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            if (!_this.handelDisabled(item)) {\\r\\n              onChangeModel.call(_this, item, group);\\r\\n            }\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [h(\\"span\\", {\\r\\n        \\"style\\": \\"padding-left: 6px;\\"\\r\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n        \\"style\\": \\"float: right;\\",\\r\\n        \\"attrs\\": {\\r\\n          \\"className\\": \\"filed-tip\\"\\r\\n        }\\r\\n      }, [item.isType && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"danger\\"\\r\\n        }\\r\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"warning\\"\\r\\n        }\\r\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\r\\n      \\"parent\\": this.activeData,\\r\\n      \\"hasOneZOne\\": hasOneZOne\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":116,"renderKey":116.53300107641208,"componentName":"SingleInput116"},"label":"标题","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"标题不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":119,"renderKey":119.19990610594122,"componentName":"Button119"},"__slot__":{"default":"更换模板"},"type":"success","icon":"","size":null,"v-on:click":"openTemplateDialog",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":118,"renderKey":118.76004744775581,"componentName":"Button118"},"v-if":"action != \\"view\\"","v-show":null,"disabled":true,"effect":"","content":"","placement":""},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":121,"renderKey":121.04714812043757,"componentName":"Button121"},"__slot__":{"default":"下载代码"},"type":"warning","icon":"","size":null,"v-on:click":"generate()",":disabled":"isDesignerDisabled","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":120,"renderKey":120.1223137017774,"componentName":"Button120"},"v-if":"action != \\"view\\"","v-show":null,"disabled":true,"effect":"","content":"","placement":""},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":123,"renderKey":123.38463410576206,"componentName":"Button123"},"__slot__":{"default":"保存"},"type":"primary","icon":"","size":null,"v-on:click":"onSubmit",":disabled":"!isDesignerDisabled","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":122,"renderKey":122.04691724779867,"componentName":"Button122"},"v-if":"action != \\"view\\"","v-show":null,"disabled":true,"effect":"","content":"","placement":""},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"btn","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      default: function _default(h, conf, key) {\\r\\n        return conf.__slot__[key];\\r\\n      }\\r\\n    };\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    });\\r\\n    return elNode;\\r\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","elName":"Button","tag":"el-button","tagIcon":"btn","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":125,"renderKey":125.65453053499849,"componentName":"Button125"},"__slot__":{"default":"关闭"},"type":"","icon":"","size":null,"v-on:click":"dialogProps.visible = false",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\r\\n  var _this = this;\\r\\n  var isToolTip = false;\\r\\n  isToolTip = this.activeData.disabled === ''undefined'';\\r\\n  function onTooltipChange(val) {\\r\\n    this.activeData.disabled = val ? ''undefined'' : true;\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮文字\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮图标\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].icon,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"按钮类型\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].type,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"primary\\",\\r\\n      \\"value\\": \\"primary\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"success\\",\\r\\n      \\"value\\": \\"success\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"warning\\",\\r\\n      \\"value\\": \\"warning\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"danger\\",\\r\\n      \\"value\\": \\"danger\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"info\\",\\r\\n      \\"value\\": \\"info\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"text\\",\\r\\n      \\"value\\": \\"text\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认\\",\\r\\n      \\"value\\": \\"\\"\\r\\n    }\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"提示\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: isToolTip,\\r\\n      callback: function callback($$v) {\\r\\n        isToolTip = $$v;\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onTooltipChange.bind(this)\\r\\n    }\\r\\n  })]), isToolTip && h(\\"ToolTip\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"点击事件\\",\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","formId":124,"renderKey":124.90686954050145,"componentName":"Button124"},"v-if":null,"v-show":null,"disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.51399455579765,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"Designer","tagIcon":"import","label":"引入组件","component":"Designer","from":"","methousList":[{"name":"","value":""}],"attrsList":[{"name":":style","value":"colorObject"},{"name":"v-model","value":"jsonTpl"},{"name":":dbModel","value":"dbModel"},{"name":":tplMode","value":"false"}],"formId":126,"renderKey":126.34105420337116,"componentName":"ElImport126"},"ref":"designer","v-if":"jsonTpl && jsonTpl.pages && jsonTpl.pages.length > 0 && dbModel","v-show":null}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.57362801348329,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"移动端方案","v-loading":"loading","width":"","fullscreen":true}]},"maxFormId":126,"locked":true,"version":13,"code":"<template>\\n  <el-row class=\\"dc-container\\">\\n    <tpl-dialog ref=\\"tplDialog\\" v-on:after-change=\\"afterChangeTpl\\" class=\\"dc-tpl-dialog_ElImport\\"></tpl-dialog>\\n    <el-dialog\\n      v-on:open=\\"onDialogOpen\\"\\n      v-on:close=\\"onDialogClose\\"\\n      v-loading=\\"loading\\"\\n      width=\\"100%\\"\\n      fullscreen\\n      :title=\\"dialogProps.title\\"\\n      :visible.sync=\\"dialogProps.visible\\"\\n      :show-close=\\"false\\"\\n      :close-on-click-modal=\\"false\\"\\n      class=\\"code-desinge-dialog\\"\\n    >\\n      <div slot=\\"title\\" class=\\"dialog-header\\">\\n        <el-form ref=\\"editForm\\" :model=\\"editFormData\\" label-width=\\"100px\\" class=\\"edit-form\\">\\n          <el-row>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"name\\"\\n                label=\\"标题\\"\\n                :rules=\\"[{ required: true, message: ''标题不能为空'', trigger: ''blur'' }]\\"\\n                class=\\"dc-el-form-item_SingleInput\\"\\n              >\\n                <el-input\\n                  v-model=\\"editFormData.name\\"\\n                  :maxLength=\\"128\\"\\n                  placeholder=\\"请输入名称\\"\\n                  clearable\\n                  :disabled=\\"action == ''view''\\"\\n                  class=\\"dc-el-input_SingleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"12\\">\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"success\\" v-on:click=\\"openTemplateDialog\\" class=\\"dc-el-button_Button\\">更换模板</el-button>\\n              </el-tooltip>\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"primary\\" v-on:click=\\"generate()\\" :disabled=\\"isDesignerDisabled\\" class=\\"dc-el-button_Button\\">\\n                  下载代码\\n                </el-button>\\n              </el-tooltip>\\n              <el-tooltip v-if=\\"action != ''view''\\" disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button type=\\"primary\\" v-on:click=\\"onSubmit\\" :disabled=\\"!isDesignerDisabled\\" class=\\"dc-el-button_Button\\">\\n                  保存\\n                </el-button>\\n              </el-tooltip>\\n              <el-tooltip disabled class=\\"dc-el-tooltip_Button\\">\\n                <el-button v-on:click=\\"dialogProps.visible = false\\" class=\\"dc-el-button_Button\\">关闭</el-button>\\n              </el-tooltip>\\n            </el-col>\\n          </el-row>\\n        </el-form>\\n      </div>\\n      <div class=\\"code-generator-container\\" :class=\\"settings.size\\" v-if=\\"editFormData.scheme.id && dbModel\\">\\n        <MDesigner\\n          ref=\\"designer\\"\\n          v-if=\\"jsonTpl && jsonTpl.pages && jsonTpl.pages.length > 0 && dbModel\\"\\n          :style=\\"colorObject\\"\\n          v-model=\\"jsonTpl\\"\\n          :dbModel=\\"dbModel\\"\\n          :tplMode=\\"false\\"\\n          class=\\"dc-Designer_ElImport\\"\\n        ></MDesigner>\\n      </div>\\n    </el-dialog>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\nimport TplDialog from ''./tplDialog''\\n/** 根据用户界面配置import组件 结束 */\\nimport { getExtensionName } from ''@/utils/file''\\nimport { downMobileScheme } from ''@/api/dc/dcCode''\\nimport { getDcSchemeById } from ''@/api/dc/dcScheme''\\nimport { getDcMobileSchemeById, saveDcMobileScheme } from ''@/api/dc/dcMobileScheme''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { constructDbModel } from ''../utils''\\nimport { download } from ''@/utils/download''\\nconst renderCode = window[''vue-m-codegenerator''].renderCode\\nconst prettify = window[''vue-m-codegenerator''].prettify\\nconst stringifyTemplate = window[''vue-m-codegenerator''].stringifyTemplate\\nconst parseTemplate = window[''vue-m-codegenerator''].parseTemplate\\nexport default {\\n  extends: BaseUI,\\n  name: ''dcMobileScheme-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    TplDialog,\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      jsonTpl: null, // 当前编辑的模板json对象\\n      dbModel: null,\\n      isDesignerDisabled: false, // 生成代码按钮\\n      // 对话框属性变量\\n      dialogProps: {\\n        visible: false,\\n        title: ''移动端方案''\\n      },\\n      dialogTitle: ''移动端方案'',\\n      // 选项变量\\n\\n      /** 根据用户界面配置生成data数据 结束 */\\n      tplUnwatch: null,\\n      bizUnwatch: null,\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {\\n    ...Vuex.mapGetters([''settings'']),\\n    colorObject() {\\n      return {\\n        ''--active-color'': this.settings.theme\\n      }\\n    }\\n  },\\n  methods: {\\n    generate() {\\n      // 生成代码\\n      this.setLoad()\\n      downMobileScheme(this.editFormData.id)\\n        .then((responseData) => {\\n          download(responseData, this.editFormData.project.name, ''application/zip;'')\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    openTemplateDialog() {\\n      this.$refs.tplDialog.$emit(\\n        ''switchTemplate'',\\n        {\\n          template: this.editFormData.template,\\n          scheme: this.editFormData.scheme\\n        },\\n        this.dbModel\\n      )\\n    },\\n\\n    onSubmit() {\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      })\\n    },\\n    doSave() {\\n      this.setLoad()\\n      if (!validatenull(this.jsonTpl) && !validatenull(this.jsonTpl.pages)) {\\n        let version = 0\\n        if (this.jsonTpl.hasOwnProperty(''version'')) {\\n          // 已存在版本号\\n          version = this.jsonTpl.version\\n        }\\n        this.$set(this.jsonTpl, ''version'', version + 1)\\n        for (let i = 0; i < this.jsonTpl.pages.length; i++) {\\n          this.$set(this.jsonTpl.pages[i], ''version'', version + 1)\\n          const page = this.jsonTpl.pages[i]\\n          let code = renderCode(page.source, {\\n            element:\\n              this.jsonTpl.pages[i].fileName == ''metadata.js''\\n                ? this.jsonTpl.pages.find((item) => item.fileName == ''index.vue'')\\n                : page,\\n            ...this.dbModel\\n          })\\n          code = prettify(getExtensionName(page.fileName), code)\\n          this.$set(this.jsonTpl.pages[i], ''code'', code)\\n        }\\n      }\\n      this.editFormData.templateJson = stringifyTemplate(this.jsonTpl)\\n\\n      saveDcMobileScheme(this.editFormData)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.editFormData.id = responseData.data.id\\n            this.editFormData.updateDate = responseData.data.updateDate\\n            this.isDesignerDisabled = false\\n            this.showMessage({\\n              type: ''success'',\\n              msg: ''保存成功''\\n            })\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n        getDcMobileSchemeById(id)\\n          .then((responseData) => {\\n            let form = {}\\n            if (responseData.code == 100) {\\n              form = responseData.data\\n              this.jsonTpl = parseTemplate(form.templateJson)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n            resolve(form)\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      })\\n    },\\n    onDialogClose() {\\n      this.resetWatch()\\n      this.$emit(''save-finished'')\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n\\n    initDbModel(backScheme) {\\n      this.dbModel = null\\n      if (!validatenull(backScheme) && !validatenull(backScheme.id)) {\\n        this.setLoad()\\n        getDcSchemeById(backScheme.id)\\n          .then((responseData) => {\\n            if (responseData.code == 100) {\\n              let schema = responseData.data\\n              if (!validatenull(schema.dcTableList)) {\\n                for (let i = 0; i < schema.dcTableList.length; i++) {\\n                  for (let j = 0; j < schema.dcTableList[i].columnList.length; j++) {\\n                    const childFields = schema.dcTableList[i].columnList[j].childFields\\n                    this.$set(\\n                      schema.dcTableList[i].columnList[j],\\n                      ''childFields'',\\n                      !validatenull(childFields) ? JSON.parse(childFields) : []\\n                    )\\n                  }\\n                }\\n              }\\n              this.dbModel = constructDbModel(schema)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      }\\n    },\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    },\\n    initEditData(This) {\\n      return {\\n        name: '''', // 名称\\n        scheme: {\\n          // 后端方案\\n          id: null,\\n          name: null\\n        },\\n        template: {\\n          // 模板\\n          id: null,\\n          name: null\\n        },\\n        templateJson: '''', // 模板json\\n        remarks: '''' // 备注信息\\n      }\\n    },\\n    setWatch() {\\n      this.$nextTick(() => {\\n        this.tplUnwatch = this.$watch(\\n          ''jsonTpl'',\\n          function (val, oldVal) {\\n            this.isDesignerDisabled = true\\n          },\\n          {\\n            deep: true\\n          }\\n        )\\n        this.bizUnwatch = this.$watch(\\n          ''editFormData.name'',\\n          function (val, oldVal) {\\n            this.isDesignerDisabled = true\\n          },\\n          {\\n            deep: true\\n          }\\n        )\\n      })\\n    },\\n    resetWatch() {\\n      this.tplUnwatch && this.tplUnwatch()\\n      this.tplUnwatch = null\\n\\n      this.bizUnwatch && this.bizUnwatch()\\n      this.bizUnwatch = null\\n    },\\n    afterChangeTpl(clientTpl, dbModel) {\\n      let version = this.jsonTpl.version\\n      this.jsonTpl = parseTemplate(clientTpl.template.json)\\n      this.$set(this.jsonTpl, ''version'', version)\\n      this.editFormData.templateJson = clientTpl.template.json // 模板JSON\\n      this.editFormData.template = clientTpl.template // 所选模板对象\\n      this.editFormData.scheme = clientTpl.scheme\\n\\n      this.dbModel = dbModel\\n\\n      // 执行模板初始化JS方法\\n      this.$nextTick(() => {\\n        if (this.$refs.designer) {\\n          this.$refs.designer.$emit(''doInitJs'')\\n        }\\n      })\\n    }\\n  },\\n  watch: {},\\n  mounted: function () {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function (id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.initDbModel(this.editFormData.scheme)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function (id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = false\\n        this.initDbModel(this.editFormData.scheme)\\n        this.setWatch()\\n      })\\n      this.$on(''openAddDialog'', function (parent, clientTpl, dbModel) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...parent\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = true // 不能生成代码\\n        this.jsonTpl = parseTemplate(clientTpl.template.json) // 模板JSON转为对象\\n        this.$set(this.jsonTpl, ''version'', 1)\\n        this.editFormData.templateJson = clientTpl.template.json // 模板JSON\\n        this.editFormData.template = clientTpl.template // 所选模板对象\\n        this.editFormData.scheme = clientTpl.scheme // 所选后端方案\\n        this.editFormData.name = clientTpl.scheme.name\\n        this.dbModel = dbModel\\n        this.setWatch()\\n        // 执行模板初始化JS方法\\n        this.$nextTick(() => {\\n          this.$refs.designer.$emit(''doInitJs'')\\n        })\\n      })\\n      this.$on(''openCopyDialog'', async function (id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null //把id设置为空，添加一个新的\\n\\n        this.dialogProps.visible = true\\n        this.isDesignerDisabled = true // 不能生成代码\\n        this.$set(this.jsonTpl, ''version'', 1)\\n        this.initDbModel(this.editFormData.scheme)\\n        this.setWatch()\\n      })\\n    })\\n  }\\n}\\n</script>\\n<style scoped lang=\\"scss\\">\\n/* var(--active-color) */\\n.item-empty-info {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -10px;\\n  margin-left: -63px;\\n  text-align: center;\\n  font-size: 14px;\\n  color: #ccb1ea;\\n  z-index: 2000;\\n}\\n\\n.code-generator-container {\\n  /deep/ .page-opt .drawing-item-plus {\\n    background-color: var(--active-color);\\n  }\\n\\n  /deep/ .right-board {\\n    .document-link {\\n      background-color: var(--active-color);\\n    }\\n  }\\n\\n  /deep/ .drawing-row-item.active-from-item,\\n  /deep/ .drawing-row-item .active-from-item {\\n    border-color: var(--active-color);\\n    outline-color: var(--active-color);\\n  }\\n\\n  /deep/ .drawing-row-item .drawing-item-btns > .drawing-item-icon,\\n  /deep/ .drawing-item .drawing-item-btns > .drawing-item-icon {\\n    background-color: var(--active-color) !important;\\n    border-color: var(--active-color) !important;\\n  }\\n\\n  /deep/ .drawing-item:hover,\\n  /deep/ .drawing-row-item:hover {\\n    outline-color: var(--active-color);\\n  }\\n}\\n</style>\\n"},{"filePath":"client/src/views/dc//dcMobileScheme","fileName":"metadata.js","source":"      <% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n          {{else if item.__config__.elName == ''ListTree'' && item.__config__.locked}}\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              const parentConditions = [\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n              ]\\r\\n            {{else}}\\r\\n            const parentConditions = []\\r\\n            {{/if}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    },\\r\\n    <% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ListTree'' && item.__config__.locked}}\\r\\n            {{if item.__config__.field}}\\r\\n              {{if item.__config__.field.javaType && item.__config__.field.javaType.value == ''Custom''}}\\r\\n  {\\r\\n    id: ''{{item.__config__.field.customType.id}}'',\\r\\n    schemeId: ''{{item.__config__.field.customType.scheme.id}}'',\\r\\n    name: ''{{item.__config__.field.customType.comments}}'',\\r\\n    conditionPanel: parentConditions,\\r\\n    type: ''parent'',\\r\\n    dataRules:[]\\r\\n  },\\r\\n              {{else if item.__config__.field.javaType && item.__config__.field.javaType.value == ''This''}}\\r\\n  {\\r\\n    id: ''{{item.__config__.field.currentTable.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{item.__config__.field.currentTable.comments}}'',\\r\\n    conditionPanel: parentConditions,\\r\\n    type: ''parent'',\\r\\n    dataRules:[]\\r\\n  }, \\r\\n              {{/if}}\\r\\n            {{/if}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":13,"code":"const parentConditions = [\\n  {\\n    name: ''id'',\\n    comments: ''标识'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''名称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''status'',\\n    comments: ''状态'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''multil_ten'',\\n    comments: ''是否多租户（0：否；1：是）'',\\n    tag: ''el-switch'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: { ''active-value'': true, ''inactive-value'': false }\\n  }\\n]\\n\\nconst conditions = [\\n  {\\n    name: ''id'',\\n    comments: ''主键'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''project_id'',\\n    comments: ''项目'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: {\\n      labelField: ''name'',\\n      className: ''Project'',\\n      fieldId: ''id'',\\n      tableId: ''1440433057862000819'',\\n      apiPath: ''project/project'',\\n      filter: ''''\\n    }\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''名称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''scheme_id'',\\n    comments: ''后端方案'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: {\\n      labelField: ''name'',\\n      className: ''DcScheme'',\\n      fieldId: ''id'',\\n      tableId: ''1440433057862000819'',\\n      apiPath: ''dc/dcScheme'',\\n      filter: ''''\\n    }\\n  },\\n\\n  {\\n    name: ''template_id'',\\n    comments: ''模板'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: {\\n      labelField: ''name'',\\n      className: ''DcTemplate'',\\n      fieldId: ''id'',\\n      tableId: ''1440433057862000819'',\\n      apiPath: ''dc/dcTemplate'',\\n      filter: \\"{ columnName: ''type'', queryType: ''='', value: this.$route.params.typeParam }\\"\\n    }\\n  },\\n\\n  {\\n    name: ''template_json'',\\n    comments: ''模板json'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''remarks'',\\n    comments: ''备注信息'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_by'',\\n    comments: ''创建者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_date'',\\n    comments: ''创建时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  },\\n\\n  {\\n    name: ''update_by'',\\n    comments: ''更新者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''update_date'',\\n    comments: ''更新时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  }\\n]\\n\\nconst metadata = [\\n  {\\n    id: ''1440433057862000819'',\\n    schemeId: ''1440433057862000817'',\\n    name: ''移动端方案'',\\n    conditionPanel: conditions,\\n    type: ''main'',\\n    dataRules: []\\n  },\\n\\n  {\\n    id: ''1351544466239864850'',\\n    schemeId: '''',\\n    name: ''项目'',\\n    conditionPanel: parentConditions,\\n    type: ''parent'',\\n    dataRules: []\\n  }\\n]\\nexport default metadata\\n"},{"filePath":"client/src/views/dc//dcMobileScheme","fileName":"tplDialog.vue","source":"<template>\\r\\n  <div>\\r\\n    <el-dialog\\r\\n      title=\\"模板选择\\"\\r\\n      :visible.sync=\\"templateVisible\\"\\r\\n      :close-on-click-modal=\\"false\\"\\r\\n      width=\\"50%\\"\\r\\n      @close=\\"onTemplateDialogClose()\\"\\r\\n      v-loading=\\"loading\\"\\r\\n      :append-to-body=\\"true\\"\\r\\n    >\\r\\n      <el-form\\r\\n        :model=\\"templateForm\\"\\r\\n        :rules=\\"templateRules\\"\\r\\n        ref=\\"dcTemplateForm\\"\\r\\n        label-width=\\"120px\\"\\r\\n        label-position=\\"right\\"\\r\\n        class=\\"edit-form\\"\\r\\n      >\\r\\n        <el-row>\\r\\n          <el-col :span=\\"24 / 2\\">\\r\\n            <el-form-item label=\\"后端方案\\" prop=\\"scheme.id\\" style=\\"margin-bottom: 0\\">\\r\\n              <el-select\\r\\n                v-model=\\"templateForm.scheme\\"\\r\\n                value-key=\\"id\\"\\r\\n                filterable\\r\\n                clearable\\r\\n                placeholder=\\"请选择后端方案\\"\\r\\n                @change=\\"onChangeScheme\\"\\r\\n                @clear=\\"\\r\\n                  templateForm.scheme = {\\r\\n                    id: null,\\r\\n                    name: null\\r\\n                  }\\r\\n                \\"\\r\\n              >\\r\\n                <el-option v-for=\\"scheme in scheme_List\\" :key=\\"scheme.id\\" :label=\\"scheme.name\\" :value=\\"scheme\\"></el-option>\\r\\n              </el-select>\\r\\n            </el-form-item>\\r\\n          </el-col>\\r\\n        </el-row>\\r\\n        <el-row v-if=\\"templateForm.scheme.id != null\\" gutter=\\"20\\">\\r\\n          <el-col :span=\\"8\\" style=\\"margin: 10px 0\\" v-for=\\"(item, index) in handleTemplate_List\\" :key=\\"index\\">\\r\\n            <el-card\\r\\n              class=\\"box-card template-card\\"\\r\\n              shadow=\\"hover\\"\\r\\n              :class=\\"templateForm.template.id == item.id ? ''card-selected'' : ''''\\"\\r\\n            >\\r\\n              <el-carousel height=\\"200px\\">\\r\\n                <el-carousel-item v-for=\\"(img, index) in item.fileList\\" :key=\\"index\\">\\r\\n                  <el-image :src=\\"`data:image/png;base64,${img.fileByte}`\\">\\r\\n                    <div slot=\\"error\\" class=\\"error-image\\">\\r\\n                      <i class=\\"el-icon-document\\"></i>\\r\\n                    </div>\\r\\n                  </el-image>\\r\\n                </el-carousel-item>\\r\\n              </el-carousel>\\r\\n              <div class=\\"card-title\\"><% print(''{{item.name}}'') %></div>\\r\\n              <div class=\\"card-detail\\">\\r\\n                <p><% print(''{{item.remarks}}'') %></p>\\r\\n                <el-popover placement=\\"top-start\\" width=\\"200\\" trigger=\\"hover\\" :content=\\"item.remarks\\">\\r\\n                  <el-button type=\\"text\\" slot=\\"reference\\">详情</el-button>\\r\\n                </el-popover>\\r\\n              </div>\\r\\n              <div class=\\"card-select\\">\\r\\n                <div v-if=\\"templateForm.template.id == item.id\\" class=\\"selected-flag\\"><i class=\\"el-icon-check\\"></i></div>\\r\\n                <el-button v-else type=\\"primary\\" size=\\"mini\\" round @click=\\"onChangeTemplate(item)\\">选择模板</el-button>\\r\\n              </div>\\r\\n            </el-card>\\r\\n          </el-col>\\r\\n        </el-row>\\r\\n      </el-form>\\r\\n\\r\\n      <span slot=\\"footer\\" class=\\"dialog-footer\\">\\r\\n        <el-button v-if=\\"template_List.length > 0\\" type=\\"primary\\" @click=\\"chooseType()\\" :plain=\\"true\\">确 定</el-button>\\r\\n        <el-button :plain=\\"true\\" @click=\\"onTemplateDialogClose()\\">关 闭</el-button>\\r\\n      </span>\\r\\n    </el-dialog>\\r\\n  </div>\\r\\n</template>\\r\\n<script>\\r\\nimport { mapGetters } from ''vuex''\\r\\nimport { validatenull } from ''@/utils/validate''\\r\\nimport { listDcSchemeAll, getDcSchemeById } from ''@/api/dc/dcScheme''\\r\\nimport { listTemplateAndFile } from ''@/api/dc/dcTemplate''\\r\\nimport BaseUI from ''@/views/components/baseUI''\\r\\nimport OperationIcon from ''@/components/OperationIcon''\\r\\nimport { constructDbModel } from ''../utils''\\r\\n\\r\\nconst parseTemplate = window[''vue-m-codegenerator''].parseTemplate\\r\\n\\r\\nexport default {\\r\\n  extends: BaseUI,\\r\\n  name: ''tpl-dialog'',\\r\\n  components: {\\r\\n    OperationIcon\\r\\n  },\\r\\n  \\r\\n  data() {\\r\\n    return {\\r\\n      dbModel: null,\\r\\n      scheme_List: [], // 后端方案\\r\\n      template_List: [], // 模板\\r\\n      templateForm: this.initTemplateForm(),\\r\\n      templateVisible: false, // 模板弹窗\\r\\n      templateRules: {\\r\\n        ''scheme.id'': [\\r\\n          {\\r\\n            required: true,\\r\\n            message: ''请选择后端方案'',\\r\\n            trigger: ''change''\\r\\n          }\\r\\n        ]\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n  props: {},\\r\\n  computed: {\\r\\n    ...mapGetters([''settings'']),\\r\\n    handleTemplate_List() {\\r\\n      return this.template_List.filter((item) => {\\r\\n        return this.matchModel(item)\\r\\n      })\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    onChangeScheme(val) {\\r\\n      this.dbModel = null\\r\\n      if (!validatenull(val) && !validatenull(val.id)) {\\r\\n        this.setLoad()\\r\\n        getDcSchemeById(val.id)\\r\\n          .then((responseData) => {\\r\\n            if (responseData.code == 100) {\\r\\n              let schema = responseData.data\\r\\n              if (!validatenull(schema.dcTableList)) {\\r\\n                for (let i = 0; i < schema.dcTableList.length; i++) {\\r\\n                  for (let j = 0; j < schema.dcTableList[i].columnList.length; j++) {\\r\\n                    const childFields = schema.dcTableList[i].columnList[j].childFields\\r\\n                    this.$set(\\r\\n                      schema.dcTableList[i].columnList[j],\\r\\n                      ''childFields'',\\r\\n                      !validatenull(childFields) ? JSON.parse(childFields) : []\\r\\n                    )\\r\\n                  }\\r\\n                }\\r\\n              }\\r\\n              this.dbModel = constructDbModel(schema)\\r\\n            } else {\\r\\n              this.showMessage(responseData)\\r\\n            }\\r\\n            this.resetLoad()\\r\\n          })\\r\\n          .catch((error) => {\\r\\n            this.outputError(error)\\r\\n          })\\r\\n      }\\r\\n    },\\r\\n    onChangeTemplate(val) {\\r\\n      this.templateForm.template = {\\r\\n        id: val.id,\\r\\n        name: val.name,\\r\\n        json: val.json\\r\\n      }\\r\\n    },\\r\\n    chooseType() {\\r\\n      this.$refs[''dcTemplateForm''].validate((valid) => {\\r\\n        if (valid) {\\r\\n          if (!validatenull(this.templateForm.template.id)) {\\r\\n            this.$emit(''after-change'', this.templateForm, this.dbModel)\\r\\n            this.templateVisible = false\\r\\n          } else {\\r\\n            this.showMessage({\\r\\n              type: ''warning'',\\r\\n              msg: ''请选择模板''\\r\\n            })\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    onTemplateDialogClose() {\\r\\n      this.templateVisible = false\\r\\n    },\\r\\n    initTemplateForm() {\\r\\n      return {\\r\\n        scheme: {\\r\\n          // 后端方案\\r\\n          id: null,\\r\\n          name: null\\r\\n        },\\r\\n        template: {\\r\\n          // 选择的模板类型\\r\\n          id: null,\\r\\n          name: null,\\r\\n          json: null\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    initOptions() {\\r\\n      let scheme_search = {\\r\\n        params: []\\r\\n      }\\r\\n      // 数据权限: 低代码-代码方案dc_scheme\\r\\n      this.pushDataPermissions(scheme_search.params, this.$route.meta.routerId, ''1088722824589459486'')\\r\\n      this.scheme_List.splice(0, this.scheme_List.length)\\r\\n      listDcSchemeAll(scheme_search).then((responseData) => {\\r\\n        this.scheme_List = responseData.data\\r\\n      })\\r\\n      let template_search = {\\r\\n        params: [\\r\\n          {\\r\\n            columnName: ''type'',\\r\\n            queryType: ''='',\\r\\n            value: ''2''\\r\\n          }\\r\\n        ]\\r\\n      }\\r\\n      // 数据权限: 低代码-模板dc_template\\r\\n      this.pushDataPermissions(template_search.params, this.$route.meta.routerId, ''1154414160417153685'')\\r\\n      this.template_List.splice(0, this.template_List.length)\\r\\n      listTemplateAndFile(template_search).then((responseData) => {\\r\\n        this.template_List = responseData.data\\r\\n      })\\r\\n    },\\r\\n    matchModel(tpl) {\\r\\n      if (!this.dbModel) {\\r\\n        return false\\r\\n      }\\r\\n      let jsonTemplate = parseTemplate(tpl.json) // 模板JSON转为对象\\r\\n      // TODO 需要如果匹配代码异常的兼容性处理\\r\\n      return eval(`(${jsonTemplate.matchJs}).call(this, this.dbModel)`)\\r\\n    }\\r\\n  },\\r\\n  watch: {},\\r\\n  mounted: function () {\\r\\n    this.$nextTick(() => {\\r\\n      this.$on(''selectTemplate'', function () {\\r\\n        this.templateVisible = true // 选择模板\\r\\n        this.initOptions()\\r\\n      })\\r\\n      this.$on(''switchTemplate'', function (tpl, dbModel) {\\r\\n        this.templateVisible = true // 选择模板\\r\\n\\r\\n        this.templateForm = tpl\\r\\n        this.dbModel = dbModel\\r\\n        this.initOptions()\\r\\n      })\\r\\n    })\\r\\n  }\\r\\n}\\r\\n</script>","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\r\\n    var slots = {\\r\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\r\\n          list.push(h(\\"el-button\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"type\\": item.type,\\r\\n              \\"size\\": conf.__config__.size,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }, [item.__slot__.default]));\\r\\n        });\\r\\n        if (conf.__config__.footerAlign != ''null'') {\\r\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [h(\\"div\\", {\\r\\n            \\"style\\": footerAlign\\r\\n          }, [list])]);\\r\\n        } else {\\r\\n          return h(\\"span\\", {\\r\\n            \\"slot\\": \\"footer\\"\\r\\n          }, [list]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"style\\": \\"overflow: hidden\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    // 设计模式下显示对话框\\r\\n    var confDesigner = Object.assign({\\r\\n      visible: true,\\r\\n      modal: false,\\r\\n      class: ''el-dialog__wrapper_cust'',\\r\\n      width: element.width\\r\\n    }, element);\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": config.span\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"component-name\\"\\r\\n    }, [config.componentName]), h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": confDesigner,\\r\\n        \\"slots\\": slots\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\r\\n    var _this2 = this;\\r\\n    var config = scheme.__config__;\\r\\n    var btnWrapper = function btnWrapper() {\\r\\n      // 获取dialog组件 底部按钮数组\\r\\n      var list = [];\\r\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\r\\n        item.size = scheme.__config__.size;\\r\\n        var attrs = _this2.getAttrs(item, isView);\\r\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\r\\n        list.push(str);\\r\\n      });\\r\\n      var style = '''';\\r\\n      if (config.footerAlign) {\\r\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\r\\n      }\\r\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\r\\n      return list.length > 0 ? btnWrapperStr : '''';\\r\\n    };\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\r\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\r\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\r\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\r\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function dialogLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''是否是全屏'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fullscreen,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''宽度'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"事件\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''open'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:open''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"close\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''close'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-on:close''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prepend\\"\\r\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"底部按钮\\",\\r\\n      \\"name\\": \\"8\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''按钮布局'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.footerAlign,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''组件尺寸'',\\r\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(''// 对话框属性变量'');\\r\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\r\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\r\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\r\\n    list.push(''},'');\\r\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\r\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n    });\\r\\n    return list;\\r\\n  }","tag":"el-dialog","tagIcon":"dialog","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var tag = config.tag;\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function editFormLayout(h) {\\r\\n  var _this = this;\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"ref\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入表单名(ref)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单名\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"::model\\",\\r\\n      \\"label\\": \\"数据对象\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入数据模型(model)'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''数据对象'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':model''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':model'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表单尺寸\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.size,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"large\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"medium\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"small\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"mini\\"\\r\\n    }\\r\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签对齐\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-position''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"null\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"top\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签宽度\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''label-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行内提示\\",\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''inline-message''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\r\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n    } else if (scheme['':model'']) {\\r\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\r\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\r\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"form","span":24,"children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' || parent.__config__.elName === ''ElCardBodyE'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this8 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this8.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listDcSchemeAll","apiFrom":"@/api/dc/dcScheme.js","optionParams":"","loopArray":"schemeOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":104,"renderKey":104.06009100299308,"componentName":"SelectInput104"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"scheme","v-model":"",":style":{"width":"100%"},"placeholder":"请选择后端方案","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"modelExp":"`${parent[\\":model\\"]}${scheme.__config__.childClassName ? \\".\\" + scheme.__config__.childClassName + \\"List[0]\\" : \\"\\"}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.childClassName ? scheme.__config__.childClassName + \\"List[0].\\" : \\"\\"}${scheme.__config__.children[0].__vModel__}${scheme.__config__.field && scheme.__config__.field.associatedField ? \\".\\" + scheme.__config__.field.associatedField : \\"\\"}\\"`","id":"formItemE","span":24,"field":{"id":"1440433057862000841","name":"scheme_id","createBy":"超级管理员(super)","createDate":"2023-03-20 10:47:51","updateBy":"超级管理员(super)","updateDate":"2023-03-20 10:48:08","dcTable":{"id":"1440433057862000819","name":"dc_mobile_scheme","scheme":{"name":"移动端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcMobileScheme","comments":"移动端方案","isTreeTable":false,"columnList":[]},"comments":"后端方案","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","project":{"id":"88888888","name":"低代码开发平台","status":"0","cloudName":"cloud-geeke-devtool","memberList":[],"children":[]},"replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","comments":"低代码-代码方案","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"scheme","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"方案名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1339746483134570552","name":"dc_scheme","scheme":{"name":"后端方案","packageName":"com.geeke","moduleName":"dc","subModuleName":"","replace":false,"dcTableList":[],"children":[]},"className":"DcScheme","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[],"children":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","associatedFilter":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"decimalLenth":0,"dataLength":21,"simpleJavaType":"Custom","isNotBaseField":true,"isEditableField":true,"simpleAnnotationList":["NotNull(message=\\"后端方案不能为空\\")"],"isType":false},"childClassName":"","regList":[],"propertyLayout":"function itemSelectLayout(h, hasOneZOne) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field, group) {\\r\\n    this.activeData.__config__.children[0].__vModel__ = field.javaField; // 字段信息\\r\\n    this.activeData.__config__.childClassName = group ? group.childClassName : ''''; // 子表类名\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value-key\\": ''id'',\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.field,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"field\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [hasOneZOne && this.tableColumns.map(function (group, groupIndex) {\\r\\n    return h(\\"el-option-group\\", {\\r\\n      \\"key\\": groupIndex,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\r\\n        \\"value\\": groupIndex\\r\\n      }\\r\\n    }, [group.tableColumns.map(function (item, index) {\\r\\n      return h(\\"el-option\\", {\\r\\n        \\"key\\": item.id,\\r\\n        \\"attrs\\": {\\r\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n          \\"value\\": item,\\r\\n          \\"disabled\\": _this2.handelDisabled(item)\\r\\n        },\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            if (!_this2.handelDisabled(item)) {\\r\\n              onChangeModel.call(_this2, item, group);\\r\\n            }\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [h(\\"span\\", {\\r\\n        \\"style\\": \\"padding-left: 6px;\\"\\r\\n      }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n        \\"style\\": \\"float: right;\\",\\r\\n        \\"attrs\\": {\\r\\n          \\"className\\": \\"filed-tip\\"\\r\\n        }\\r\\n      }, [item.isType && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"danger\\"\\r\\n        }\\r\\n      }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"type\\": \\"warning\\"\\r\\n        }\\r\\n      }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n    })]);\\r\\n  }), !hasOneZOne && this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          if (!_this2.handelDisabled(item)) {\\r\\n            onChangeModel.call(_this2, item);\\r\\n          }\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\"),\\r\\n      \\"parent\\": this.activeData,\\r\\n      \\"hasOneZOne\\": hasOneZOne\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.06805248300267,"componentName":"SelectInput103"},"label":"后端方案","v-if":null,"v-show":null,"required":true,":rules":[]}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.8576570979224,"componentName":"ElEditForm102"},"ref":"dcTemplateForm",":model":"templateForm","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":null}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.49523761396999,"componentName":"ElDialog101"},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"确 定"},"v-on:click":"chooseType()","type":"primary","v-if":"template_List.length > 0"},{"__slot__":{"default":"关 闭"},"v-on:click":"onTemplateDialogClose()","type":""}]},"v-on:open":"","v-on:close":"onTemplateDialogClose()","title":"模板选择","v-loading":"loading","width":"50%","fullscreen":false}]},"version":13,"code":"<template>\\n  <div>\\n    <el-dialog\\n      title=\\"模板选择\\"\\n      :visible.sync=\\"templateVisible\\"\\n      :close-on-click-modal=\\"false\\"\\n      width=\\"50%\\"\\n      @close=\\"onTemplateDialogClose()\\"\\n      v-loading=\\"loading\\"\\n      :append-to-body=\\"true\\"\\n    >\\n      <el-form\\n        :model=\\"templateForm\\"\\n        :rules=\\"templateRules\\"\\n        ref=\\"dcTemplateForm\\"\\n        label-width=\\"120px\\"\\n        label-position=\\"right\\"\\n        class=\\"edit-form\\"\\n      >\\n        <el-row>\\n          <el-col :span=\\"24 / 2\\">\\n            <el-form-item label=\\"后端方案\\" prop=\\"scheme.id\\" style=\\"margin-bottom: 0\\">\\n              <el-select\\n                v-model=\\"templateForm.scheme\\"\\n                value-key=\\"id\\"\\n                filterable\\n                clearable\\n                placeholder=\\"请选择后端方案\\"\\n                @change=\\"onChangeScheme\\"\\n                @clear=\\"\\n                  templateForm.scheme = {\\n                    id: null,\\n                    name: null\\n                  }\\n                \\"\\n              >\\n                <el-option v-for=\\"scheme in scheme_List\\" :key=\\"scheme.id\\" :label=\\"scheme.name\\" :value=\\"scheme\\"></el-option>\\n              </el-select>\\n            </el-form-item>\\n          </el-col>\\n        </el-row>\\n        <el-row v-if=\\"templateForm.scheme.id != null\\" gutter=\\"20\\">\\n          <el-col :span=\\"8\\" style=\\"margin: 10px 0\\" v-for=\\"(item, index) in handleTemplate_List\\" :key=\\"index\\">\\n            <el-card\\n              class=\\"box-card template-card\\"\\n              shadow=\\"hover\\"\\n              :class=\\"templateForm.template.id == item.id ? ''card-selected'' : ''''\\"\\n            >\\n              <el-carousel height=\\"200px\\">\\n                <el-carousel-item v-for=\\"(img, index) in item.fileList\\" :key=\\"index\\">\\n                  <el-image :src=\\"`data:image/png;base64,${img.fileByte}`\\">\\n                    <div slot=\\"error\\" class=\\"error-image\\">\\n                      <i class=\\"el-icon-document\\"></i>\\n                    </div>\\n                  </el-image>\\n                </el-carousel-item>\\n              </el-carousel>\\n              <div class=\\"card-title\\">{{ item.name }}</div>\\n              <div class=\\"card-detail\\">\\n                <p>{{ item.remarks }}</p>\\n                <el-popover placement=\\"top-start\\" width=\\"200\\" trigger=\\"hover\\" :content=\\"item.remarks\\">\\n                  <el-button type=\\"text\\" slot=\\"reference\\">详情</el-button>\\n                </el-popover>\\n              </div>\\n              <div class=\\"card-select\\">\\n                <div v-if=\\"templateForm.template.id == item.id\\" class=\\"selected-flag\\"><i class=\\"el-icon-check\\"></i></div>\\n                <el-button v-else type=\\"primary\\" size=\\"mini\\" round @click=\\"onChangeTemplate(item)\\">选择模板</el-button>\\n              </div>\\n            </el-card>\\n          </el-col>\\n        </el-row>\\n      </el-form>\\n\\n      <span slot=\\"footer\\" class=\\"dialog-footer\\">\\n        <el-button v-if=\\"template_List.length > 0\\" type=\\"primary\\" @click=\\"chooseType()\\" :plain=\\"true\\">确 定</el-button>\\n        <el-button :plain=\\"true\\" @click=\\"onTemplateDialogClose()\\">关 闭</el-button>\\n      </span>\\n    </el-dialog>\\n  </div>\\n</template>\\n<script>\\nimport { mapGetters } from ''vuex''\\nimport { validatenull } from ''@/utils/validate''\\nimport { listDcSchemeAll, getDcSchemeById } from ''@/api/dc/dcScheme''\\nimport { listTemplateAndFile } from ''@/api/dc/dcTemplate''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nimport { constructDbModel } from ''../utils''\\n\\nconst parseTemplate = window[''vue-m-codegenerator''].parseTemplate\\n\\nexport default {\\n  extends: BaseUI,\\n  name: ''tpl-dialog'',\\n  components: {\\n    OperationIcon\\n  },\\n\\n  data() {\\n    return {\\n      dbModel: null,\\n      scheme_List: [], // 后端方案\\n      template_List: [], // 模板\\n      templateForm: this.initTemplateForm(),\\n      templateVisible: false, // 模板弹窗\\n      templateRules: {\\n        ''scheme.id'': [\\n          {\\n            required: true,\\n            message: ''请选择后端方案'',\\n            trigger: ''change''\\n          }\\n        ]\\n      }\\n    }\\n  },\\n  props: {},\\n  computed: {\\n    ...mapGetters([''settings'']),\\n    handleTemplate_List() {\\n      return this.template_List.filter((item) => {\\n        return this.matchModel(item)\\n      })\\n    }\\n  },\\n  methods: {\\n    onChangeScheme(val) {\\n      this.dbModel = null\\n      if (!validatenull(val) && !validatenull(val.id)) {\\n        this.setLoad()\\n        getDcSchemeById(val.id)\\n          .then((responseData) => {\\n            if (responseData.code == 100) {\\n              let schema = responseData.data\\n              if (!validatenull(schema.dcTableList)) {\\n                for (let i = 0; i < schema.dcTableList.length; i++) {\\n                  for (let j = 0; j < schema.dcTableList[i].columnList.length; j++) {\\n                    const childFields = schema.dcTableList[i].columnList[j].childFields\\n                    this.$set(\\n                      schema.dcTableList[i].columnList[j],\\n                      ''childFields'',\\n                      !validatenull(childFields) ? JSON.parse(childFields) : []\\n                    )\\n                  }\\n                }\\n              }\\n              this.dbModel = constructDbModel(schema)\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      }\\n    },\\n    onChangeTemplate(val) {\\n      this.templateForm.template = {\\n        id: val.id,\\n        name: val.name,\\n        json: val.json\\n      }\\n    },\\n    chooseType() {\\n      this.$refs[''dcTemplateForm''].validate((valid) => {\\n        if (valid) {\\n          if (!validatenull(this.templateForm.template.id)) {\\n            this.$emit(''after-change'', this.templateForm, this.dbModel)\\n            this.templateVisible = false\\n          } else {\\n            this.showMessage({\\n              type: ''warning'',\\n              msg: ''请选择模板''\\n            })\\n          }\\n        }\\n      })\\n    },\\n    onTemplateDialogClose() {\\n      this.templateVisible = false\\n    },\\n    initTemplateForm() {\\n      return {\\n        scheme: {\\n          // 后端方案\\n          id: null,\\n          name: null\\n        },\\n        template: {\\n          // 选择的模板类型\\n          id: null,\\n          name: null,\\n          json: null\\n        }\\n      }\\n    },\\n    initOptions() {\\n      let scheme_search = {\\n        params: []\\n      }\\n      // 数据权限: 低代码-代码方案dc_scheme\\n      this.pushDataPermissions(scheme_search.params, this.$route.meta.routerId, ''1088722824589459486'')\\n      this.scheme_List.splice(0, this.scheme_List.length)\\n      listDcSchemeAll(scheme_search).then((responseData) => {\\n        this.scheme_List = responseData.data\\n      })\\n      let template_search = {\\n        params: [\\n          {\\n            columnName: ''type'',\\n            queryType: ''='',\\n            value: ''2''\\n          }\\n        ]\\n      }\\n      // 数据权限: 低代码-模板dc_template\\n      this.pushDataPermissions(template_search.params, this.$route.meta.routerId, ''1154414160417153685'')\\n      this.template_List.splice(0, this.template_List.length)\\n      listTemplateAndFile(template_search).then((responseData) => {\\n        this.template_List = responseData.data\\n      })\\n    },\\n    matchModel(tpl) {\\n      if (!this.dbModel) {\\n        return false\\n      }\\n      let jsonTemplate = parseTemplate(tpl.json) // 模板JSON转为对象\\n      // TODO 需要如果匹配代码异常的兼容性处理\\n      return eval(`(${jsonTemplate.matchJs}).call(this, this.dbModel)`)\\n    }\\n  },\\n  watch: {},\\n  mounted: function () {\\n    this.$nextTick(() => {\\n      this.$on(''selectTemplate'', function () {\\n        this.templateVisible = true // 选择模板\\n        this.initOptions()\\n      })\\n      this.$on(''switchTemplate'', function (tpl, dbModel) {\\n        this.templateVisible = true // 选择模板\\n\\n        this.templateForm = tpl\\n        this.dbModel = dbModel\\n        this.initOptions()\\n      })\\n    })\\n  }\\n}\\n</script>\\n","maxFormId":104}],"version":13}', remarks='', create_by='超级管理员(super)', create_date='2023-03-20 10:53:48', update_by='超级管理员(super)', update_date='2023-05-22 13:34:57', del_flag='0'
WHERE id=1440433057862000852;