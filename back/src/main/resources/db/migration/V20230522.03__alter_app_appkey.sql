/* 修改 应用的appkey字段长度 */
ALTER TABLE micro_app CHANGE COLUMN `app_key` `app_key` VARCHAR(40) NOT NULL  ;
UPDATE dc_table_column SET `jdbc_type`='varchar(40)' WHERE `id`='1369362842443366402';

UPDATE dc_scheme
SET project_id=88888888, name='应用', package_name='com.geeke', module_name='micro', sub_module_name='', function_name='应用管理', template_id=1279029939292610715, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}\\n","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n              {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              // 分页属性\\n              {{if item.__slot__.pageFlag}}\\n                {{item['':data'']}}Page: 1,\\n                {{item['':data'']}}Total: 0,\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.layout == ''queryTableLayout''}}\\n              // 查询表格列头\\n              table{{item.__config__.formId}}Column: [\\n                {{each item.__config__.children filed}}\\n                  {{if filed.__config__.elName == ''ElTableColumn''}}\\n                    { {{@filed | getAttributes }}   display: {{filed.__config__.display}} },\\n                  {{/if}}\\n                {{/each}}\\n              ]\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n            // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/api/micro/","fileName":"microApp.js","source":"import request from ''@/utils/request''\\n\\nexport const get{{table.className}}ById = (id) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id,\\n  method: ''get''\\n})\\n\\nexport const list{{table.className}}Page = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/list'',\\n  method: ''post'',\\n  data: search\\n})\\n\\nexport const list{{table.className}}All = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/listAll'',\\n  method: ''post'',\\n  data: search\\n})\\n\\n{{if table.isTreeTable}}\\nexport const tree{{table.className}} = (search) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/tree'',\\n  method: ''post'',\\n  data: search\\n})\\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\nexport const save{{table.className}} = (formData) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: formData\\n})\\n  {{else}}\\nexport const save{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/save'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n  {{/if}}\\n  \\nexport const delete{{table.className}} = ({{table.className | lowerCase}}) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/delete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}\\n})\\n\\nexport const bulkInsert{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkInsert'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkUpdate{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkUpdate'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\nexport const bulkDelete{{table.className}} = ({{table.className | lowerCase}}s) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/bulkDelete'',\\n  method: ''post'',\\n  data: {{table.className | lowerCase}}s\\n})\\n\\n  {{if table.hasPassWordInput}}\\n  // 修改加密字段\\n    {{each table.columnList c}}\\n      {{if c.showType && c.showType.value == ''PassWordInput''}}\\n/**\\n * 修改 {{c.comments}}\\n */\\nexport const change{{c.javaField | upperCase}} = (id, password) => request({\\n  url: ''/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}/'' + id + ''/{{c.javaField}}'',\\n  method: ''put'',\\n  params: {\\n  password: password\\n  }\\n})\\n      {{/if}}\\n    {{/each}}\\n  {{/if}}\\n{{/if}}\\n","__config__":{"children":[]},"locked":true,"code":"import request from ''@/utils/request''\\n\\nexport const getMicroAppById = (id) =>\\n  request({\\n    url: ''/micro/microApp/'' + id,\\n    method: ''get''\\n  })\\n\\nexport const listMicroAppPage = (search) =>\\n  request({\\n    url: ''/micro/microApp/list'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const listMicroAppAll = (search) =>\\n  request({\\n    url: ''/micro/microApp/listAll'',\\n    method: ''post'',\\n    data: search\\n  })\\n\\nexport const saveMicroApp = (formData) =>\\n  request({\\n    url: ''/micro/microApp/save'',\\n    method: ''post'',\\n    data: formData\\n  })\\n\\nexport const deleteMicroApp = (microApp) =>\\n  request({\\n    url: ''/micro/microApp/delete'',\\n    method: ''post'',\\n    data: microApp\\n  })\\n\\nexport const bulkInsertMicroApp = (microApps) =>\\n  request({\\n    url: ''/micro/microApp/bulkInsert'',\\n    method: ''post'',\\n    data: microApps\\n  })\\n\\nexport const bulkUpdateMicroApp = (microApps) =>\\n  request({\\n    url: ''/micro/microApp/bulkUpdate'',\\n    method: ''post'',\\n    data: microApps\\n  })\\n\\nexport const bulkDeleteMicroApp = (microApps) =>\\n  request({\\n    url: ''/micro/microApp/bulkDelete'',\\n    method: ''post'',\\n    data: microApps\\n  })\\n"},{"filePath":"back/src/main/java/com.geeke/micro//controller","fileName":"MicroAppController.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.controller;\\n\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.multipart.MultipartFile;\\n{{/if}}\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service.{{table.className}}Service;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\n\\n/**\\n * {{functionName}}Controller\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@RestController\\n@RequestMapping(value = \\"/{{moduleName}}{{if subModuleName}}/{{subModuleName}}{{/if}}/{{table.className | lowerCase}}\\")\\npublic class {{table.className}}Controller extends BaseController {\\n\\n\\t@Autowired\\n\\tprivate {{table.className}}Service {{table.className | lowerCase}}Service;\\n\\t\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        {{table.className}} entity = {{table.className | lowerCase}}Service.get(id);\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        entity.set{{c.javaField | upperCase}}(\\"\\");        \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n    \\n    @PostMapping(value = {\\"list\\", \\"\\"})\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<{{table.className}}> result = {{table.className | lowerCase}}Service.listPage(searchParams.getParams(), searchParams.getOffset(), searchParams.getLimit(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result.getRows() != null) {\\n            for({{table.className}} entity: result.getRows()){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }\\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n    \\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.listAll(searchParams.getParams(), searchParams.getOrderby());\\n{{if table.hasPassWordInput}}\\n    {{each table.columnList c}}\\n        {{if c.javaType && c.javaType.value == ''Password''}}\\n        // 不返回密码\\n        if(result != null) {\\n            for({{table.className}} entity: result){\\n                entity.set{{c.javaField | upperCase}}(\\"\\");\\n            }\\n        }      \\n        {{/if}}\\n    {{/each}}\\n{{/if}}\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n{{if table.isTreeTable}}\\n    @PostMapping(value = \\"tree\\")\\n    public ResponseEntity<JSONObject> tree(@RequestBody SearchParams searchParams) {\\n        List<{{table.className}}> result = {{table.className | lowerCase}}Service.tree(searchParams.getParams(), searchParams.getOrderby());\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    } \\n{{/if}}\\n\\n{{if table.source == ''BASE TABLE''}}\\n    @PostMapping(value = \\"save\\")\\n  {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public ResponseEntity<JSONObject> save(@RequestParam(value = \\"entity\\",required = false) String strEntity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      @RequestParam(value = \\"{{c.javaField}}Uploads\\",required = false) MultipartFile[] {{c.javaField}}Uploads,  // 文件: {{c.comments}}\\n      {{/if}}\\n    {{/each}}\\n      @RequestParam(value = \\"deleteIds\\",required = false)String strDeleteIds) throws java.io.IOException {\\n        {{table.className}} entity = JSONObject.parseObject(strEntity, {{table.className}}.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = {{table.className | lowerCase}}Service.save(entity,\\n    {{each table.columnList c}}\\n      {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n            {{c.javaField}}Uploads,\\n      {{/if}}\\n    {{/each}}\\n            deleteIds\\n        ).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{else}}\\n    public ResponseEntity<JSONObject> save(@RequestBody {{table.className}} entity) {\\n        String id = {{table.className | lowerCase}}Service.save(entity).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n  {{/if}}\\n  \\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody {{table.className}} entity) {\\n        int rows = {{table.className | lowerCase}}Service.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<{{table.className}}> entitys) {\\n        List<String> ids = {{table.className | lowerCase}}Service.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n    \\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<{{table.className}}> entitys) {\\n        int rows = {{table.className | lowerCase}}Service.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @PutMapping(\\"/{id}/{{c.javaField}}\\")\\n    public ResponseEntity<JSONObject> change{{c.javaField | upperCase}}(@PathVariable(\\"id\\") String id, String password) {\\n        int rows = 0;\\n        if(!StringUtils.isBlank(id)) {\\n            rows = {{table.className | lowerCase}}Service.change{{c.javaField | upperCase}}(id, password);\\n        }\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }        \\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.micro.controller;\\n\\nimport com.alibaba.fastjson.JSONObject;\\nimport com.geeke.common.controller.SearchParams;\\nimport com.geeke.common.data.Page;\\nimport com.geeke.micro.entity.MicroApp;\\nimport com.geeke.micro.service.MicroAppService;\\nimport com.geeke.sys.controller.BaseController;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport java.util.List;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.PostMapping;\\nimport org.springframework.web.bind.annotation.PutMapping;\\nimport org.springframework.web.bind.annotation.RequestBody;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RequestParam;\\nimport org.springframework.web.bind.annotation.RestController;\\nimport org.springframework.web.multipart.MultipartFile;\\n\\n/**\\n * 应用管理Controller\\n * @author\\n * @version\\n */\\n@RestController\\n@RequestMapping(value = \\"/micro/microApp\\")\\npublic class MicroAppController extends BaseController {\\n\\n    @Autowired\\n    private MicroAppService microAppService;\\n\\n    @GetMapping(\\"/{id}\\")\\n    public ResponseEntity<JSONObject> getById(@PathVariable(\\"id\\") String id) {\\n        MicroApp entity = microAppService.get(id);\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(entity));\\n    }\\n\\n    @PostMapping(value = { \\"list\\", \\"\\" })\\n    public ResponseEntity<JSONObject> listPage(@RequestBody SearchParams searchParams) {\\n        Page<MicroApp> result = microAppService.listPage(\\n            searchParams.getParams(),\\n            searchParams.getOffset(),\\n            searchParams.getLimit(),\\n            searchParams.getOrderby()\\n        );\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"listAll\\")\\n    public ResponseEntity<JSONObject> listAll(@RequestBody SearchParams searchParams) {\\n        List<MicroApp> result = microAppService.listAll(searchParams.getParams(), searchParams.getOrderby());\\n\\n        return ResponseEntity.ok(ResultUtil.successJson(result));\\n    }\\n\\n    @PostMapping(value = \\"save\\")\\n    public ResponseEntity<JSONObject> save(\\n        @RequestParam(value = \\"entity\\", required = false) String strEntity,\\n        @RequestParam(value = \\"iconIdUploads\\", required = false) MultipartFile[] iconIdUploads, // 文件: 应用图标\\n        @RequestParam(value = \\"deleteIds\\", required = false) String strDeleteIds\\n    ) throws java.io.IOException {\\n        MicroApp entity = JSONObject.parseObject(strEntity, MicroApp.class);\\n        String[] deleteIds = JSONObject.parseObject(strDeleteIds, String[].class);\\n        String id = microAppService.save(entity, iconIdUploads, deleteIds).getId();\\n        return ResponseEntity.ok(ResultUtil.successJson(id));\\n    }\\n\\n    @PostMapping(value = \\"delete\\")\\n    public ResponseEntity<JSONObject> delete(@RequestBody MicroApp entity) {\\n        int rows = microAppService.delete(entity);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n\\n    @PostMapping(value = \\"bulkInsert\\")\\n    public ResponseEntity<JSONObject> bulkInsert(@RequestBody List<MicroApp> entitys) {\\n        List<String> ids = microAppService.bulkInsert(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkUpdate\\")\\n    public ResponseEntity<JSONObject> bulkUpdate(@RequestBody List<MicroApp> entitys) {\\n        List<String> ids = microAppService.bulkUpdate(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(ids));\\n    }\\n\\n    @PostMapping(value = \\"bulkDelete\\")\\n    public ResponseEntity<JSONObject> bulkDelete(@RequestBody List<MicroApp> entitys) {\\n        int rows = microAppService.bulkDelete(entitys);\\n        return ResponseEntity.ok(ResultUtil.successJson(rows));\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/micro//service","fileName":"MicroAppService.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.service;\\n\\nimport java.util.Map;\\n{{if table.hasPassWordInput}}\\nimport org.apache.shiro.crypto.hash.Md5Hash;\\n{{/if}}\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\n{{if table.isTreeTable}}\\nimport com.geeke.common.service.TreeService;\\n{{else}}\\nimport com.geeke.common.service.CrudService;\\n{{/if}}\\n{{if table.autoSerialExists}}\\nimport com.geeke.common.sequence.service.SequenceService;\\nimport com.geeke.utils.SessionUtils;\\n{{/if}}\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\nimport org.springframework.web.multipart.MultipartFile;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.sys.service.SysFileService;\\n{{/if}}\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao;\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\n\\n/**\\n * {{functionName}}Service\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n \\n@Service(\\"{{table.className | lowerCase}}Service\\")\\n@Transactional(readOnly = true)\\n{{if table.isTreeTable}}\\npublic class {{table.className}}Service extends TreeService<{{table.className}}Dao, {{table.className}}> {\\n{{else}}\\npublic class {{table.className}}Service extends CrudService<{{table.className}}Dao, {{table.className}}>{\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.autoSerialExists}}\\n    @Autowired\\n    SequenceService sequenceService;\\n    {{/if}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    @Autowired\\n    private SysFileService sysFileService;\\n    {{/if}}\\n\\n    {{if table.hasPassWordInput || (table.constraintList && table.constraintList.length > 0) || table.autoSerialExists || table.mutilFileUploadExists || table.imageUploadExists}}\\n    \\n    @Transactional(readOnly = false)\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}},\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n      MultipartFile[] {{c.javaField}}Uploads,\\n            {{/if}}\\n        {{/each}}\\n      String[] deleteIds) throws java.io.IOException {\\n    {{else}}\\n    @Override\\n    public {{table.className}} save({{table.className}} {{table.className | lowerCase}}) {\\n    {{/if}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Code''}}\\n        // 新增时, 处理自动编号字段\\n        if (StringUtils.isBlank({{table.className | lowerCase}}.getId())){\\n            String sn = sequenceService.generate(SessionUtils.getUser().getCompanyId(), \\"{{c.defVal}}\\", {{table.className | lowerCase}});\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(sn);\\n        }\\n            {{/if}}\\n        {{/each}}\\n        {{if table.constraintList && table.constraintList.length > 0}}\\n        // 约束条件处理\\n        Map<String, String> colMaps = Maps.newHashMap();\\n          {{each table.constraintList constraint}}\\n              {{if constraint.name}}\\n                  // {{constraint.name}}\\n              {{/if}}\\n        colMaps.clear();\\n              {{each constraint.constraintColumn.split(\\",\\") column}}\\n                  {{each table.columnList c}}\\n                      {{if c.name == column}}\\n                        {{if c.javaType.value === ''This'' || c.javaType.value === ''Custom''}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_''}}.{{c.associatedField | camelCase ''_''}}\\");   \\n                        {{else}}\\n        colMaps.put(\\"{{column}}\\", \\"{{c.javaField | camelCase ''_'' }}\\");\\n                        {{/if}}\\n                      {{/if}}\\n                  {{/each}}\\n              {{/each}}\\n        if(exists(dao, {{table.className | lowerCase}}, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"{{constraint.comments}}\\"));\\n        } \\n          {{/each}}\\n        {{/if}}\\n\\n        {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && (c.javaType.value == ''File'' || c.javaType.value == ''Image'')}}\\n        if(StringUtils.isEmpty({{table.className | lowerCase}}.get{{c.javaField | upperCase}}())) {\\n            {{table.className | lowerCase}}.set{{c.javaField | upperCase}}(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList({{c.javaField}}Uploads, {{table.className | lowerCase}}.get{{c.javaField | upperCase}}());\\n            {{/if}}\\n        {{/each}}\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n        {{/if}}\\n\\n        {{table.className}} {{table.className | lowerCase}}Temp = super.save({{table.className | lowerCase}});\\n        {{if table.hasPassWordInput}}\\n        // 加密字段处理\\n        if (StringUtils.isNoneBlank({{table.className | lowerCase}}Temp.getId())) {\\n            {{each table.columnList c}}\\n                {{if c.javaType && c.javaType.value == ''Password''}}\\n            // 设置加密字段  {{c.comments}}\\n            if({{table.className | lowerCase}}.get{{c.javaField | upperCase}}Update()) {\\n                Md5Hash md5 = new Md5Hash({{table.className | lowerCase}}.get{{c.javaField | upperCase}}(), {{table.className | lowerCase}}.getId(), 6);\\n                   String md5Password = md5.toHex();\\n                   dao.update{{c.javaField | upperCase}}({{table.className | lowerCase}}.getId(), md5Password);\\n               }\\n                {{/if}}\\n            {{/each}}\\n        }\\n        {{/if}}        \\n        return {{table.className | lowerCase}}Temp;\\n    }\\n    {{/if}}\\n    \\n    {{if table.hasPassWordInput}}\\n     // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    @Transactional(readOnly = false)\\n    public int change{{c.javaField | upperCase}}(String id, String pass) {\\n        // Md5密码\\n        Md5Hash md5 = new Md5Hash(pass, id, 6);\\n        String md5Password = md5.toHex();\\n    \\n        int rows = dao.update{{c.javaField | upperCase}}(id, md5Password);\\n        return rows;\\n    }\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.micro.service;\\n\\nimport com.geeke.common.service.CrudService;\\nimport com.geeke.config.exception.CommonJsonException;\\nimport com.geeke.micro.dao.MicroAppDao;\\nimport com.geeke.micro.entity.MicroApp;\\nimport com.geeke.sys.service.SysFileService;\\nimport com.geeke.utils.IdGen;\\nimport com.geeke.utils.ResultUtil;\\nimport com.geeke.utils.StringUtils;\\nimport com.geeke.utils.constants.ErrorEnum;\\nimport com.google.common.collect.Maps;\\nimport java.util.Map;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\nimport org.springframework.web.multipart.MultipartFile;\\n\\n/**\\n * 应用管理Service\\n * @author\\n * @version\\n */\\n\\n@Service(\\"microAppService\\")\\n@Transactional(readOnly = true)\\npublic class MicroAppService extends CrudService<MicroAppDao, MicroApp> {\\n\\n    @Autowired\\n    private SysFileService sysFileService;\\n\\n    @Transactional(readOnly = false)\\n    public MicroApp save(MicroApp microApp, MultipartFile[] iconIdUploads, String[] deleteIds) throws java.io.IOException {\\n        // 约束条件处理\\n        Map<String, String> colMaps = Maps.newHashMap();\\n\\n        // appName不能重复\\n\\n        colMaps.clear();\\n\\n        colMaps.put(\\"app_key\\", \\"appKey\\");\\n\\n        colMaps.put(\\"del_flag\\", \\"delFlag\\");\\n\\n        if (exists(dao, microApp, colMaps)) {\\n            throw new CommonJsonException(ResultUtil.warningJson(ErrorEnum.E_50001, \\"appName已被使用，请重新输入。\\"));\\n        }\\n\\n        if (StringUtils.isEmpty(microApp.getIconId())) {\\n            microApp.setIconId(IdGen.uuid());\\n        }\\n        // 保存附件\\n        sysFileService.changeAndSaveSysFileList(iconIdUploads, microApp.getIconId());\\n\\n        // 根据附件ID删除附件信息\\n        if (null != deleteIds && deleteIds.length > 0) {\\n            sysFileService.delete(deleteIds);\\n        }\\n\\n        MicroApp microAppTemp = super.save(microApp);\\n\\n        return microAppTemp;\\n    }\\n}\\n"},{"filePath":"back/src/main/java/com.geeke/micro//dao","fileName":"MicroAppDao.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao;\\n\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeDao;\\n{{else}}\\nimport com.geeke.common.persistence.CrudDao;\\n{{/if}}\\nimport {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}};\\n\\n/**\\n * {{functionName}}DAO接口\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n@Mapper\\n{{if table.isTreeTable}}\\npublic interface {{table.className}}Dao extends TreeDao<{{table.className}}> {\\n{{else}}\\npublic interface {{table.className}}Dao extends CrudDao<{{table.className}}> {\\n{{/if}}\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.hasPassWordInput}}\\n    // 修改加密字段\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    /**\\n     * 修改 {{c.comments}}\\n     */\\n    public int update{{c.javaField | upperCase}}(@Param(\\"id\\")String id, @Param(\\"pass\\")String pass);\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n}","__config__":{"children":[]},"locked":true,"code":"package com.geeke.micro.dao;\\n\\nimport com.geeke.common.persistence.CrudDao;\\nimport com.geeke.micro.entity.MicroApp;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.annotations.Param;\\n\\n/**\\n * 应用管理DAO接口\\n * @author\\n * @version\\n */\\n@Mapper\\npublic interface MicroAppDao extends CrudDao<MicroApp> {}\\n"},{"filePath":"back/src/main/java/com.geeke/micro//entity","fileName":"MicroApp.java","source":"\\npackage {{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity;\\n\\n{{each table.importList i}}\\nimport {{i}};\\n{{/each}}\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\n{{if table.hasPassWordInput}}\\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n{{/if}}\\n\\n{{if table.isTreeTable}}\\nimport com.geeke.common.persistence.TreeEntity;\\n{{else}}\\nimport com.geeke.common.persistence.DataEntity;\\n{{/if}}\\n/**\\n * {{functionName}}Entity\\n * @author {{functionAuthor}}\\n * @version {{functionVersion}}\\n */\\n {{if table.isTreeTable}}\\npublic class {{table.className}} extends TreeEntity<{{table.className}}> {\\n{{else}}\\npublic class {{table.className}} extends DataEntity<{{table.className}}> {\\n{{/if}}\\n\\n\\tprivate static final long serialVersionUID = {{table.id}}L;\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t       {{if c.javaType && c.javaType.value == ''This''}}\\n    private {{table.className}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new {{table.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\t        \\n\\t        {{else if c.javaType && c.javaType.value == ''Custom''}}\\n\\tprivate {{c.customType.className}} {{c.javaField}}{{if c.defVal && c.defVal != ''''}}= new {{c.customType.className}}(\\"{{c.defVal}}\\"){{/if}};      // {{c.comments}}\\n\\t\\t\\t{{else if c.javaType && c.javaType.value == ''Password''}}\\n\\t\\t\\t// 密码字段\\n\\tprivate boolean  {{c.javaField}}Update;  \\t\\t\\t// 是否修改 {{c.comments}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n\\t\\t\\t// 其它字段\\n\\t\\t\\t{{else}}\\n        {{if c.javaType && c.javaType.value == ''Long''}}\\n  @JsonSerialize(using= ToStringSerializer.class)\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}L{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Double''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Float''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}f{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''java.math.BigDecimal''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= new BigDecimal(\\"{{c.defVal}}\\"){{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && c.javaType.value == ''Integer''}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= {{c.defVal}}{{/if}};\\t\\t// {{c.comments}}\\n        {{else if  c.javaType && (c.javaType.value == ''String'' || c.javaType.value == ''Date'' || c.javaType.value == ''Time'' || c.javaType.value == ''Month'')}}\\n  private {{c.simpleJavaType}} {{c.javaField}} {{if c.defVal && c.defVal != ''''}}= \\"{{c.defVal}}\\"{{/if}};\\t\\t// {{c.comments}}\\n        {{else}}\\n\\tprivate {{c.simpleJavaType}} {{c.javaField}};\\t\\t// {{c.comments}}\\n        {{/if}}\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t{{each table.childList c}}\\n\\tprivate List<{{c.className}}}} {{c.className | lowerCase}}List = Lists.newArrayList();\\t\\t// 子表列表\\n\\t{{/each}}\\n\\t\\n\\t// 构造方法\\n\\tpublic {{table.className}}() {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic {{table.className}}(String id){\\n\\t\\tsuper(id);\\n\\t}\\n\\t\\n\\t{{each table.columnList c}}\\n\\t\\t{{if table.parentExists && table.parentTableFk && table.parentTableFk != \\"id\\" && table.parentTableFk == c.name}}\\n\\tpublic {{table.className}}({{table.parentTable.className}} {{c.javaField}}){\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\n\\t// 生成get和set方法\\n\\t{{each table.columnList c}}\\n\\t\\t{{if c.isNotBaseField}}\\n\\t\\t\\t{{each c.simpleAnnotationList a}}\\n\\t@{{@ a}}\\n\\t\\t\\t{{/each}}\\n\\t\\t\\t{{if c.javaType && c.javaType.value == ''This''}}\\n\\tpublic {{table.className}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n\\n\\tpublic void set{{c.javaField | upperCase}}({{table.className}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n           {{else if c.javaType && c.javaType.value == ''Custom''}}   \\n    public {{c.customType.className}} get{{c.javaField | upperCase}}() {\\n        return {{c.javaField}};\\n    }\\n\\n    public void set{{c.javaField | upperCase}}({{c.customType.className}} {{c.javaField}}) {\\n        this.{{c.javaField}} = {{c.javaField}};\\n    }\\n            {{else}}\\n\\t\\t\\t    {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\t@JsonIgnore\\n\\t             {{/if}}\\t\\t     \\n\\tpublic {{c.simpleJavaType}} get{{c.javaField | upperCase}}() {\\n\\t\\treturn {{c.javaField}};\\n\\t}\\n                 {{if c.javaType && c.javaType.value == ''Password''}}\\n    @JsonDeserialize\\n                 {{/if}}\\n\\tpublic void set{{c.javaField | upperCase}}({{c.simpleJavaType}} {{c.javaField}}) {\\n\\t\\tthis.{{c.javaField}} = {{c.javaField}};\\n\\t}\\n\\t\\n\\t\\t\\t     {{if c.javaType && c.javaType.value == ''Password''}}  \\n\\tpublic boolean get{{c.javaField | upperCase}}Update() {\\n\\t\\treturn {{c.javaField}}Update;\\n\\t}\\n\\t\\n\\tpublic void set{{c.javaField | upperCase}}Update(boolean {{c.javaField}}Update) {\\n\\t\\tthis.{{c.javaField}}Update = {{c.javaField}}Update;\\n\\t}\\t\\n\\t             {{/if}}\\t\\t\\n\\t\\n\\t\\t\\t{{/if}}\\n\\t\\t{{/if}}\\n\\t{{/each}}\\n\\t{{each table.childList c}}\\n\\tpublic List<{{c.className}}}} get{{c.className}}List() {\\n\\t\\treturn {{c.className | lowerCase}}List;\\n\\t}\\n\\n\\tpublic void set{{c.className}}List(List<{{c.className}}}} {{c.className | lowerCase}}List) {\\n\\t\\tthis.{{c.className | lowerCase}}List = {{c.className | lowerCase}}List;\\n\\t}\\n\\t{{/each}}\\n\\t\\n\\t\\n\\t/**\\n     * 获取实体对应表名\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"{{table.name}}\\";\\n    }\\n    \\n    /**\\n     * 获取实体对应Id\\n    */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"{{table.id}}\\";\\n    }\\n    \\n    \\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        {{if table.delFlagExists}}\\n            return true;\\n        {{else}}\\n            return false;\\n        {{/if}}\\n    }\\n}\\n","__config__":{"children":[]},"locked":true,"code":"package com.geeke.micro.entity;\\n\\nimport com.fasterxml.jackson.annotation.JsonIgnore;\\nimport com.geeke.admin.entity.User;\\nimport com.geeke.common.persistence.DataEntity;\\nimport com.google.common.collect.Lists;\\nimport java.util.List;\\nimport javax.validation.constraints.NotNull;\\nimport org.hibernate.validator.constraints.Length;\\n\\n/**\\n * 应用管理Entity\\n * @author\\n * @version\\n */\\n\\npublic class MicroApp extends DataEntity<MicroApp> {\\n\\n    private static final long serialVersionUID = 1368089934395490306L;\\n\\n    private User developer; // 开发者\\n\\n    private String name; // 应用名\\n\\n    private String fullName; // 应用全称\\n\\n    private String isLocked = \\"0\\"; // 禁用\\n\\n    private String iconId; // 应用图标\\n\\n    private String appKey; // AppKey\\n\\n    // 构造方法\\n    public MicroApp() {\\n        super();\\n    }\\n\\n    public MicroApp(String id) {\\n        super(id);\\n    }\\n\\n    // 生成get和set方法\\n\\n    @NotNull(message = \\"开发者不能为空\\")\\n    public User getDeveloper() {\\n        return developer;\\n    }\\n\\n    public void setDeveloper(User developer) {\\n        this.developer = developer;\\n    }\\n\\n    @Length(min = 1, max = 128, message = \\"应用名长度必须介于 1 和 128 之间\\")\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    @Length(min = 1, max = 256, message = \\"应用全称长度必须介于 1 和 256 之间\\")\\n    public String getFullName() {\\n        return fullName;\\n    }\\n\\n    public void setFullName(String fullName) {\\n        this.fullName = fullName;\\n    }\\n\\n    @Length(min = 1, max = 1, message = \\"禁用长度必须介于 1 和 1 之间\\")\\n    public String getIsLocked() {\\n        return isLocked;\\n    }\\n\\n    public void setIsLocked(String isLocked) {\\n        this.isLocked = isLocked;\\n    }\\n\\n    @NotNull(message = \\"应用图标不能为空\\")\\n    public String getIconId() {\\n        return iconId;\\n    }\\n\\n    public void setIconId(String iconId) {\\n        this.iconId = iconId;\\n    }\\n\\n    @Length(min = 1, max = 40, message = \\"AppKey长度必须介于 1 和 40 之间\\")\\n    public String getAppKey() {\\n        return appKey;\\n    }\\n\\n    public void setAppKey(String appKey) {\\n        this.appKey = appKey;\\n    }\\n\\n    /**\\n     * 获取实体对应表名\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableName() {\\n        return \\"micro_app\\";\\n    }\\n\\n    /**\\n     * 获取实体对应Id\\n     */\\n    @Override\\n    @JsonIgnore\\n    public String getBusTableId() {\\n        return \\"1368089934395490306\\";\\n    }\\n\\n    /**\\n     * 获取实体表中是否存在del_flag字段\\n     */\\n    @JsonIgnore\\n    public boolean getBusTableHasDelFlag() {\\n        return true;\\n    }\\n}\\n"},{"filePath":"back/src/main/resources/mapper/micro/","fileName":"MicroAppDao.xml","source":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.dao.{{table.className}}Dao\\">\\n     <sql id=\\"{{table.className | lowerCase}}Columns\\">\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n       {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n        a.{{c.name}} AS \\"{{c.javaField}}.{{c.associatedField | camelCase ''_''}}\\",\\n            {{each c.childFields a}}\\n                {{if a.value !=  c.associatedField}}\\n                IFNULL({{c.javaField}}.{{a.value}},'''') AS \\"{{c.javaField}}.{{a.value | camelCase ''_''}}\\",\\n                {{/if}}\\n            {{/each}}\\n                 {{else}}\\n        a.{{c.name}} AS \\"{{c.javaField}}\\",\\n                 {{/if}}\\n            {{/each}}\\n        </trim>\\n    </sql>\\n   <sql id=\\"{{table.className | lowerCase}}Joins\\">\\n         {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Custom''}}\\n        LEFT JOIN {{c.customType.name}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n            {{else if c.javaType && c.javaType.value == ''This''}}\\n        LEFT JOIN {{c.currentSchemeTable}} {{c.javaField}} ON {{c.javaField}}.{{c.associatedField | camelCase ''_''}} = a.{{c.name}}\\n            {{/if}}\\n        {{/each}}\\n    </sql>\\n\\n    <select id=\\"get\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        WHERE a.id = #{id}\\n    </select>\\n\\n    <select id=\\"count\\" resultType=\\"int\\">\\n        SELECT COUNT(*) FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n    </select>\\n\\n    <select id=\\"listPage\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n        LIMIT #{limit} OFFSET #{offset}\\n    </select>\\n\\n    <select id=\\"listAll\\" resultType=\\"{{packageName}}.{{moduleName}}{{if subModuleName != \\"\\"}}.{{subModuleName}}{{/if}}.entity.{{table.className}}\\">\\n        SELECT\\n            <include refid=\\"{{table.className | lowerCase}}Columns\\"/>\\n        FROM {{table.name}} a\\n        <include refid=\\"{{table.className | lowerCase}}Joins\\"/>\\n        <where>\\n            1=1\\n            {{if table.idExists}}AND a.id > 0{{/if}}\\n            {{if table.delFlagExists}}AND a.del_flag = #{DEL_FLAG_NORMAL}{{/if}}\\n            <include refid=\\"Common.whereParams\\"/>\\n        </where>\\n        <choose>\\n            <when test=\\"order != null and order != ''''\\">\\n                ORDER BY ${order}\\n            </when>\\n            <otherwise>\\n                {{if table.orderColumns && table.orderColumns != \\"\\"}}\\n                ORDER BY {{table.orderColumns}}\\n                {{else if table.sortExists}}\\n                ORDER BY a.sort ASC\\n                {{else if table.updateDateExists}}\\n                ORDER BY a.update_date DESC\\n                {{else if table.createDateExists}}\\n                ORDER BY a.create_date DESC\\n                {{/if}}\\n            </otherwise>\\n        </choose>\\n    </select>\\n\\n{{if table.source == ''BASE TABLE''}}\\n    <insert id=\\"insert\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        {{/set}}\\n        </trim>\\n        ) VALUES (\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                    {{else}}\\n            #{ {{c.javaField}} },\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        )\\n    </insert>\\n\\n    <update id=\\"update\\">\\n        UPDATE {{table.name}} SET\\n            <trim suffixOverrides=\\",\\">\\n                {{each table.columnList c}}\\n                    {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                        {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            {{c.name}} = #{ {{c.javaField}}.{{c.associatedField | camelCase ''_''}} },\\n                        {{else}}\\n            {{c.name}} = #{ {{c.javaField}} },\\n                        {{/if}}\\n                    {{/if}}\\n                {{/each}}\\n            </trim>\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    </update>\\n\\n    <update id=\\"delete\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}} SET\\n        {{if table.updateByExists}}\\n            update_by = #{updateBy},\\n        {{/if}}\\n        {{if table.updateDateExists}}\\n            update_date = #{updateDate},\\n        {{/if}}\\n            del_flag = #{DEL_FLAG_DELETE}\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n    {{if table.parentExists}}\\n        {{each table.columnList c}}\\n            {{if table.parentTableFk == c.name}}\\n        <choose>\\n            <when test=\\"id !=null and id != ''''\\">\\n                WHERE id = #{id}\\n            </when>\\n            <otherwise>\\n                WHERE {{table.parentTableFk}} = #{ {{c.javaFieldId}} }\\n            </otherwise>\\n            {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n              and update_date = #{oldUpdateDate}\\n            {{/if}}\\n        </choose>\\n            {{/if}}\\n        {{/each}}\\n    {{else}}\\n        WHERE id = #{id}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          and update_date = #{oldUpdateDate}\\n        {{/if}}\\n    {{/if}}\\n    </update>\\n\\n    <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n        INSERT INTO {{table.name}}(\\n        <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n            {{c.name}},\\n                {{/if}}\\n            {{/each}}\\n        </trim>\\n        ) VALUES\\n        <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n        (\\n            <trim suffixOverrides=\\",\\">\\n            {{each table.columnList c}}\\n                {{if c.isInsert && c.isInsert == \\"1\\" && c.javaType.value != ''Password''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}},\\n                    {{else}}\\n            #{entity.{{c.javaField}}},\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n            </trim>\\n        )\\n        </foreach>\\n    </insert>\\n\\n    <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n        UPDATE {{table.name}}\\n       <set>\\n            {{each table.columnList c}}\\n                {{if c.isEdit && c.isEdit == \\"1\\" && c.javaType.value != ''Password'' && c.javaType.value != ''Code''}}\\n                    {{if c.javaType && (c.javaType.value == ''Custom'' || c.javaType.value == ''This'')}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}.{{c.associatedField | camelCase ''_''}}}\\n                </foreach>\\n            </trim>\\n                        {{else}}\\n            <trim prefix=\\"{{c.name}}=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.{{c.javaField}}}\\n                </foreach>\\n            </trim>\\n                    {{/if}}\\n                {{/if}}\\n            {{/each}}\\n        </set>\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n        \\n    </update>\\n\\n\\n    <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    {{if table.delFlagExists}}\\n        UPDATE {{table.name}}\\n       <set>\\n            <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then 1\\n                </foreach>\\n            </trim>\\n            {{if table.updateByExists}}\\n            <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateBy}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n            {{if table.updateDateExists}}\\n            <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n                <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n                    when id=#{entity.id} then #{entity.updateDate}\\n                </foreach>\\n            </trim>\\n            {{/if}}\\n        </set>\\n    {{else}}\\n        DELETE FROM {{table.name}}\\n    {{/if}}\\n        {{if table.checkVersion == ''1'' && table.updateDateExists}}\\n          WHERE\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n            id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n        </foreach>\\n        {{else}}\\n        WHERE id IN\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\",\\" open=\\"(\\" close=\\")\\">\\n            #{entity.id}\\n        </foreach>\\n        {{/if}}\\n    </update>\\n    {{if table.hasPassWordInput}}\\n        {{each table.columnList c}}\\n            {{if c.javaType && c.javaType.value == ''Password''}}\\n    <update id=\\"update{{c.javaField | upperCase}}\\">\\n        UPDATE {{table.name}} SET\\n            {{c.name}} = #{pass}\\n        WHERE id = #{id}\\n    </update>\\n            {{/if}}\\n        {{/each}}\\n    {{/if}}\\n{{/if}}\\n</mapper>\\n","__config__":{"children":[]},"locked":true,"code":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<!DOCTYPE mapper PUBLIC \\"-//mybatis.org//DTD Mapper 3.0//EN\\" \\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\">\\n<mapper namespace=\\"com.geeke.micro.dao.MicroAppDao\\">\\n  <sql id=\\"microAppColumns\\">\\n    <trim suffixOverrides=\\",\\">\\n      a.id AS \\"id\\",\\n      a.developer_id AS \\"developer.id\\",\\n      IFNULL(developer.name,'''') AS \\"developer.name\\",\\n      a.name AS \\"name\\",\\n      a.full_name AS \\"fullName\\",\\n      a.is_locked AS \\"isLocked\\",\\n      a.remarks AS \\"remarks\\",\\n      a.create_by AS \\"createBy\\",\\n      a.create_date AS \\"createDate\\",\\n      a.update_by AS \\"updateBy\\",\\n      a.update_date AS \\"updateDate\\",\\n      a.del_flag AS \\"delFlag\\",\\n      a.icon_id AS \\"iconId\\",\\n      a.app_key AS \\"appKey\\",\\n    </trim>\\n  </sql>\\n  <sql id=\\"microAppJoins\\">\\n    LEFT JOIN sys_user developer ON developer.id = a.developer_id\\n  </sql>\\n  <select id=\\"get\\" resultType=\\"com.geeke.micro.entity.MicroApp\\">\\n    SELECT\\n    <include refid=\\"microAppColumns\\" />\\n    FROM micro_app a\\n    <include refid=\\"microAppJoins\\" />\\n    WHERE a.id = #{id}\\n  </select>\\n  <select id=\\"count\\" resultType=\\"int\\">\\n    SELECT COUNT(*) FROM micro_app a\\n    <include refid=\\"microAppJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n  </select>\\n  <select id=\\"listPage\\" resultType=\\"com.geeke.micro.entity.MicroApp\\">\\n    SELECT\\n    <include refid=\\"microAppColumns\\" />\\n    FROM micro_app a\\n    <include refid=\\"microAppJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n    LIMIT #{limit} OFFSET #{offset}\\n  </select>\\n  <select id=\\"listAll\\" resultType=\\"com.geeke.micro.entity.MicroApp\\">\\n    SELECT\\n    <include refid=\\"microAppColumns\\" />\\n    FROM micro_app a\\n    <include refid=\\"microAppJoins\\" />\\n    <where>\\n      1=1\\n      AND a.id > 0\\n      AND a.del_flag = #{DEL_FLAG_NORMAL}\\n      <include refid=\\"Common.whereParams\\" />\\n    </where>\\n    <choose>\\n      <when test=\\"order != null and order != ''''\\">\\n        ORDER BY ${order}\\n      </when>\\n      <otherwise>\\n        ORDER BY a.update_date DESC\\n      </otherwise>\\n    </choose>\\n  </select>\\n  <insert id=\\"insert\\">\\n    INSERT INTO micro_app(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      developer_id,\\n      name,\\n      full_name,\\n      is_locked,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      icon_id,\\n      app_key,\\n    </trim>\\n    ) VALUES (\\n    <trim suffixOverrides=\\",\\">\\n      #{ id },\\n      #{ developer.id },\\n      #{ name },\\n      #{ fullName },\\n      #{ isLocked },\\n      #{ remarks },\\n      #{ createBy },\\n      #{ createDate },\\n      #{ updateBy },\\n      #{ updateDate },\\n      #{ delFlag },\\n      #{ iconId },\\n      #{ appKey },\\n    </trim>\\n    )\\n  </insert>\\n  <update id=\\"update\\">\\n    UPDATE micro_app SET\\n    <trim suffixOverrides=\\",\\">\\n      developer_id = #{ developer.id },\\n      name = #{ name },\\n      full_name = #{ fullName },\\n      is_locked = #{ isLocked },\\n      remarks = #{ remarks },\\n      update_by = #{ updateBy },\\n      update_date = #{ updateDate },\\n      icon_id = #{ iconId },\\n      app_key = #{ appKey },\\n    </trim>\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <update id=\\"delete\\">\\n    UPDATE micro_app SET\\n    update_by = #{updateBy},\\n    update_date = #{updateDate},\\n    del_flag = #{DEL_FLAG_DELETE}\\n    WHERE id = #{id}\\n    and update_date = #{oldUpdateDate}\\n  </update>\\n  <insert id=\\"bulkInsert\\" parameterType=\\"java.util.List\\">\\n    INSERT INTO micro_app(\\n    <trim suffixOverrides=\\",\\">\\n      id,\\n      developer_id,\\n      name,\\n      full_name,\\n      is_locked,\\n      remarks,\\n      create_by,\\n      create_date,\\n      update_by,\\n      update_date,\\n      del_flag,\\n      icon_id,\\n      app_key,\\n    </trim>\\n    ) VALUES\\n    <foreach collection=\\"entitys\\" index=\\"index\\" item=\\"entity\\" open=\\"\\" separator=\\",\\" close=\\"\\">\\n      (\\n      <trim suffixOverrides=\\",\\">\\n        #{entity.id},\\n        #{entity.developer.id},\\n        #{entity.name},\\n        #{entity.fullName},\\n        #{entity.isLocked},\\n        #{entity.remarks},\\n        #{entity.createBy},\\n        #{entity.createDate},\\n        #{entity.updateBy},\\n        #{entity.updateDate},\\n        #{entity.delFlag},\\n        #{entity.iconId},\\n        #{entity.appKey},\\n      </trim>\\n      )\\n    </foreach>\\n  </insert>\\n  <update id=\\"bulkUpdate\\" parameterType=\\"java.util.List\\">\\n    UPDATE micro_app\\n    <set>\\n      <trim prefix=\\"developer_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.developer.id}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.name}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"full_name=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.fullName}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"is_locked=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.isLocked}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"remarks=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.remarks}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"icon_id=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.iconId}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"app_key=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.appKey}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n  <update id=\\"bulkDelete\\" parameterType=\\"java.util.List\\">\\n    UPDATE micro_app\\n    <set>\\n      <trim prefix=\\"del_flag=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then 1\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_by=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateBy}\\n        </foreach>\\n      </trim>\\n      <trim prefix=\\"update_date=case\\" suffix=\\"end,\\">\\n        <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\">\\n          when id=#{entity.id} then #{entity.updateDate}\\n        </foreach>\\n      </trim>\\n    </set>\\n    WHERE\\n    <foreach collection=\\"entitys\\" item=\\"entity\\" index=\\"index\\" separator=\\"OR\\" open=\\"(\\" close=\\")\\">\\n      id = #{entity.id} and update_date = #{entity.oldUpdateDate}\\n    </foreach>\\n  </update>\\n</mapper>"}]}', remarks='', create_by='超级管理员(super)', create_date='2023-01-30 16:25:29', update_by='超级管理员(super)', update_date='2023-05-22 14:25:55', del_flag='0'
WHERE id=1368089934395490304;
UPDATE dc_clien_scheme
SET project_id=88888888, name='应用', scheme_id=1368089934395490304, template_id=1318709630237024338, template_json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","pages":[{"filePath":"client/src/views/micro//microApp","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}} \\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [ {{@ table.filter }} ],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = [{{@ table.filter}}]\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = [{{@ table.filter}}]\\n        // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [list{{table.className}}RespData, listPermissionRespData] = await Promise.all([\\n          list{{table.className}}Page(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if(list{{table.className}}RespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = list{{table.className}}RespData.data.total\\n          this.tableData = list{{table.className}}RespData.data.rows ? list{{table.className}}RespData.data.rows :[]\\n          this.permission.view = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : list{{table.className}}RespData)\\n        }\\n        this.resetLoad()\\n      } catch(error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.46251171279611,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.08386336942895,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.79825800414977,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.46269633356056,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.9343443321748,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [_this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [_this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[{"name":"id","javaType":"String","comments":"标识","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"developer_id","javaType":"Custom","comments":"开发者","id":"custom","component":"下拉选择","tag":"el-select","value":"custom","queryType":"=","types":["Custom","This"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"in","label":"在列表"},{"value":"not in","label":"不在列表"}],"attribute":{"labelField":"name","className":"User","fieldId":"id","tableId":"1368089934395490306","apiPath":"admin/user","filter":""}},{"name":"name","javaType":"String","comments":"应用名","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"full_name","javaType":"String","comments":"应用全称","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"is_locked","javaType":"String","comments":"禁用","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"remarks","javaType":"Mutilple","comments":"应用描述","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_by","javaType":"String","comments":"创建者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"create_date","javaType":"Date","comments":"创建时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}},{"name":"update_by","javaType":"String","comments":"更新者","id":"string","component":"单行文本","tag":"el-input","types":["String","Code","Mutilple","Boolean"],"queryType":"like","operations":[{"value":"like","label":"包含"},{"value":"not like","label":"不包含"},{"value":"=","label":"等于"},{"value":"<>","label":"不等于"}],"attribute":{}},{"name":"update_date","javaType":"Date","comments":"更新时间","id":"date","component":"日期","tag":"el-date-picker","value":"date","queryType":"=","types":["Date"],"operations":[{"value":"=","label":"等于"},{"value":"<>","label":"不等于"},{"value":"between","label":"介于"},{"value":"not between","label":"不介于"}],"attribute":{"type":"datetime","value-format":"yyyy-MM-dd HH:mm:ss"}}],"formId":127,"renderKey":127.02690361279011,"componentName":"ElConditionPanel127","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":151,"renderKey":151.72078198781756,"componentName":"SingleInput151"},"__slot__":{"prepend":"","append":""},"__vModel__":"appKey","v-model":"queryFormData.appKey",":maxLength":10,"placeholder":"请输入AppKey","prefix-icon":"","suffix-icon":"","clearable":true,"autocomplete":"undefined"}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":150,"renderKey":150.75941736392699,"componentName":"SingleInput150","field":{"id":"1369362842443366402","name":"app_key","createBy":"超级管理员(super)","createDate":"2023-01-31 13:03:47","updateBy":"超级管理员(super)","updateDate":"2023-01-31 13:25:11","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"AppKey","jdbcType":"varchar(10)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"appKey","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":10,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=10, message=\\"AppKey长度必须介于 1 和 10 之间\\")"],"isNotBaseField":true,"isEditableField":true,"isType":false,"isChecked":false}},"label":"AppKey","v-if":null,"v-show":null},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","operator":"like","isInner":true,"formId":129,"renderKey":129.66265738348804,"componentName":"SingleInput129"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"queryFormData.name",":maxLength":128,"placeholder":"请输入应用名","prefix-icon":"","suffix-icon":"","clearable":true}],"id":"formItemQ","span":6,"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":128,"renderKey":128.2594753832535,"componentName":"SingleInput128","field":{"id":"1368089934395490310","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用名","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"应用名长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"应用名","v-if":null,"v-show":null},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"","loopArray":"developerOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","operator":"=","optWatchs":[],"isInner":true,"formId":149,"renderKey":149.44831554041022,"componentName":"SelectInput149"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"developer","v-model":"queryFormData.developer",":style":{"width":"100%"},"placeholder":"请选择开发者","clearable":true,"value-key":"id","filterable":true}],"id":"formItemQ","span":6,"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":148,"renderKey":148.1711676589574,"componentName":"SelectInput148","field":{"id":"1368089934395490309","name":"developer_id","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 17:20:09","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"开发者","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"developer","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"开发者不能为空\\")"],"isNotBaseField":true,"isEditableField":true,"dataLength":21,"decimalLenth":0,"isType":false,"isChecked":false}},"label":"开发者","v-if":null,"v-show":null},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"static","apiFn":"","apiFrom":"","optionParams":"","loopArray":"selectOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.label","optionValue":"item.value","document":"https://element.eleme.cn/#/zh-CN/component/select","operator":"=","optWatchs":[],"isInner":true,"formId":146,"renderKey":146.37091924041388,"componentName":"SelectInput146"},"__slot__":{"options":[{"label":"启用中","value":"0"},{"label":"已禁用","value":"1"}]},"__vModel__":"isLocked","v-model":"queryFormData.isLocked",":style":{"width":"100%"},"placeholder":"请选择","clearable":true,"value-key":"","filterable":true}],"id":"formItemQ","span":6,"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","field":{"id":"1368089934395490312","name":"is_locked","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"禁用","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"isLocked","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"禁用长度必须介于 1 和 1 之间\\")"],"isNotBaseField":true,"isEditableField":true,"isType":false,"isChecked":false},"formId":145,"renderKey":145.87283283403468,"componentName":"SelectInput145"},"label":"禁用","v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":108,"renderKey":108.52444451593873,"componentName":"ElQueryForm108","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":""},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":111,"renderKey":111.17572051124648,"componentName":"Button111","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\n  var _this = this;\\n  var isToolTip = false;\\n  isToolTip = this.activeData.disabled === ''undefined'';\\n  function onTooltipChange(val) {\\n    this.activeData.disabled = val ? ''undefined'' : true;\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮文字\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].icon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮类型\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否提示\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: isToolTip,\\n      callback: function callback($$v) {\\n        isToolTip = $$v;\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onTooltipChange.bind(this)\\n    }\\n  })]), isToolTip && h(\\"ToolTip\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","formId":110,"renderKey":110.20574909972895,"componentName":"Button110","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":109,"renderKey":109.95984262566932,"componentName":"ElRow109","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":147,"renderKey":147.6160775292063,"componentName":"ElTableColumn147"},"tree-node":true,"resizable":true,"visible":"undefined","label":"AppKey","prop":"appKey","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":"undefined","show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":131,"renderKey":131.70863976266253,"componentName":"ElTableColumn131","field":{"id":"1368089934395490310","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用名","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"应用名长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"应用名","prop":"name","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":132,"renderKey":132.0708237388782,"componentName":"ElTableColumn132","field":{"id":"1368089934395490311","name":"full_name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用全称","jdbcType":"varchar(256)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"fullName","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":256,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=256, message=\\"应用全称长度必须介于 1 和 256 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"应用全称","prop":"fullName","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":130,"renderKey":130.19691835048133,"componentName":"ElTableColumn130","field":{"id":"1368089934395490309","name":"developer.name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"开发者.名称","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"developer.name","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"开发者不能为空\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"开发者","prop":"developer.name","width":null,"min-width":"120px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":"switch (cellValue) {\\n  case \\"1\\":\\n    return \\"<span style=\\" + \\"color:red\\" + \\">√</span>\\"\\n  case \\"0\\":\\n    return \\"\\"\\n  default:\\n    return \\"\\"\\n }","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":133,"renderKey":133.57901909362795,"componentName":"ElTableColumn133","field":{"id":"1368089934395490312","name":"is_locked","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"禁用","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"isLocked","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"禁用长度必须介于 1 和 1 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":"undefined","label":"禁用","prop":"isLocked","width":"80px","min-width":"70px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":134,"renderKey":134.37107692328163,"componentName":"ElTableColumn134","field":{"id":"1368089934395490313","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用描述","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true}},"tree-node":true,"resizable":true,"visible":false,"label":"应用描述","prop":"remarks","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":135,"renderKey":135.1306412125517,"componentName":"ElTableColumn135","field":{"id":"1368089934395490314","name":"create_by","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"创建者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"创建者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"创建者","prop":"createBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":136,"renderKey":136.93486983369218,"componentName":"ElTableColumn136","field":{"id":"1368089934395490315","name":"create_date","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"创建时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"createDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"0","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"创建时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"创建时间","prop":"createDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":137,"renderKey":137.2938969755171,"componentName":"ElTableColumn137","field":{"id":"1368089934395490316","name":"update_by","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"更新者","jdbcType":"varchar(64)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateBy","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":64,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=64, message=\\"更新者长度必须介于 1 和 64 之间\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"更新者","prop":"updateBy","width":null,"min-width":"180px","fixed":"undefined","align":"left","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableColumn","label":"表格列","tagIcon":"table-column","designLayout":"function tableColLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"fixed\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var visibleIcon = element.visible !== ''undefined'' ? h(\\"svg-icon\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"icon-class\\": \\"invisible\\"\\r\\n      },\\r\\n      \\"class\\": ''flag-icon''\\r\\n    }) : '''';\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    var required;\\r\\n    if (config.children && config.children.length > 0) {\\r\\n      required = config.children[0].required ? h(\\"span\\", {\\r\\n        \\"style\\": {\\r\\n          color: ''#F56C6C''\\r\\n        }\\r\\n      }, [\\"*\\"]) : '''';\\r\\n    }\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": ''table-column-container'',\\r\\n      \\"style\\": {\\r\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\r\\n        ''min-width'': element[''min-width'']\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [fixedIcon, visibleIcon, h(\\"el-table\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"data\\": [{}],\\r\\n        \\"row-class-name\\": ''table-row''\\r\\n      }\\r\\n    }, [h(\\"el-table-column\\", {\\r\\n      \\"key\\": Math.random(),\\r\\n      \\"attrs\\": {\\r\\n        \\"sortable\\": element.sortable === ''undefined'' ? false : true,\\r\\n        \\"fixed\\": element.fixed === ''undefined'' ? '''' : element.fixed,\\r\\n        \\"align\\": element.align,\\r\\n        \\"header-align\\": element[''header-align'']\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": ''header'',\\r\\n      \\"attrs\\": {\\r\\n        \\"slot-scope\\": \\"scope\\"\\r\\n      }\\r\\n    }, [required, element.label]), child ? child : ''******''])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\r\\n  }","outputHtml":"function tableColLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var Tag = config.tag;\\r\\n    var attrs = '''';\\r\\n    if (parent.__config__.elName == ''QueryTable'') {\\r\\n      attrs = \\":field=\\\\\\"\\".concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].field\\\\\\"\\\\n      :title=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].title\\\\\\"\\\\n      :width=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].width\\\\\\"\\\\n      :visible=\\\\\\"\\").concat(parent.ref, \\"Columns[''\\").concat(scheme.__config__.formId, \\"''].visible\\\\\\"\\\\n      :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\"\\") + this.getAttrs(scheme, isView, [''prop'', ''label'', ''width'', ''visible'']);\\r\\n    } else {\\r\\n      attrs = \\"field=''\\".concat(scheme.prop, \\"'' title=''\\").concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''prop'', ''label'']);\\r\\n    }\\r\\n    var str;\\r\\n    if (scheme.__config__.children && scheme.__config__.children.length > 0) {\\r\\n      scheme.__config__.parentTableDate = parent['':data''];\\r\\n      var children = this.createChildren(scheme, parent, isView);\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template v-slot=''{row, rowIndex}''>\\\\n                  \\").concat(children[0], \\"\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else if (config[''data-render'']) {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                <template slot-scope=''{row, rowIndex}''>\\\\n                  <div v-html=''((cellValue, row, index) => { \\").concat(config[''data-render''], \\" })(row.\\").concat(scheme.prop, \\", row, rowIndex)''></div>\\\\n                </template>\\\\n             </\\").concat(Tag, \\">\\");\\r\\n    } else {\\r\\n      str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(Tag, \\">\\");\\r\\n    }\\r\\n    return str;\\r\\n  }","propertyLayout":"function tableColLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    // 在change中获取到整条对象数据\\r\\n    if (this.activeData != null && this.activeData.label != null && this.activeData.label !== '''') {\\r\\n      // 绑定表格列名/formItem标题\\r\\n      this.activeData.label = field.comments;\\r\\n    }\\r\\n    // 编辑表格设置初始最小列宽\\r\\n    if (this.activeParent.__config__.elName === ''QueryTable'') {\\r\\n      var javaType = field.javaType.value;\\r\\n      this.activeData[''min-width''] = ''180px''; // 默认最小宽度\\r\\n      // TODO 根据字段类型调整数据对齐方式\\r\\n      switch (javaType) {\\r\\n        case ''String'':\\r\\n          this.activeData.align = ''left'';\\r\\n          if (field.dataLength === 1) {\\r\\n            this.activeData[''min-width''] = ''70px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Code'':\\r\\n        case ''Date'':\\r\\n          this.activeData.align = ''right'';\\r\\n          if (field.dataLength > 10) {\\r\\n            // 日期时间 yyyy-MM-dd HH:mm:ss\\r\\n            this.activeData[''min-width''] = ''160px'';\\r\\n          } else {\\r\\n            // 日期 yyyy-MM-dd\\r\\n            this.activeData[''min-width''] = ''120px'';\\r\\n          }\\r\\n          break;\\r\\n        case ''Time'':\\r\\n          this.activeData.align = ''right'';\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          break;\\r\\n        case ''java.math.BigDecimal'':\\r\\n          this.activeData[''min-width''] = ''100px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Month'':\\r\\n        case ''Double'':\\r\\n        case ''Float'':\\r\\n        case ''Integer'':\\r\\n        case ''Long'':\\r\\n          this.activeData[''min-width''] = ''80px'';\\r\\n          this.activeData.align = ''right'';\\r\\n          break;\\r\\n        case ''Custom'':\\r\\n        case ''This'':\\r\\n          this.activeData.align = ''center'';\\r\\n          this.activeData[''min-width''] = ''120px'';\\r\\n          break;\\r\\n        default:\\r\\n          this.activeData.align = ''left'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''prop'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.prop,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"prop\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入列名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式化\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''data-render'')\\r\\n    }\\r\\n  }), h(\\"FormatterDialog\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__[''data-render''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, ''data-render'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.activeParent.__config__ && this.activeParent.__config__.elName === ''QueryTable'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否排序\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''sortable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.sortable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"sortable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示tooltip\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''show-overflow'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''show-overflow''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''show-overflow'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.width,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最小宽度\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''min-width'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''min-width''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"固定列\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''fixed'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.fixed,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"fixed\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"undefined\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E0D\\\\u56FA\\\\u5B9A\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u4FA7\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u4FA7\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表格行对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.align,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"表头对齐\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''header-align'')\\r\\n    }\\r\\n  }), h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"mini\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''header-align''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"left\\"\\r\\n    }\\r\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"center\\"\\r\\n    }\\r\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"right\\"\\r\\n    }\\r\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认显示\\",\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''visible'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.visible,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"visible\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''tableQ.tableColumn'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])])]);\\r\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\r\\n    if (!this.validatenull(scheme.label)) {\\r\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.prop)) {\\r\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\r\\n    }\\r\\n    if (!this.validatenull(scheme.width)) {\\r\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\r\\n    }\\r\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\r\\n    var index = parent.__config__.children.findIndex(function (children) {\\r\\n      return children.__config__.formId === scheme.__config__.formId;\\r\\n    });\\r\\n    list.push(\\"order: \\".concat(index)); // TODO\\r\\n    list.push(''},'');\\r\\n    return list;\\r\\n  }","tag":"ux-table-column","data-render":null,"document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":138,"renderKey":138.03034348956805,"componentName":"ElTableColumn138","field":{"id":"1368089934395490317","name":"update_date","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"更新时间","jdbcType":"varchar(24)","javaType":{"id":"8110","name":"Date","value":"Date"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"updateDate","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":24,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"更新时间不能为空\\")"],"isNotBaseField":false,"isEditableField":false}},"tree-node":true,"resizable":true,"visible":false,"label":"更新时间","prop":"updateDate","width":null,"min-width":"160px","fixed":"undefined","align":"right","header-align":"center","sortable":true,"show-overflow":true,"v-if":null},{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":119,"renderKey":119.91584943676851,"componentName":"ViewColumnsSelect119","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":117,"renderKey":117.94459849233819,"componentName":"ElPopover117","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.80204589631406,"componentName":"IconButton118"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":120,"renderKey":120.99308197488548,"componentName":"IconButton120","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.23031507843295,"componentName":"TableOptColumnHeader115","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":121,"renderKey":121.90536209441461,"componentName":"IconButton121","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":122,"renderKey":122.66478246681099,"componentName":"IconButton122","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":123,"renderKey":123.85268543353997,"componentName":"IconButton123","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.80794715895684,"componentName":"IconButton124","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":125,"renderKey":125.3980851069734,"componentName":"IconButton125","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.84635625741926,"componentName":"TableOptColumnMain116","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":114,"renderKey":114.23998415707428,"componentName":"ElTableOptColumn114","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"140px","min-width":"140px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","formId":112,"renderKey":112.46469119130208,"componentName":"QueryTable112","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"row","document":"https://element.eleme.cn/#/zh-CN/component/pagination","formId":113,"renderKey":113.96381501978117,"componentName":"ElPagination113","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":151,"locked":true,"version":18,"code":"<template>\\n  <el-row class=\\"dc-container\\" v-loading=\\"loading\\">\\n    <history ref=\\"history\\" :bussObject=\\"curentRow\\"></history>\\n    <edit-form\\n      ref=\\"editForm\\"\\n      v-on:save-finished=\\"getList\\"\\n      v-on:before-load=\\"setLoad\\"\\n      v-on:after-load=\\"resetLoad\\"\\n      :permission=\\"permission\\"\\n    ></edit-form>\\n    <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"start\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n      <el-col :span=\\"24\\">\\n        <query-tag\\n          ref=\\"queryTag\\"\\n          v-model=\\"queryEditObject\\"\\n          :moreParm=\\"moreParm\\"\\n          :routerId=\\"$route && $route.meta.routerId\\"\\n          :isQueryConditionPanel=\\"isQueryConditionPanel\\"\\n          v-on:queryTagPanel=\\"onQueryTagPanel\\"\\n          v-on:queryTagClick=\\"onQueryTagClick\\"\\n          v-on:search=\\"onSearch\\"\\n          class=\\"dc-query-tag_ElConditionTag\\"\\n        ></query-tag>\\n      </el-col>\\n      <el-col :span=\\"6\\">\\n        <div style=\\"text-align: right\\">\\n          <el-button-group class=\\"dc-el-button-group_ButtonGroup\\">\\n            <el-tooltip effect=\\"dark\\" content=\\"搜索\\" placement=\\"top\\">\\n              <el-button v-on:click=\\"onSearch\\" type=\\"primary\\" icon=\\"el-icon-search\\"></el-button>\\n            </el-tooltip>\\n            <el-tooltip effect=\\"dark\\" content=\\"重置\\" placement=\\"top\\">\\n              <el-button\\n                v-on:click=\\"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()\\"\\n                type=\\"primary\\"\\n                icon=\\"el-icon-refresh-right\\"\\n              ></el-button>\\n            </el-tooltip>\\n            <el-tooltip effect=\\"dark\\" content=\\"更多\\" placement=\\"top\\">\\n              <el-button v-on:click=\\"onQueryConditionPanel(''query'')\\" type=\\"primary\\" icon=\\"el-icon-d-arrow-right\\"></el-button>\\n            </el-tooltip>\\n          </el-button-group>\\n        </div>\\n      </el-col>\\n    </el-row>\\n    <query-condition-panel\\n      v-if=\\"isQueryConditionPanel\\"\\n      ref=\\"conditionPanel\\"\\n      :conditionColumns=\\"\\n        metadata.find((item) => {\\n          return item.type == ''main''\\n        }).conditionPanel\\n      \\"\\n      v-model=\\"moreParm\\"\\n      :routerId=\\"$route.meta.routerId\\"\\n      class=\\"dc-query-condition-panel_ElConditionPanel\\"\\n    ></query-condition-panel>\\n    <el-form\\n      ref=\\"queryForm\\"\\n      :model=\\"queryFormData\\"\\n      label-width=\\"100px\\"\\n      v-if=\\"!isQueryConditionPanel\\"\\n      class=\\"dc-el-form_ElQueryForm\\"\\n    >\\n      <el-row>\\n        <el-col :span=\\"6\\">\\n          <el-form-item prop=\\"appKey\\" label=\\"AppKey\\" class=\\"dc-el-form-item_SingleInput\\">\\n            <el-input\\n              v-model=\\"queryFormData.appKey\\"\\n              :maxLength=\\"10\\"\\n              placeholder=\\"请输入AppKey\\"\\n              clearable\\n              class=\\"dc-el-input_SingleInput\\"\\n            ></el-input>\\n          </el-form-item>\\n        </el-col>\\n        <el-col :span=\\"6\\">\\n          <el-form-item prop=\\"name\\" label=\\"应用名\\" class=\\"dc-el-form-item_SingleInput\\">\\n            <el-input\\n              v-model=\\"queryFormData.name\\"\\n              :maxLength=\\"128\\"\\n              placeholder=\\"请输入应用名\\"\\n              clearable\\n              class=\\"dc-el-input_SingleInput\\"\\n            ></el-input>\\n          </el-form-item>\\n        </el-col>\\n        <el-col :span=\\"6\\">\\n          <el-form-item prop=\\"developer\\" label=\\"开发者\\" class=\\"dc-el-form-item_SelectInput\\">\\n            <el-select\\n              v-model=\\"queryFormData.developer\\"\\n              :style=\\"{ width: ''100%'' }\\"\\n              placeholder=\\"请选择开发者\\"\\n              clearable\\n              value-key=\\"id\\"\\n              filterable\\n              class=\\"dc-el-select_SelectInput\\"\\n            >\\n              <el-option v-for=\\"(item, index) in developerOptions\\" :key=\\"index\\" :label=\\"item.name\\" :value=\\"item\\"></el-option>\\n            </el-select>\\n          </el-form-item>\\n        </el-col>\\n        <el-col :span=\\"6\\">\\n          <el-form-item prop=\\"isLocked\\" label=\\"禁用\\" class=\\"dc-el-form-item_SelectInput\\">\\n            <el-select\\n              v-model=\\"queryFormData.isLocked\\"\\n              :style=\\"{ width: ''100%'' }\\"\\n              placeholder=\\"请选择\\"\\n              clearable\\n              filterable\\n              class=\\"dc-el-select_SelectInput\\"\\n            >\\n              <el-option\\n                v-for=\\"(item, index) in selectOptions\\"\\n                :key=\\"index\\"\\n                :label=\\"item.label\\"\\n                :value=\\"item.value\\"\\n              ></el-option>\\n            </el-select>\\n          </el-form-item>\\n        </el-col>\\n      </el-row>\\n    </el-form>\\n    <el-row gutter=\\"0\\" type=\\"flex\\" justify=\\"end\\" align=\\"top\\" class=\\"dc-el-row_ElRow\\">\\n      <el-tooltip v-show=\\"permission.add\\" disabled class=\\"dc-el-tooltip_Button\\">\\n        <el-button type=\\"primary\\" icon=\\"el-icon-plus\\" v-on:click=\\"onCreate\\">添加</el-button>\\n      </el-tooltip>\\n    </el-row>\\n    <ux-grid\\n      column-key\\n      ref=\\"table\\"\\n      :data=\\"tableData\\"\\n      border\\n      v-on:sort-change=\\"onSortChange\\"\\n      v-on:header-dragend=\\"onWidthChange($refs.table)\\"\\n      :tree-config=\\"{ children: '''', indent: 20, accordion: false, line: false, showIcon: true, iconOpen: '''', iconClose: '''' }\\"\\n      class=\\"dc-ux-grid_QueryTable\\"\\n    >\\n      <ux-table-column\\n        :field=\\"tableColumns[''147''].field\\"\\n        :title=\\"tableColumns[''147''].title\\"\\n        :width=\\"tableColumns[''147''].width\\"\\n        :visible=\\"tableColumns[''147''].visible\\"\\n        :params=\\"{ sortId: ''147'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''131''].field\\"\\n        :title=\\"tableColumns[''131''].title\\"\\n        :width=\\"tableColumns[''131''].width\\"\\n        :visible=\\"tableColumns[''131''].visible\\"\\n        :params=\\"{ sortId: ''131'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''132''].field\\"\\n        :title=\\"tableColumns[''132''].title\\"\\n        :width=\\"tableColumns[''132''].width\\"\\n        :visible=\\"tableColumns[''132''].visible\\"\\n        :params=\\"{ sortId: ''132'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''130''].field\\"\\n        :title=\\"tableColumns[''130''].title\\"\\n        :width=\\"tableColumns[''130''].width\\"\\n        :visible=\\"tableColumns[''130''].visible\\"\\n        :params=\\"{ sortId: ''130'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"120px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''133''].field\\"\\n        :title=\\"tableColumns[''133''].title\\"\\n        :width=\\"tableColumns[''133''].width\\"\\n        :visible=\\"tableColumns[''133''].visible\\"\\n        :params=\\"{ sortId: ''133'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"70px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      >\\n        <template slot-scope=\\"{ row, rowIndex }\\">\\n          <div\\n            v-html=\\"\\n              ((cellValue, row, index) => {\\n                switch (cellValue) {\\n                  case ''1'':\\n                    return ''<span style='' + ''color:red'' + ''>√</span>''\\n                  case ''0'':\\n                    return ''''\\n                  default:\\n                    return ''''\\n                }\\n              })(row.isLocked, row, rowIndex)\\n            \\"\\n          ></div>\\n        </template>\\n      </ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''134''].field\\"\\n        :title=\\"tableColumns[''134''].title\\"\\n        :width=\\"tableColumns[''134''].width\\"\\n        :visible=\\"tableColumns[''134''].visible\\"\\n        :params=\\"{ sortId: ''134'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''135''].field\\"\\n        :title=\\"tableColumns[''135''].title\\"\\n        :width=\\"tableColumns[''135''].width\\"\\n        :visible=\\"tableColumns[''135''].visible\\"\\n        :params=\\"{ sortId: ''135'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''136''].field\\"\\n        :title=\\"tableColumns[''136''].title\\"\\n        :width=\\"tableColumns[''136''].width\\"\\n        :visible=\\"tableColumns[''136''].visible\\"\\n        :params=\\"{ sortId: ''136'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"160px\\"\\n        align=\\"right\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''137''].field\\"\\n        :title=\\"tableColumns[''137''].title\\"\\n        :width=\\"tableColumns[''137''].width\\"\\n        :visible=\\"tableColumns[''137''].visible\\"\\n        :params=\\"{ sortId: ''137'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"180px\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        :field=\\"tableColumns[''138''].field\\"\\n        :title=\\"tableColumns[''138''].title\\"\\n        :width=\\"tableColumns[''138''].width\\"\\n        :visible=\\"tableColumns[''138''].visible\\"\\n        :params=\\"{ sortId: ''138'' }\\"\\n        tree-node\\n        resizable\\n        min-width=\\"160px\\"\\n        align=\\"right\\"\\n        header-align=\\"center\\"\\n        sortable\\n        show-overflow\\n        class=\\"dc-ux-table-column_ElTableColumn\\"\\n      ></ux-table-column>\\n      <ux-table-column\\n        title=\\"操作\\"\\n        :params=\\"{ sortId: ''114'' }\\"\\n        tree-node\\n        resizable\\n        width=\\"140px\\"\\n        min-width=\\"140px\\"\\n        fixed=\\"right\\"\\n        align=\\"left\\"\\n        header-align=\\"center\\"\\n        class=\\"dc-ux-table-column_ElTableOptColumn\\"\\n      >\\n        <template v-slot:header=\\"scope\\">\\n          <span>操作</span>\\n          <el-popover ref=\\"popover\\" width=\\"10\\" trigger=\\"click\\" placement=\\"bottom\\" offset=\\"10\\" class=\\"dc-el-popover_ElPopover\\">\\n            <view-columns-select\\n              v-model=\\"tableColumns\\"\\n              ref=\\"viewColumnsSelect\\"\\n              v-on:save-column-view=\\"saveColumn($event, ''table'')\\"\\n              v-on:show-all-column=\\"showAllColumn($event, ''table'')\\"\\n              v-on:show-default-column=\\"showDefaultColumn(''table'')\\"\\n              class=\\"dc-view-columns-select_ViewColumnsSelect\\"\\n            ></view-columns-select>\\n            <template slot=\\"reference\\">\\n              <OperationIcon type=\\"primary\\" content=\\"自定义列\\" placement=\\"top\\" icon-name=\\"el-icon-tickets\\"></OperationIcon>\\n            </template>\\n          </el-popover>\\n          <OperationIcon\\n            v-on:click=\\"onExport(tableData)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.export\\"\\n            content=\\"导出excel文件\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-download\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n        </template>\\n        <template slot-scope=\\"scope\\">\\n          <OperationIcon\\n            v-on:click=\\"onView(scope)\\"\\n            type=\\"info\\"\\n            v-show=\\"permission.view\\"\\n            content=\\"查看\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-view\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onEdit(scope)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.edit\\"\\n            content=\\"编辑\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-edit\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onCopy(scope)\\"\\n            type=\\"primary\\"\\n            v-show=\\"permission.add\\"\\n            content=\\"复制\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-document\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onDelete(scope)\\"\\n            type=\\"danger\\"\\n            v-show=\\"permission.remove\\"\\n            content=\\"删除\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-delete\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n          <OperationIcon\\n            v-on:click=\\"onShowHistory(scope)\\"\\n            type=\\"info\\"\\n            v-show=\\"permission.view\\"\\n            content=\\"历史记录\\"\\n            placement=\\"top\\"\\n            icon-name=\\"el-icon-info\\"\\n            class=\\"dc-OperationIcon_IconButton\\"\\n          ></OperationIcon>\\n        </template>\\n      </ux-table-column>\\n    </ux-grid>\\n    <el-pagination\\n      :total=\\"tableDataTotal\\"\\n      :page-size=\\"search.limit\\"\\n      background\\n      :current-page=\\"tableDataPage\\"\\n      :page-sizes=\\"[10, 20, 30, 40, 50, 100]\\"\\n      layout=\\"total, sizes, prev, pager, next, jumper\\"\\n      v-on:size-change=\\"onSizeChange\\"\\n      v-on:current-change=\\"onCurrentChange\\"\\n      class=\\"dc-el-pagination_ElPagination\\"\\n    ></el-pagination>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { listMicroAppPage, deleteMicroApp } from ''@/api/micro/microApp''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\nimport History from ''@/views/components/history''\\nimport EditForm from ''./form''\\nimport QueryTag from ''@/views/components/queryTag''\\nimport QueryConditionPanel from ''@/views/components/queryConditionPanel''\\nimport { listUserAll } from ''@/api/admin/user.js''\\nimport ViewColumnsSelect from ''@/views/components/DcViewColumnsSelect''\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    History,\\n    EditForm,\\n    QueryTag,\\n    QueryConditionPanel,\\n    ViewColumnsSelect,\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      queryFormData: {\\n        appKey: '''', // AppKey\\n        name: '''', // 应用名\\n        developer: {\\n          id: null,\\n          name: null\\n        },\\n        isLocked: null // 禁用\\n      },\\n      tableData: [],\\n      // 查询表格列头\\n      tableColumns: {\\n        147: {\\n          title: ''AppKey'',\\n          field: ''appKey'',\\n          visible: true,\\n          order: 0\\n        },\\n        131: {\\n          title: ''应用名'',\\n          field: ''name'',\\n          visible: true,\\n          order: 1\\n        },\\n        132: {\\n          title: ''应用全称'',\\n          field: ''fullName'',\\n          visible: true,\\n          order: 2\\n        },\\n        130: {\\n          title: ''开发者'',\\n          field: ''developer.name'',\\n          visible: true,\\n          order: 3\\n        },\\n        133: {\\n          title: ''禁用'',\\n          field: ''isLocked'',\\n          width: ''80px'',\\n          visible: true,\\n          order: 4\\n        },\\n        134: {\\n          title: ''应用描述'',\\n          field: ''remarks'',\\n          visible: false,\\n          order: 5\\n        },\\n        135: {\\n          title: ''创建者'',\\n          field: ''createBy'',\\n          visible: false,\\n          order: 6\\n        },\\n        136: {\\n          title: ''创建时间'',\\n          field: ''createDate'',\\n          visible: false,\\n          order: 7\\n        },\\n        137: {\\n          title: ''更新者'',\\n          field: ''updateBy'',\\n          visible: false,\\n          order: 8\\n        },\\n        138: {\\n          title: ''更新时间'',\\n          field: ''updateDate'',\\n          visible: false,\\n          order: 9\\n        },\\n        114: {\\n          title: ''操作'',\\n          width: ''140px'',\\n          visible: true,\\n          order: 10\\n        }\\n      },\\n      // 分页属性\\n      tableDataPage: 1,\\n      tableDataTotal: 0,\\n      // 选项变量\\n      // 开发者选项\\n      developerOptions: [],\\n      // 禁用选项\\n      selectOptions: [\\n        {\\n          label: ''启用中'',\\n          value: ''0''\\n        },\\n        {\\n          label: ''已禁用'',\\n          value: ''1''\\n        }\\n      ],\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: 18,\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''', // 排序字段名\\n        order: '''' // 排序\\n      },\\n      searchList: [],\\n      tableId: ''1368089934395490306'',\\n      schemeId: ''1368089934395490304''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if (this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        this.search.params.push({\\n          columnName: ''app_key'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.appKey) ? this.queryFormData.appKey : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''name'',\\n          queryType: ''like'',\\n\\n          value: !validatenull(this.queryFormData.name) ? this.queryFormData.name : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''developer_id'',\\n          queryType: ''='',\\n\\n          value: !validatenull(this.queryFormData.developer.id) ? this.queryFormData.developer.id : null\\n        })\\n\\n        this.search.params.push({\\n          columnName: ''is_locked'',\\n          queryType: ''='',\\n\\n          value: !validatenull(this.queryFormData.isLocked) ? this.queryFormData.isLocked : null\\n        })\\n      }\\n      // 数据权限: 应用micro_app\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      listMicroAppPage(this.search)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.tableDataTotal = responseData.data.total\\n            this.tableData = responseData.data.rows ? responseData.data.rows : []\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    onSearch() {\\n      if (this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate((valid) => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      try {\\n        this.initOptions(this.queryModel)\\n        this.search.params = []\\n        // 数据权限: 应用micro_app\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n        let [listMicroAppRespData, listPermissionRespData] = await Promise.all([\\n          listMicroAppPage(this.search),\\n          listResourcePermission(this.$route.meta.routerId)\\n        ])\\n        if (listMicroAppRespData.code == 100 && listPermissionRespData.code == 100) {\\n          this.tableDataTotal = listMicroAppRespData.data.total\\n          this.tableData = listMicroAppRespData.data.rows ? listMicroAppRespData.data.rows : []\\n          this.permission.view = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''microApp:read''\\n          })\\n          this.permission.export = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''microApp:export''\\n          })\\n\\n          this.permission.add = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''microApp:create''\\n          })\\n          this.permission.edit = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''microApp:update''\\n          })\\n          this.permission.remove = listPermissionRespData.data.find((item) => {\\n            return item.permission === ''microApp:delete''\\n          })\\n        } else {\\n          this.showMessage(listPermissionRespData.code != 100 ? listPermissionRespData : listMicroAppRespData)\\n        }\\n        this.resetLoad()\\n      } catch (error) {\\n        this.outputError(error)\\n      }\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      })\\n        .then(() => {\\n          this.setLoad()\\n          deleteMicroApp(scope.row)\\n            .then((responseData) => {\\n              if (responseData.code == 100) {\\n                this.getList()\\n                this.showMessage({\\n                  type: ''success'',\\n                  msg: ''删除成功''\\n                })\\n              } else {\\n                this.showMessage(responseData)\\n              }\\n              this.resetLoad()\\n            })\\n            .catch((error) => {\\n              this.outputError(error)\\n            })\\n        })\\n        .catch(() => {})\\n    },\\n\\n    onSortChange(orderby) {\\n      if (validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n\\n    listDeveloperOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [])\\n\\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1289059804542828547'')\\n\\n      listUserAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.developerOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n      this.listDeveloperOptions()\\n    }\\n  },\\n  watch: {},\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/micro//microApp","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n        //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function editFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名(ref)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单名\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"label\\": \\"数据对象\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单尺寸\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签对齐\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签宽度\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"行内提示\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''inline-message''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":106,"renderKey":106.38779576633691,"componentName":"SingleInput106"},"__slot__":{"prepend":"","append":""},"__vModel__":"name","v-model":"editFormData.name",":maxLength":128,"placeholder":"请输入应用名","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":12,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":105,"renderKey":105.93326594844105,"componentName":"SingleInput105","field":{"id":"1368089934395490310","name":"name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用名","jdbcType":"varchar(128)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"name","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":128,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=128, message=\\"应用名长度必须介于 1 和 128 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"应用名","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"应用名不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":108,"renderKey":108.74674562172159,"componentName":"SingleInput108"},"__slot__":{"prepend":"","append":""},"__vModel__":"fullName","v-model":"editFormData.fullName",":maxLength":256,"placeholder":"请输入应用全称","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":12,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":107,"renderKey":107.59253777289423,"componentName":"SingleInput107","field":{"id":"1368089934395490311","name":"full_name","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用全称","jdbcType":"varchar(256)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"fullName","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":256,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=256, message=\\"应用全称长度必须介于 1 和 256 之间\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"应用全称","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"应用全称不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SingleInput","label":"单行文本","tag":"el-form-item","tagIcon":"input","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SingleInput","label":"单行文本","tag":"el-input","tagIcon":"input","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function inputData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (field && field.name == ''sort'') {\\r\\n      list.push(\\"sort: This && This.children ? (This.children.length + 1) * 10000 : (this.parentOptions ? (this.parentOptions.length + 1) * 10000 : 10000),\\");\\r\\n    } else {\\r\\n      if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n      } else {\\r\\n        list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n      }\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":117,"renderKey":117.88653512563978,"componentName":"SingleInput117"},"__slot__":{"prepend":"","append":""},"__vModel__":"appKey","v-model":"editFormData.appKey",":maxLength":40,"placeholder":"请输入AppKey","prefix-icon":"","suffix-icon":"","clearable":true,"show-password":"undefined","autocomplete":"undefined",":disabled":null,":readonly":null}],"id":"formItemE","span":12,"regList":[],"propertyLayout":"function itemSingleInputLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''Like'',\\r\\n    value: ''like''\\r\\n  }, {\\r\\n    label: ''Left Like'',\\r\\n    value: ''left_like''\\r\\n  }, {\\r\\n    label: ''Right Like'',\\r\\n    value: ''right_like''\\r\\n  }];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val != -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  function onPasswordChange(val) {\\r\\n    if (val == true) {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''new-password'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    } else {\\r\\n      if (this.activeData.__config__.children[0][''autocomplete''] == ''undefined'') {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''on'';\\r\\n      } else {\\r\\n        this.activeData.__config__.children[0][''autocomplete''] = ''undefined'';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''标题'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''show-password'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"密码框\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''show-password'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''show-password''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''show-password'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onPasswordChange.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否自动补全\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''autocomplete'')\\r\\n    }\\r\\n  }), this.activeData.__config__.children[0][''show-password''] == true ? h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''undefined'',\\r\\n      \\"inactive-value\\": ''new-password''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }) : h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": ''on'',\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''autocomplete''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''autocomplete'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''prefix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prefix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''prefix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''prefix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''suffix-icon'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后图标\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''suffix-icon'')\\r\\n    }\\r\\n  }), h(\\"IconInput\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''suffix-icon''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''suffix-icon'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"前缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''prepend'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入前缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.prepend,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"prepend\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"后缀\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''append'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入后缀\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__slot__.append,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"append\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''禁用条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''显示条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": ''渲染条件'',\\r\\n      \\"guide\\": this.getHelp(''formQ.singleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":116,"renderKey":116.40356670672729,"componentName":"SingleInput116","field":{"id":"1369362842443366402","name":"app_key","createBy":"超级管理员(super)","createDate":"2023-01-31 13:03:47","updateBy":"超级管理员(super)","updateDate":"2023-01-31 13:25:11","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"AppKey","jdbcType":"varchar(10)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"appKey","childFields":[],"isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":10,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=10, message=\\"AppKey长度必须介于 1 和 10 之间\\")"],"isNotBaseField":true,"isEditableField":true,"isType":false,"isChecked":false}},"label":"AppKey","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"AppKey不能为空\\", trigger: \\"blur\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"SelectInput","label":"下拉选择","tag":"el-form-item","tagIcon":"select","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"SelectInput","label":"下拉选择","tag":"el-select","tagIcon":"select","designLayout":"function selectLayout(h, element, index, parent) {\\r\\n    var _this7 = this;\\r\\n    var slots = {\\r\\n      options: function options(h, conf, key) {\\r\\n        var list = [];\\r\\n        conf.__slot__.options.forEach(function (item) {\\r\\n          list.push(h(\\"el-option\\", {\\r\\n            \\"attrs\\": {\\r\\n              \\"label\\": item.label,\\r\\n              \\"value\\": item.value,\\r\\n              \\"disabled\\": item.disabled\\r\\n            }\\r\\n          }));\\r\\n        });\\r\\n        return list;\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this7.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function selectLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = [];\\r\\n    var label = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".label\\") : config.optionLabel;\\r\\n    var value = config.dataType === ''static'' ? \\"\\".concat(config.loopItem, \\".value\\") : config.optionValue;\\r\\n    children.push(\\"<el-option\\\\n            v-for=\\\\\\"(\\".concat(config.loopItem, \\", \\").concat(config.loopIndex, \\") in \\").concat(config.loopArray, \\"\\\\\\"\\\\n            :key=\\\\\\"\\").concat(config.loopIndex, \\"\\\\\\"\\\\n            :label=\\\\\\"\\").concat(label, \\"\\\\\\"\\\\n            :value=\\\\\\"\\").concat(value, \\"\\\\\\"></el-option>\\"));\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputData":"function selectData(scheme, parent, isView, loop, filters) {\\r\\n    var _this = this;\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return [];\\r\\n    var field = parent.__config__.field;\\r\\n    if (field && (field.javaType.value == ''Custom'' || field.javaType.value == ''This'')) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": {\\"));\\r\\n      field.childFields && field.childFields.forEach(function (child) {\\r\\n        list.push(\\"\\".concat(_this.camelCase(child.value, \\"_\\"), \\": null,\\"));\\r\\n      });\\r\\n      list.push(''},'');\\r\\n    } else {\\r\\n      !this.validatenull(scheme.__config__.defaultValue) ? list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label)) : list.push(\\"\\".concat(scheme.__vModel__, \\": null, // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","outputOptions":"function selectTypeOptions(scheme, parent, isView) {\\r\\n    var list = [];\\r\\n    list.push(\\"// \\".concat(parent.label, \\"\\\\u9009\\\\u9879\\"));\\r\\n    if (scheme.__config__.dataType == ''dynamic'') {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [],\\"));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__config__.loopArray, \\": [\\"));\\r\\n      scheme.__slot__.options && scheme.__slot__.options.forEach(function (item) {\\r\\n        list.push(\\"{label: ''\\".concat(item.label, \\"'', value: ''\\").concat(item.value, \\"''},\\"));\\r\\n      });\\r\\n      list.push(''],'');\\r\\n    }\\r\\n    return list;\\r\\n  }","defaultValue":"","dataType":"dynamic","apiFn":"listUserAll","apiFrom":"@/api/admin/user.js","optionParams":"","loopArray":"developerOptions","loopItem":"item","loopIndex":"index","optionLabel":"item.name","optionValue":"item","document":"https://element.eleme.cn/#/zh-CN/component/select","valWatchs":[],"valWatchExp":"","optWatchs":[],"isInner":true,"formId":104,"renderKey":104.1536357229,"componentName":"SelectInput104"},"__slot__":{"options":[{"label":"选项一","value":"1"},{"label":"选项二","value":"2"}]},"__vModel__":"developer","v-model":"editFormData.developer",":style":{"width":"100%"},"placeholder":"请选择开发者","clearable":true,"value-key":"id","filterable":true,":disabled":null}],"id":"formItemE","span":12,"regList":[],"propertyLayout":"function itemSelectLayout(h) {\\r\\n  var _this2 = this;\\r\\n  var queryTypes = this.activeData.__config__.children[0].multiple == true ? [{\\r\\n    label: ''In'',\\r\\n    value: ''in''\\r\\n  }, {\\r\\n    label: ''Not In'',\\r\\n    value: ''not in''\\r\\n  }] : [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  var selectOptions = this.activeData.__config__.children[0].__config__.dataType === ''static'' ? this.activeData.__config__.children[0].__slot__.options : [];\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    if (field.javaType.value === ''Custom'') {\\r\\n      this.activeData.__config__.children[0][''value-key''] = field.associatedField ? field.associatedField : ''id'';\\r\\n    }\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 获取选项数据\\r\\n    this.setOptions(this.activeData.__config__.children[0], field);\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function addSelectItem() {\\r\\n    this.activeData.__config__.children[0].__slot__.options.push({\\r\\n      label: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function multipleChange(val) {\\r\\n    this.activeData.__config__.children[0].__config__.operator = val == true ? ''in'' : ''='';\\r\\n    this.$set(this.activeData.__config__.children[0].__config__, ''defaultValue'', val == true ? [] : '''');\\r\\n  }\\r\\n\\r\\n  // 切换静态/动态类型时触发表单校验\\r\\n  function onDataTypeChange() {\\r\\n    var _this = this;\\r\\n    this.$nextTick(function () {\\r\\n      if (_this.activeData.hasOwnProperty(''valid'')) {\\r\\n        delete _this.activeData.valid;\\r\\n      }\\r\\n      _this.handleValid(_this.activeData);\\r\\n    });\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this2.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this2, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择查询方式'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"multiple\\": this.activeData.__config__.children[0].multiple == true ? true : false,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请选择\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [selectOptions.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''value-key'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"值唯一标识\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''value-key'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"绑定值为对象类型时必填\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0][''value-key''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], ''value-key'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''clearable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"能否清空\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''clearable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].clearable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"clearable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''filterable'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否搜索\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''filterable'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"inactive-value\\": ''undefined''\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].filterable,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], \\"filterable\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"选项\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"style\\": \\"text-align: center; margin-bottom: 18px\\"\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && h(\\"el-radio-group\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"size\\": \\"small\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.dataType,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"dataType\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onDataTypeChange.bind(this)\\r\\n    }\\r\\n  }, [h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"static\\"\\r\\n    }\\r\\n  }, [\\"\\\\u9759\\\\u6001\\\\u6570\\\\u636E\\"]), h(\\"el-radio-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"dynamic\\"\\r\\n    }\\r\\n  }, [\\"\\\\u52A8\\\\u6001\\\\u6570\\\\u636E\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [h(\\"watch-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"watchName\\": ''optWatchs'',\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFn'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFn\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"接口函数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFn'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数名称\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFn,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFn\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''apiFrom'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.apiFrom\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入函数地址'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"地址\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''apiFrom'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"函数地址\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.apiFrom,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"apiFrom\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopArray'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopArray\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环数组'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环数组\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopArray'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环数组\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopArray,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopArray\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopItem'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopItem\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环项'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环项\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopItem'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环项\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopItem,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopItem\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''loopIndex'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.loopIndex\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入循环索引'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"循环索引\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''loopIndex'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入循环索引\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.loopIndex,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"loopIndex\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''static'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0], ''__slot__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__slot__, ''options'') && h(\\"draggable\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"list\\": this.activeData.__config__.children[0].__slot__.options,\\r\\n      \\"animation\\": 340,\\r\\n      \\"group\\": \\"selectItem\\",\\r\\n      \\"handle\\": \\".option-drag\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.children[0].__slot__.options.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"select-item\\"\\r\\n    }, [h(\\"div\\", {\\r\\n      \\"class\\": \\"select-line-icon option-drag\\"\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-s-operation\\"\\r\\n    })]), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项值\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"placeholder\\": \\"选项名\\",\\r\\n        \\"size\\": \\"small\\",\\r\\n        \\"clearable\\": true\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.label,\\r\\n        callback: function callback($$v) {\\r\\n          _this2.$set(item, \\"label\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }), h(\\"div\\", {\\r\\n      \\"class\\": \\"close-btn select-line-icon\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this2.activeData.__config__.children[0].__slot__.options.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-remove-outline\\"\\r\\n    })])]);\\r\\n  })]), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px;\\"\\r\\n  }, [h(\\"el-button\\", {\\r\\n    \\"style\\": \\"padding-bottom: 0\\",\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addSelectItem.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''dataType'') && this.activeData.__config__.children[0].__config__.dataType == ''dynamic'' && h(\\"div\\", [this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionLabel'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionLabel\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项名'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionLabel'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项名\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionLabel,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionLabel\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionValue'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.optionValue\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入选项值'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项值\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''optionParams'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"选项参数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''optionParams'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"请输入选项参数\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0].__config__.optionParams,\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0].__config__, \\"optionParams\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"[\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"]\\"])])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.selectInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this2.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this2.$set(_this2.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","formId":103,"renderKey":103.97749968933397,"componentName":"SelectInput103","field":{"id":"1368089934395490309","name":"developer_id","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"开发者","jdbcType":"bigint(21) unsigned","javaType":{"id":"8100","name":"Custom","value":"Custom"},"customType":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","comments":"用户","filter":"","isTreeTable":false,"delFlagExists":true,"columnList":[]},"currentSchemeTable":"","javaField":"developer","childFields":[{"label":"标识","value":"id","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0},{"label":"名称","value":"name","javaType":{"id":"8107","name":"String","value":"String"},"dcTable":{"id":"1289059804542828547","name":"sys_user","scheme":{"name":"用户管理","packageName":"com.geeke","moduleName":"admin","subModuleName":"","replace":false,"dcTableList":[]},"className":"User","isTreeTable":false,"columnList":[]},"associatedField":"","customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"columnList":[]},"decimalLenth":0}],"associatedField":"id","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":21,"decimalLenth":0,"simpleJavaType":"Custom","simpleAnnotationList":["NotNull(message=\\"开发者不能为空\\")"],"isNotBaseField":true,"isEditableField":true}},"label":"开发者","v-if":null,"v-show":null,"required":true,":rules":"[{required: true,  message: \\"开发者不能为空\\", trigger: \\"change\\"}]"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"Switch","label":"开关","tag":"el-form-item","tagIcon":"switch","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"Switch","label":"开关","tag":"el-switch","tagIcon":"switch","defaultValue":"0","designLayout":"function generalFieldLayout(h, element, index, parent) {\\r\\n    var _this = this;\\r\\n    var config = element.__config__;\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n    return this.colWrapper(scheme, str, parent);\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/switch","maxLength":10,"valWatchs":[],"valWatchExp":"","isInner":true,"formId":115,"renderKey":115.36323700165711,"componentName":"Switch115"},"__vModel__":"isLocked","v-model":"editFormData.isLocked","active-text":null,"inactive-text":null,"active-color":null,"inactive-color":null,"active-value":"1","inactive-value":"0",":disabled":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemSwitchLayout(h) {\\r\\n  var _this = this;\\r\\n  var queryTypes = [{\\r\\n    label: ''='',\\r\\n    value: ''=''\\r\\n  }, {\\r\\n    label: ''!='',\\r\\n    value: ''!=''\\r\\n  }];\\r\\n  function onSwitchValueInput(val, name) {\\r\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\r\\n      this.$set(this.activeData.__config__.children[0], name, JSON.parse(val));\\r\\n    } else {\\r\\n      this.$set(this.activeData.__config__.children[0], name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\r\\n    }\\r\\n  }\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u9009\\\\u62E9\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : ''0'';\\r\\n    if (this.hasOwnProperty(this.activeData, ''required'')) this.activeData.required = field.isNull !== ''1'';\\r\\n    // 记录子段信息\\r\\n    this.activeData.__config__.field = JSON.parse(JSON.stringify(field));\\r\\n    // 设置禁用字段\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''operator'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"prop\\": \\"__config__.children[0].__config__.operator\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"查询方式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''operator'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请选择查询方式\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.operator,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"operator\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [queryTypes.map(function (item) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.value,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": item.label,\\r\\n        \\"value\\": item.value\\r\\n      }\\r\\n    });\\r\\n  })])]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"active-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') ? this.activeData.__config__.children[0][''active-value''] : false,\\r\\n      \\"inactive-value\\": this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') ? this.activeData.__config__.children[0][''inactive-value''] : false\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入开启提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-text'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-text'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入关闭提示\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-text''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-text'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].active-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''active-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入开启值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''active-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-value'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.children[0].inactive-value\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-value'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"value\\": this.setDefaultValue(this.activeData.__config__.children[0][''inactive-value'']),\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0].__config__.maxLength,\\r\\n      \\"placeholder\\": \\"请输入关闭值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": function input(event) {\\r\\n        onSwitchValueInput.call(_this, event, ''inactive-value'');\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''active-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"开启颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''active-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''active-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''active-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''inactive-color'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"关闭颜色\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''inactive-color'')\\r\\n    }\\r\\n  }), h(\\"el-color-picker\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0][''inactive-color''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], ''inactive-color'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.switch'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","field":{"id":"1368089934395490312","name":"is_locked","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"禁用","jdbcType":"varchar(1)","javaType":{"id":"8107","name":"String","value":"String"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"isLocked","childFields":[],"defVal":"0","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":1,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":["Length(min=1, max=1, message=\\"禁用长度必须介于 1 和 1 之间\\")"],"isNotBaseField":true,"isEditableField":true},"formId":114,"renderKey":114.76749267745893,"componentName":"Switch114"},"label":"禁用","v-if":null,"v-show":null,"required":false,":rules":"[]"},{"__config__":{"elName":"ElUploadImage","propertyLayout":"function uploadImageLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.title = field.comments;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''__vModel__'') && h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__vModel__\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请选择字段名'',\\r\\n        trigger: ''change''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadImage'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''title'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadImage'', ''title'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.title,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, '':limit'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"上传个数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadImage'', '':limit'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"上传个数\\",\\r\\n      \\"step\\": 1,\\r\\n      \\"min\\": 0,\\r\\n      \\"max\\": 10\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':limit''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':limit'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, '':fileFormats'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"格式\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadFile'', '':fileFormats'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择文件格式\\",\\r\\n      \\"multiple\\": true\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':fileFormats''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':fileFormats'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"jpg\\",\\r\\n      \\"value\\": \\"jpg\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"jpeg\\",\\r\\n      \\"value\\": \\"jpeg\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"png\\",\\r\\n      \\"value\\": \\"png\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"doc\\",\\r\\n      \\"value\\": \\"doc\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"docx\\",\\r\\n      \\"value\\": \\"docx\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"xls\\",\\r\\n      \\"value\\": \\"xls\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"xlsx\\",\\r\\n      \\"value\\": \\"xlsx\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"pdf\\",\\r\\n      \\"value\\": \\"pdf\\"\\r\\n    }\\r\\n  }), h(\\"el-option\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"txt\\",\\r\\n      \\"value\\": \\"txt\\"\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, '':fileSizes'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"大小\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadFile'', '':fileSizes'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"number\\",\\r\\n      \\"placeholder\\": \\"请输入大小（MB）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData['':fileSizes''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, '':fileSizes'', $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"append\\"\\r\\n  }, [\\"MB\\"])])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadImage'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.uploadImage'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputData":"function uploadData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (scheme[''__vModel__'']) {\\r\\n      list.push(\\"\\".concat(scheme[''__vModel__''], \\": null,\\"));\\r\\n      list.push(\\"\\".concat(scheme[''__vModel__''], \\"File: {\\"));\\r\\n      list.push(''deletes: [],  // 待删除（已上传）的文件列表'');\\r\\n      list.push(''uploads: []   // 待上传的文件列表'');\\r\\n      list.push(''},'');\\r\\n    }\\r\\n    return list;\\r\\n  }","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function uploadFileLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    scheme[''v-model''] = eval(config.modelExp) + ''File''; //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n    scheme['':objectId''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''></\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"upload-image","tagIcon":"image-upload","label":"多图片上传","column":null,"component":"uploadImage","from":"@/views/components/uploadImage","modelExp":"`${parent[\\":model\\"]}.${scheme.__vModel__}`","formId":113,"renderKey":113.81997670580759,"componentName":"ElUploadImage113","field":{"id":"1368133244845719560","name":"icon_id","createBy":"超级管理员(super)","createDate":"2023-01-30 17:20:09","updateBy":"超级管理员(super)","updateDate":"2023-01-30 17:20:09","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用图标","jdbcType":"bigint(21)","javaType":{"id":"8115","name":"Image","value":"Image"},"customType":{"id":"","name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"currentSchemeTable":"","javaField":"iconId","childFields":[],"associatedField":"","isPk":"0","isNull":"0","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"simpleJavaType":"String","simpleAnnotationList":["NotNull(message=\\"应用图标不能为空\\")"],"isNotBaseField":true,"isEditableField":true,"dataLength":21,"decimalLenth":0,"isType":false,"isChecked":false}},"v-if":null,"v-show":null,"title":"应用图标",":limit":1,":action":"action",":objectId":"editFormData.iconId","__vModel__":"iconId",":fileFormats":["jpg","jpeg","png"],":fileSizes":null,"v-model":"editFormData.iconIdFile"},{"__config__":{"modelExp":"`${parent[\\":model\\"]}.${scheme.__config__.children[0].__vModel__}`","propStrExp":"`prop=\\"${scheme.__config__.children[0].__vModel__}\\"`","designLayout":"function generalCantainerLayout(h, element, index, parent) {\\r\\n    var config = element.__config__;\\r\\n    var child = this.renderChildren.apply(this, arguments);\\r\\n    // 组合组件的子组件不允许拖拽\\r\\n    if (!this.isMakeUp(element)) {\\r\\n      child = [h(\\"span\\", {\\r\\n        \\"class\\": \\"component-name\\"\\r\\n      }, [config.componentName]), h(\\"draggable\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"data-elname\\": config.elName,\\r\\n          \\"list\\": config.children,\\r\\n          \\"animation\\": 340,\\r\\n          \\"group\\": this.cantainerGroup\\r\\n        },\\r\\n        \\"class\\": \\"drag-wrapper\\",\\r\\n        \\"on\\": {\\r\\n          \\"choose\\": this.onChoose,\\r\\n          \\"unchoose\\": this.onUnchoose\\r\\n        }\\r\\n      }, [child])];\\r\\n    }\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"child\\": child,\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    });\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      var activeItem = this.$listeners.activeItem;\\r\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"class\\": className,\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"style\\": config.style,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function formItemLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    // 编辑表格中的field存放在column的config下\\r\\n    // const field = parent.__config__.tag === ''ux-table-column'' ? parent.__config__.field : scheme.__config__.field\\r\\n    var ruleTrigger = {\\r\\n      ''el-input'': ''blur'',\\r\\n      ''el-input-number'': ''blur'',\\r\\n      ''number-input'': ''blur'',\\r\\n      ''el-select'': ''change'',\\r\\n      ''el-radio-group'': ''change'',\\r\\n      ''el-checkbox-group'': ''change'',\\r\\n      ''el-cascader'': ''change'',\\r\\n      ''el-time-picker'': ''change'',\\r\\n      ''el-date-picker'': ''change'',\\r\\n      ''el-rate'': ''change'',\\r\\n      ''el-color-picker'': ''change'',\\r\\n      ''el-switch'': ''change'',\\r\\n      ''el-slider'': ''change'',\\r\\n      tinymce: ''blur''\\r\\n    };\\r\\n    var getFormRules = function getFormRules() {\\r\\n      var rules = [];\\r\\n      var childConfig = scheme.__config__.children[0].__config__;\\r\\n      if (scheme.required) {\\r\\n        // 是否为空校验\\r\\n        var label = parent.__config__.tag === ''el-form'' ? scheme.label : parent.label;\\r\\n        var type = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? ''type = \\"array\\",'' : '''';\\r\\n        var message = Object.prototype.toString.call(childConfig.defaultValue) === ''[object Array]'' ? \\"\\\\u8BF7\\\\u81F3\\\\u5C11\\\\u9009\\\\u62E9\\\\u4E00\\\\u4E2A\\".concat(scheme.label) : \\"\\".concat(scheme.__config__.children[0].placeholder);\\r\\n        if (message) message = \\"\\".concat(label, \\"\\\\u4E0D\\\\u80FD\\\\u4E3A\\\\u7A7A\\");\\r\\n        var rule = \\"{required: true, \\".concat(type, \\" message: \\\\\\"\\").concat(message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n        rules.push(rule);\\r\\n      }\\r\\n      if (config.regList && Object.prototype.toString.call(config.regList) === ''[object Array]'') {\\r\\n        // 表达式校验\\r\\n        config.regList.forEach(function (child) {\\r\\n          if (child.pattern) {\\r\\n            var _rule = \\"{pattern: new RegExp(`\\".concat(child.pattern, \\"`), message: \\\\\\"\\").concat(child.message, \\"\\\\\\", trigger: \\\\\\"\\").concat(ruleTrigger[childConfig.tag], \\"\\\\\\"}\\");\\r\\n            rules.push(_rule);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n      scheme['':rules''] = \\"[\\".concat(rules.join('',''), \\"]\\");\\r\\n    };\\r\\n    var handleVModel = function handleVModel() {\\r\\n      // 不用v-models语法糖的组件， 如：PickerTimeRange、PickerMonthRange、PickerTimeDateRange\\r\\n      if (config.valueExp) {\\r\\n        config.children[0]['':value''] = eval(config.valueExp);\\r\\n        config.children[0][''v-on:input''] = eval(config.inputExp);\\r\\n      } else {\\r\\n        config.children[0][''v-model''] = eval(config.modelExp); //`${parentVModel}1111.${childrenScheme.__vModel__}`\\r\\n      }\\r\\n    };\\r\\n\\r\\n    var tag = config.tag;\\r\\n    if (Object.prototype.hasOwnProperty.call(scheme, ''required'')) {\\r\\n      // form-item增加rules校验\\r\\n      getFormRules();\\r\\n    }\\r\\n    // 处理form-item，prop和子级的v-model\\r\\n    handleVModel();\\r\\n    var prop = eval(config.propStrExp);\\r\\n    // 属性 通过rules实现验证，排除required属性\\r\\n    var attrs = this.getAttrs(scheme, isView, [''required'']);\\r\\n    var children = this.createChildren(scheme, parent, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(prop, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n    </\\").concat(tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","elName":"MutilpleInput","label":"多行文本","tag":"el-form-item","tagIcon":"textarea","document":"https://element.eleme.io/2.15/#/zh-CN/component/form","children":[{"__config__":{"elName":"MutilpleInput","label":"多行文本","tag":"el-input","tagIcon":"textarea","defaultValue":"","designLayout":"function inputLayout(h, element, index, parent) {\\r\\n    var _this2 = this;\\r\\n    var slots = {\\r\\n      prepend: function prepend(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"prepend\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      },\\r\\n      append: function append(h, conf, key) {\\r\\n        return h(\\"template\\", {\\r\\n          \\"slot\\": \\"append\\"\\r\\n        }, [conf.__slot__[key]]);\\r\\n      }\\r\\n    };\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var ele;\\r\\n    if (element[''show-password''] == true) {\\r\\n      ele = Object.assign({\\r\\n        autocomplete: ''new-password''\\r\\n      }, element);\\r\\n    } else {\\r\\n      ele = element;\\r\\n    }\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var elNode = h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": ele,\\r\\n        \\"slots\\": slots\\r\\n      },\\r\\n      \\"on\\": {\\r\\n        \\"input\\": function input(event) {\\r\\n          _this2.$set(config, ''defaultValue'', event);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // 非组合组件内层节点，节点可以选择\\r\\n    if (!config.isInner) {\\r\\n      elNode = h(\\"el-col\\", {\\r\\n        \\"attrs\\": {\\r\\n          \\"span\\": config.span\\r\\n        },\\r\\n        \\"class\\": className,\\r\\n        \\"nativeOn\\": {\\r\\n          \\"click\\": function click(event) {\\r\\n            activeItem(element, parent, event);\\r\\n            event.stopPropagation();\\r\\n          }\\r\\n        }\\r\\n      }, [elNode, this.itemBtns.apply(this, arguments)]);\\r\\n    }\\r\\n    return elNode;\\r\\n  }","outputHtml":"function inputLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var children = [];\\r\\n    var slot = scheme.__slot__;\\r\\n    if (slot && slot.prepend) {\\r\\n      children.push(\\"<template slot=\\\\\\"prepend\\\\\\">\\".concat(slot.prepend, \\"</template>\\"));\\r\\n    }\\r\\n    if (slot && slot.append) {\\r\\n      children.push(\\"<template slot=\\\\\\"append\\\\\\">\\".concat(slot.append, \\"</template>\\"));\\r\\n    }\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''> \\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\r\\n  }","outputData":"function stringData(scheme, parent, isView, loop, filters) {\\r\\n    var list = [];\\r\\n    if (this.validatenull(scheme.__vModel__)) return list;\\r\\n    if (!this.validatenull(scheme.__config__.defaultValue)) {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": ''\\").concat(scheme.__config__.defaultValue, \\"'', // \\").concat(parent.label));\\r\\n    } else {\\r\\n      list.push(\\"\\".concat(scheme.__vModel__, \\": '''', // \\").concat(parent.label));\\r\\n    }\\r\\n    return list;\\r\\n  }","document":"https://element.eleme.cn/#/zh-CN/component/input","valWatchs":[],"valWatchExp":"","isInner":true,"formId":112,"renderKey":112.39774307817304,"componentName":"MutilpleInput112"},"__vModel__":"remarks","v-model":"editFormData.remarks","type":"textarea","placeholder":"请输入应用描述","rows":6,":maxLength":255,":disabled":null,":readonly":null}],"id":"formItemE","span":24,"regList":[],"propertyLayout":"function itemMutilpleLayout(h) {\\r\\n  var _this = this;\\r\\n  function onChangeModel(field) {\\r\\n    this.activeData.__config__.children[0].placeholder = \\"\\\\u8BF7\\\\u8F93\\\\u5165\\".concat(field.comments ? field.comments : '''');\\r\\n    this.activeData.label = field.comments;\\r\\n    this.activeData.__config__.children[0].__config__.defaultValue = !this.validatenull(field.defVal) ? field.defVal : '''';\\r\\n    this.activeData.required = field.isNull !== ''1'';\\r\\n    this.activeData.__config__.children[0]['':maxLength''] = field.dataLength;\\r\\n    this.$set(this.activeData.__config__, ''field'', JSON.parse(JSON.stringify(field)));\\r\\n    this.filterTableColumns();\\r\\n  }\\r\\n  function onMaxLengthChange(val) {\\r\\n    if (val !== -1) {\\r\\n      this.activeData.__config__.children[0].__config__.defaultValue = this.activeData.__config__.children[0].__config__.defaultValue.substr(0, val);\\r\\n    }\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], ''__vModel__'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"字段名\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''__vModel__'')\\r\\n    }\\r\\n  }), h(\\"el-select\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"filterable\\": true,\\r\\n      \\"placeholder\\": \\"请选择字段名\\"\\r\\n    },\\r\\n    \\"style\\": \\"width: 100%\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__vModel__,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"__vModel__\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [this.tableColumns.map(function (item, index) {\\r\\n    return h(\\"el-option\\", {\\r\\n      \\"key\\": item.javaField,\\r\\n      \\"attrs\\": {\\r\\n        \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\r\\n        \\"value\\": item.javaField,\\r\\n        \\"disabled\\": _this.handelDisabled(item)\\r\\n      },\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          onChangeModel.call(_this, item);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"style\\": \\"padding-left: 6px;\\"\\r\\n    }, [\\"\\".concat(item.name, \\": \\").concat(item.comments)]), h(\\"span\\", {\\r\\n      \\"style\\": \\"float: right;\\",\\r\\n      \\"attrs\\": {\\r\\n        \\"className\\": \\"filed-tip\\"\\r\\n      }\\r\\n    }, [item.isType && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"danger\\"\\r\\n      }\\r\\n    }, [\\"\\\\u7C7B\\\\u578B\\\\u4E0D\\\\u7B26\\"]), !item.isType && item.isChecked && h(\\"el-tag\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"warning\\"\\r\\n      }\\r\\n    }, [\\"\\\\u5DF2\\\\u9009\\"])])]);\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''label'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标题\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''label'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.label,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''placeholder'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"占位提示\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''placeholder'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"placeholder\\": \\"请输入占位提示（placeholder）\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].placeholder,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"placeholder\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''__config__'') && this.hasOwnProperty(this.activeData.__config__.children[0].__config__, ''defaultValue'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"默认值\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''defaultValue'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"maxlength\\": this.activeData.__config__.children[0]['':maxLength''],\\r\\n      \\"placeholder\\": \\"请输入默认值\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].__config__.defaultValue,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0].__config__, \\"defaultValue\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':maxLength'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"最大长度\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':maxLength'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": -1,\\r\\n      \\"precision\\": 0,\\r\\n      \\"placeholder\\": \\"最大输入长度\\"\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':maxLength''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':maxLength'', $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"change\\": onMaxLengthChange.bind(this)\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], ''rows'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"行数\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''rows'')\\r\\n    }\\r\\n  }), h(\\"el-input-number\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"min\\": 1,\\r\\n      \\"placeholder\\": \\"行数\\",\\r\\n      \\"precision\\": 0\\r\\n    },\\r\\n    \\"style\\": \\"width:100%;\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0].rows,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], \\"rows\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"是否必填\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''required'')\\r\\n    }\\r\\n  }), h(\\"el-switch\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.required,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"required\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"val-watch\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"element\\": this.activeData.__config__.children[0],\\r\\n      \\"tableColumns\\": this.tableColumns,\\r\\n      \\"getHelp\\": this.getHelp,\\r\\n      \\"prefix\\": \\"\\".concat(this.activeParent['':model''], \\".\\")\\r\\n    }\\r\\n  }), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"布局\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__, ''span'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"栅格\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''span'')\\r\\n    }\\r\\n  }), h(\\"el-slider\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"max\\": 24,\\r\\n      \\"min\\": 1,\\r\\n      \\"marks\\": {\\r\\n        12: ''''\\r\\n      }\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.span,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"5\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData.__config__.children[0], '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"禁用条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':disabled'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"禁用条件（disabled）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData.__config__.children[0], '':readonly'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"只读条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', '':readonly'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"只读条件（readonly）默认不显示\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.children[0]['':readonly''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__.children[0], '':readonly'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''formE.mutilpleInput'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), this.hasOwnProperty(this.activeData, ''required'') && h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"校验\\",\\r\\n      \\"name\\": \\"6\\"\\r\\n    }\\r\\n  }, [h(\\"FormRules\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"activeData\\": this.activeData\\r\\n    }\\r\\n  })])]);\\r\\n}","formId":111,"renderKey":111.55817526383913,"componentName":"MutilpleInput111","field":{"id":"1368089934395490313","name":"remarks","createBy":"超级管理员(super)","createDate":"2023-01-30 16:25:29","updateBy":"超级管理员(super)","updateDate":"2023-01-30 16:39:23","dcTable":{"id":"1368089934395490306","name":"micro_app","scheme":{"name":"应用","packageName":"com.geeke","moduleName":"micro","subModuleName":"","replace":false,"dcTableList":[]},"className":"MicroApp","comments":"应用","isTreeTable":false,"columnList":[]},"comments":"应用描述","jdbcType":"varchar(255)","javaType":{"id":"8109","name":"Mutilple","value":"Mutilple"},"customType":{"name":"","scheme":{"name":"","packageName":"","moduleName":"","subModuleName":"","replace":false,"dcTableList":[]},"className":"","comments":"","filter":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"javaField":"remarks","childFields":[],"isPk":"0","isNull":"1","isInsert":"1","isEdit":"1","currentTable":{"id":"","name":"","className":"","comments":"","isTreeTable":false,"delFlagExists":false,"columnList":[]},"dataLength":255,"decimalLenth":0,"simpleJavaType":"String","simpleAnnotationList":[],"isNotBaseField":false,"isEditableField":true}},"label":"应用描述","v-if":null,"v-show":null,"required":false,":rules":"[]"}],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.41096242308288,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.29971896782867,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"应用","v-loading":"loading","width":"50%","fullscreen":false}]},"maxFormId":117,"locked":true,"version":18,"code":"<template>\\n  <el-row class=\\"dc-container\\">\\n    <el-dialog\\n      v-on:open=\\"onDialogOpen\\"\\n      v-on:close=\\"onDialogClose\\"\\n      v-loading=\\"loading\\"\\n      width=\\"50%\\"\\n      :fullscreen=\\"false\\"\\n      :title=\\"dialogProps.title\\"\\n      :visible.sync=\\"dialogProps.visible\\"\\n      :close-on-click-modal=\\"false\\"\\n      class=\\"dc-el-dialog_ElDialog\\"\\n    >\\n      <el-row>\\n        <el-form\\n          ref=\\"editForm\\"\\n          :model=\\"editFormData\\"\\n          label-width=\\"100px\\"\\n          :disabled=\\"action == ''view''\\"\\n          class=\\"dc-el-form_ElEditForm\\"\\n        >\\n          <el-row>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"name\\"\\n                label=\\"应用名\\"\\n                :rules=\\"[{ required: true, message: ''应用名不能为空'', trigger: ''blur'' }]\\"\\n                class=\\"dc-el-form-item_SingleInput\\"\\n              >\\n                <el-input\\n                  v-model=\\"editFormData.name\\"\\n                  :maxLength=\\"128\\"\\n                  placeholder=\\"请输入应用名\\"\\n                  clearable\\n                  class=\\"dc-el-input_SingleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"fullName\\"\\n                label=\\"应用全称\\"\\n                :rules=\\"[{ required: true, message: ''应用全称不能为空'', trigger: ''blur'' }]\\"\\n                class=\\"dc-el-form-item_SingleInput\\"\\n              >\\n                <el-input\\n                  v-model=\\"editFormData.fullName\\"\\n                  :maxLength=\\"256\\"\\n                  placeholder=\\"请输入应用全称\\"\\n                  clearable\\n                  class=\\"dc-el-input_SingleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"appKey\\"\\n                label=\\"AppKey\\"\\n                :rules=\\"[{ required: true, message: ''AppKey不能为空'', trigger: ''blur'' }]\\"\\n                class=\\"dc-el-form-item_SingleInput\\"\\n              >\\n                <el-input\\n                  v-model=\\"editFormData.appKey\\"\\n                  :maxLength=\\"40\\"\\n                  placeholder=\\"请输入AppKey\\"\\n                  clearable\\n                  class=\\"dc-el-input_SingleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"12\\">\\n              <el-form-item\\n                prop=\\"developer\\"\\n                label=\\"开发者\\"\\n                :rules=\\"[{ required: true, message: ''开发者不能为空'', trigger: ''change'' }]\\"\\n                class=\\"dc-el-form-item_SelectInput\\"\\n              >\\n                <el-select\\n                  v-model=\\"editFormData.developer\\"\\n                  :style=\\"{ width: ''100%'' }\\"\\n                  placeholder=\\"请选择开发者\\"\\n                  clearable\\n                  value-key=\\"id\\"\\n                  filterable\\n                  class=\\"dc-el-select_SelectInput\\"\\n                >\\n                  <el-option\\n                    v-for=\\"(item, index) in developerOptions\\"\\n                    :key=\\"index\\"\\n                    :label=\\"item.name\\"\\n                    :value=\\"item\\"\\n                  ></el-option>\\n                </el-select>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"24\\">\\n              <el-form-item prop=\\"isLocked\\" label=\\"禁用\\" class=\\"dc-el-form-item_Switch\\">\\n                <el-switch\\n                  v-model=\\"editFormData.isLocked\\"\\n                  active-value=\\"1\\"\\n                  inactive-value=\\"0\\"\\n                  class=\\"dc-el-switch_Switch\\"\\n                ></el-switch>\\n              </el-form-item>\\n            </el-col>\\n            <el-col :span=\\"24\\">\\n              <upload-image\\n                title=\\"应用图标\\"\\n                :limit=\\"1\\"\\n                :action=\\"action\\"\\n                :objectId=\\"editFormData.iconId\\"\\n                :fileFormats=\\"[''jpg'', ''jpeg'', ''png'']\\"\\n                v-model=\\"editFormData.iconIdFile\\"\\n                class=\\"dc-upload-image_ElUploadImage\\"\\n              ></upload-image>\\n            </el-col>\\n            <el-col :span=\\"24\\">\\n              <el-form-item prop=\\"remarks\\" label=\\"应用描述\\" class=\\"dc-el-form-item_MutilpleInput\\">\\n                <el-input\\n                  v-model=\\"editFormData.remarks\\"\\n                  type=\\"textarea\\"\\n                  placeholder=\\"请输入应用描述\\"\\n                  rows=\\"6\\"\\n                  :maxLength=\\"255\\"\\n                  class=\\"dc-el-input_MutilpleInput\\"\\n                ></el-input>\\n              </el-form-item>\\n            </el-col>\\n          </el-row>\\n        </el-form>\\n      </el-row>\\n      <span slot=\\"footer\\" class=\\"dialog-footer\\">\\n        <el-button v-on:click=\\"onSubmit\\" type=\\"primary\\" v-show=\\"action != ''view''\\">保存</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action != ''view''\\">取消</el-button>\\n        <el-button v-on:click=\\"onDialogClose\\" v-if=\\"action == ''view''\\">关闭</el-button>\\n      </span>\\n    </el-dialog>\\n  </el-row>\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\nimport { listUserAll } from ''@/api/admin/user.js''\\nimport uploadImage from ''@/views/components/uploadImage''\\n/** 根据用户界面配置import组件 结束 */\\nimport { getMicroAppById, saveMicroApp } from ''@/api/micro/microApp''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''microApp-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    uploadImage,\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      // 对话框属性变量\\n      dialogProps: {\\n        visible: false,\\n        title: ''应用''\\n      },\\n      dialogTitle: ''应用'',\\n      // 选项变量\\n      // 开发者选项\\n      developerOptions: [],\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    onSubmit() {\\n      this.$refs[''editForm''].validate((valid) => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      })\\n    },\\n    doSave() {\\n      this.setLoad()\\n\\n      let formData = this.createFormData(this.editFormData)\\n      saveMicroApp(formData)\\n        .then((responseData) => {\\n          if (responseData.code == 100) {\\n            this.dialogProps.visible = false\\n            this.showMessage({\\n              type: ''success'',\\n              msg: ''保存成功''\\n            })\\n            this.$emit(''save-finished'')\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        })\\n        .catch((error) => {\\n          this.outputError(error)\\n        })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n\\n      for (let idx in editFormData.iconIdFile.uploads) {\\n        formData.append(''iconIdUploads'', editFormData.iconIdFile.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.iconIdFile.deletes)\\n\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n        getMicroAppById(id)\\n          .then((responseData) => {\\n            let form = {}\\n            if (responseData.code == 100) {\\n              form = responseData.data\\n            } else {\\n              this.showMessage(responseData)\\n            }\\n            this.resetLoad()\\n            resolve(form)\\n          })\\n          .catch((error) => {\\n            this.outputError(error)\\n          })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n\\n    listDeveloperOptions() {\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [])\\n\\n      // 数据权限: 用户sys_user\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, ''1289059804542828547'')\\n\\n      listUserAll(search_List).then((responseData) => {\\n        if (responseData.code == 100) {\\n          this.developerOptions = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n\\n      this.listDeveloperOptions()\\n    },\\n    initEditData(This) {\\n      return {\\n        name: '''', // 应用名\\n        fullName: '''', // 应用全称\\n        appKey: '''', // AppKey\\n        developer: {\\n          id: null,\\n          name: null\\n        },\\n        isLocked: ''0'', // 禁用\\n        iconId: null,\\n        iconIdFile: {\\n          deletes: [], // 待删除（已上传）的文件列表\\n          uploads: [] // 待上传的文件列表\\n        },\\n        remarks: '''' // 应用描述\\n      }\\n    }\\n  },\\n  watch: {},\\n  mounted: function () {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function (id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n\\n      this.$on(''openEditDialog'', async function (id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function () {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function (id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = {\\n          ...this.initEditData(),\\n          ...(await this.getFormById(id))\\n        }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null //把id设置为空，添加一个新的\\n\\n        this.editFormData.iconId = null\\n\\n        this.dialogProps.visible = true\\n      })\\n    })\\n  }\\n}\\n</script>\\n"},{"filePath":"client/src/views/micro//microApp","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''{{table.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{table.comments}}'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true,"version":18,"code":"const conditions = [\\n  {\\n    name: ''id'',\\n    comments: ''标识'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''developer_id'',\\n    comments: ''开发者'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''in'', label: ''在列表'' },\\n      { value: ''not in'', label: ''不在列表'' }\\n    ],\\n    attribute: {\\n      labelField: ''name'',\\n      className: ''User'',\\n      fieldId: ''id'',\\n      tableId: ''1368089934395490306'',\\n      apiPath: ''admin/user'',\\n      filter: ''''\\n    }\\n  },\\n\\n  {\\n    name: ''name'',\\n    comments: ''应用名'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''full_name'',\\n    comments: ''应用全称'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''is_locked'',\\n    comments: ''禁用'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''remarks'',\\n    comments: ''应用描述'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_by'',\\n    comments: ''创建者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''create_date'',\\n    comments: ''创建时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  },\\n\\n  {\\n    name: ''update_by'',\\n    comments: ''更新者'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    operations: [\\n      { value: ''like'', label: ''包含'' },\\n      { value: ''not like'', label: ''不包含'' },\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' }\\n    ],\\n    attribute: {}\\n  },\\n\\n  {\\n    name: ''update_date'',\\n    comments: ''更新时间'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    operations: [\\n      { value: ''='', label: ''等于'' },\\n      { value: ''<>'', label: ''不等于'' },\\n      { value: ''between'', label: ''介于'' },\\n      { value: ''not between'', label: ''不介于'' }\\n    ],\\n    attribute: { type: ''datetime'', ''value-format'': ''yyyy-MM-dd HH:mm:ss'' }\\n  }\\n]\\n\\nconst metadata = [\\n  {\\n    id: ''1368089934395490306'',\\n    schemeId: ''1368089934395490304'',\\n    name: ''应用'',\\n    conditionPanel: conditions,\\n    type: ''main'',\\n    dataRules: []\\n  }\\n]\\nexport default metadata\\n"}],"version":18}', remarks='', create_by='超级管理员(super)', create_date='2023-01-30 16:43:16', update_by='超级管理员(super)', update_date='2023-05-22 14:27:48', del_flag='0'
WHERE id=1368089934395490343;
