UPDATE dc_template
SET name='单表-新版', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  return true\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 初始化弹窗标题\\n   */\\n  function insDialog(page) {\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    if (!dialog) return\\n    dialog.title = dbModel.name\\n  }\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n  /**\\n   * 在编辑form中根据数据模型插入编辑组件，并根据组件数初始化显示列数\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insEditFormItem(page) {\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    const container = tools.findElemnt(page, ''ElEditForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.isEdit && (field.isNotBaseField || field.name == ''remarks'')) {\\n        const component = tools.createEfComponent(field, page, dbModel.table, dbModel.childTables)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    if (container.__config__.children.length > 0) {\\n      tools.createEfComponentCol(container, dialog)\\n    }\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') > 0) {\\n      insConditionPanel.call(this, page)\\n      insDialog.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      insEditFormItem.call(this, page)\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.46251171279611,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.08386336942895,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.79825800414977,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.46269633356056,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.9343443321748,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":127,"renderKey":127.02690361279011,"componentName":"ElConditionPanel127","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":108,"renderKey":108.52444451593873,"componentName":"ElQueryForm108","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":""},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":111,"renderKey":111.17572051124648,"componentName":"Button111","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\n  var _this = this;\\n  var isToolTip = false;\\n  isToolTip = this.activeData.disabled === ''undefined'';\\n  function onTooltipChange(val) {\\n    this.activeData.disabled = val ? ''undefined'' : true;\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮文字\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].icon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮类型\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否提示\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: isToolTip,\\n      callback: function callback($$v) {\\n        isToolTip = $$v;\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onTooltipChange.bind(this)\\n    }\\n  })]), isToolTip && h(\\"ToolTip\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","formId":110,"renderKey":110.20574909972895,"componentName":"Button110","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":109,"renderKey":109.95984262566932,"componentName":"ElRow109","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":119,"renderKey":119.91584943676851,"componentName":"ViewColumnsSelect119","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":117,"renderKey":117.94459849233819,"componentName":"ElPopover117","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.80204589631406,"componentName":"IconButton118"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":120,"renderKey":120.99308197488548,"componentName":"IconButton120","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.23031507843295,"componentName":"TableOptColumnHeader115","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":121,"renderKey":121.90536209441461,"componentName":"IconButton121","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":122,"renderKey":122.66478246681099,"componentName":"IconButton122","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":123,"renderKey":123.85268543353997,"componentName":"IconButton123","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":124,"renderKey":124.80794715895684,"componentName":"IconButton124","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":125,"renderKey":125.3980851069734,"componentName":"IconButton125","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.84635625741926,"componentName":"TableOptColumnMain116","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":114,"renderKey":114.23998415707428,"componentName":"ElTableOptColumn114","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"140px","min-width":"140px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":112,"renderKey":112.46469119130208,"componentName":"QueryTable112","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":"undefined",":summary-method":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  function onInput(val) {\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''可选条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"可选条目数\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.sizes,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"5, 10, 20, 30, 40, 50, 100","formId":128,"renderKey":128.72183032619748,"componentName":"ElPagination128","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":"[5, 10, 20, 30, 40, 50, 100]","layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":128,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.doSave()\\n        } else {\\n          return false\\n        }\\n      });\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n        //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function editFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名(ref)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单名\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"label\\": \\"数据对象\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单尺寸\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签对齐\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签宽度\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"行内提示\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''inline-message''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.41096242308288,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.29971896782867,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"对话框标题","v-loading":"loading","width":"70%","fullscreen":false}]},"maxFormId":102,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''{{table.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{table.comments}}'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1318709630237024337, remarks='前端-增删改查（单表-新版）', create_by='超级管理员(super)', create_date='2022-12-28 11:21:44', update_by='超级管理员(super)', update_date='2023-05-26 13:55:11', del_flag='0'
WHERE id=1318709630237024338;
UPDATE dc_template
SET name='一对多-新版', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return true\\n  }\\n  \\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n      tabName: ''editForm'', // tab标签页\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 初始化弹窗标题\\n   */\\n  function insDialog(page) {\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    if (!dialog) return\\n    dialog.title = dbModel.name\\n  }\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n\\n  function insTabs(page) {\\n    let component\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    if (!dialog) return\\n    if (dbModel.mainChildTableExists) { // 只存在关联表或者一对一子表\\n      component = dialog\\n      // 初始化主表表单（不存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children.push(mainTableComponent)\\n    } else {\\n      const tab = tools.createTabComponent(page, dbModel.table)\\n      dialog.__config__.children.push(tab)\\n      component = tab\\n      // 初始化主表表单（存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children[0].__config__.children.push(mainTableComponent)\\n    }\\n    \\n    // 初始化子表表单\\n    dbModel.childTables.forEach((child, index) => {\\n      if(child.isAssociation !== ''1'' && child.isOneToOne !== ''1'') { // 非关联表 && 非一对一子表\\n        const childTableComponent = tools.createChildTableComponent(page, child, dbModel, index)\\n        console.log(''初始化子表表单---------'')\\n        console.log(component)\\n        component.__config__.children.push(childTableComponent)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') > 0) {\\n      insConditionPanel.call(this, page)\\n      insDialog.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      insTabs.call(this, page)\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  {{if item.__config__.childClassName}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.childClassName + \\".\\" + item.__config__.field.name : ''''}}'',\\n                  {{else}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  {{/if}}\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate() {\\n      this.$refs.editForm.$emit(''openAddDialog'')\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.38312242485439,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.8069932318909,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.35701408453102,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.434269404936,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.5490126615551,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":116,"renderKey":116.99870095104554,"componentName":"ElConditionPanel116","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.68924485629289,"componentName":"ElQueryForm107","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":110,"renderKey":110.14569237257798,"componentName":"Button110","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\n  var _this = this;\\n  var isToolTip = false;\\n  isToolTip = this.activeData.disabled === ''undefined'';\\n  function onTooltipChange(val) {\\n    this.activeData.disabled = val ? ''undefined'' : true;\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮文字\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].icon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮类型\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否提示\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: isToolTip,\\n      callback: function callback($$v) {\\n        isToolTip = $$v;\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onTooltipChange.bind(this)\\n    }\\n  })]), isToolTip && h(\\"ToolTip\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","formId":109,"renderKey":109.97478062943743,"componentName":"Button109","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":108,"renderKey":108.48086423314105,"componentName":"ElRow108","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":151,"renderKey":151.08278337591267,"componentName":"ViewColumnsSelect151","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":149,"renderKey":149.49625368725438,"componentName":"ElPopover149","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":150,"renderKey":150.290011248767,"componentName":"IconButton150"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":154,"renderKey":154.14282585419062,"componentName":"IconButton154","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":114,"renderKey":114.19466545473841,"componentName":"TableOptColumnHeader114","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.58215474742958,"componentName":"TableOptColumnMain115","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":113,"renderKey":113.36096687419308,"componentName":"ElTableOptColumn113","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":111,"renderKey":111.79188979069511,"componentName":"QueryTable111","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":"undefined",":summary-method":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  function onInput(val) {\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''可选条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"可选条目数\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.sizes,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"10, 20, 30, 40, 50, 100","formId":117,"renderKey":117.80522215817156,"componentName":"ElPagination117","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""}]},"maxFormId":117,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      tabName: ''editForm'', // tab标签页\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      let validFlag = true\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{ if item.__config__.tag == ''el-form'' && item.__config__.elName == ''ElEditForm'' }}\\n            {{each item.__config__.children childItem}}\\n              {{if childItem.__config__.elName == ''EditTable''}}\\n        this.$refs[''{{item.ref}}''].validate(valid => {\\n          if (valid) {\\n          } else {\\n            this.tabName = ''{{childItem.ref}}''\\n            validFlag = false\\n            return false\\n          }\\n        })\\n              {{/if}}\\n            {{/each}}\\n        \\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''editForm''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      if(validFlag) {\\n        this.doSave()\\n      }\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDeleteChild(tableData, index) { // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.elName == ''EditTable''}}\\n    onAdd{{item['':data''] | upperCase}}() {\\n      this.editFormData.{{item['':data'']}}.push({\\n        {{each item.__config__.children columnItem}}\\n          {{if columnItem.__config__.tag == ''ux-table-column''}}\\n          {{each columnItem.__config__.children formItem}}\\n            {{if formItem.__config__.tag == ''el-form-item'' && formItem.__config__.children[0][''__vModel__'']}}\\n              {{set component = formItem.__config__.children[0]}}\\n              {{if columnItem.__config__.field && (columnItem.__config__.field.javaType.value == ''Custom'' || columnItem.__config__.field.javaType.value == ''This'')}}\\n      {{component[''__vModel__'']}}: {\\n                  {{each columnItem.__config__.field.childFields field}}\\n        {{field.value | camelCase ''_''}}: null,\\n                  {{/each}}\\n      },\\n                {{else if component.__config__.elName === ''PickerTimeRange'' || component.__config__.elName == ''PickerMonthRange'' || component.__config__.elName == ''PickerTimeDateRange''}}\\n                  {{if component[''__vModel__''].start && component[''__vModel__''].end}}\\n                    {{component[''__vModel__''].start}}: {{@ component.__config__.defaultValue[0] ? component.__config__.defaultValue[0] : null | stringify}}, // {{columnItem[''label'']}}\\n                    {{component[''__vModel__''].end}}: {{@ component.__config__.defaultValue[1] ? component.__config__.defaultValue[1] : null | stringify}}, // {{columnItem[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n      {{component[''__vModel__'']}}: {{@ component.__config__.defaultValue | stringify}}, // {{columnItem[''label'']}}\\n                {{/if}}\\n              {{/if}}\\n          {{/each}}\\n          {{/if}}\\n        {{/each}}\\n      })\\n    },\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    tabName(val, oldVal) {\\n      this.$nextTick(() => {\\n        if(this.$refs[val] && this.$refs[val].doLayout) {\\n          this.$refs[val].doLayout()\\n        }\\n      })\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function() {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData()\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else if item.__config__.elName == ''EditTable''}}\\n        for (var i = 0; i <= this.editFormData.{{item['':data'']}}.length - 1; i++) {\\n          this.editFormData.{{item['':data'']}}[i].id = null\\n        } \\n          {{else if item.__config__.tag === ''el-select'' && item.__config__.elName == ''ObjectSelect''}}\\n        for (var i = 0; i <= this.editFormData.{{item[''__vModel__'']}}.length - 1; i++) {\\n          this.editFormData.{{item[''__vModel__'']}}[i].id = null\\n        }\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n    //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n<style>\\n    .my-input-sc {\\n       display: inline-block;\\n       height: 30px;\\n       line-height: 30px;\\n       -webkit-appearance: none;\\n       background-color: #FFFFFF;\\n       background-image: none;\\n       border-radius: 4px;\\n       border: 1px solid #DCDFE6;\\n       box-sizing: border-box;\\n       color: #606266;\\n       font-size: inherit;\\n       outline: none;\\n       padding: 0 15px;\\n       transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n       width: 100%;\\n    }\\n  </style>","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.3178756364201,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"对话框标题","v-loading":"loading","width":"70%","fullscreen":false}]},"maxFormId":101,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1324962226446794851, remarks='前端-增删改查（一对多-新版）', create_by='超级管理员(super)', create_date='2023-01-01 16:27:40', update_by='超级管理员(super)', update_date='2023-05-26 13:54:38', del_flag='0'
WHERE id=1324962226446794852;
UPDATE dc_template
SET name='工作流一对多（tab切换）', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 工作流结构表 && 包含子表时\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  }) && dbModel.childTables.length > 0) {\\n    return true\\n  }\\n  \\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n      tabName: ''editForm'', // tab标签页\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n\\n  function insTabs(page) {\\n    let component\\n    if (!page) return\\n    if (dbModel.mainChildTableExists) { // 只存在一个关联表, \\n      component = page\\n      // 初始化主表表单（不存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children.push(mainTableComponent)\\n    } else {\\n      const tab = tools.createTabComponent(page, dbModel.table)\\n      page.__config__.children.push(tab)\\n      component = tab\\n      // 初始化主表表单（存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children[0].__config__.children.push(mainTableComponent)\\n    }\\n    \\n    // 初始化子表表单\\n    dbModel.childTables.forEach((child, index) => {\\n      if(child.isAssociation !== ''1'' && child.isOneToOne !== ''1'') { // 非关联表\\n        const childTableComponent = tools.createChildTableComponent(page, child, dbModel, index)\\n        component.__config__.children.push(childTableComponent)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') >= 0) {\\n      insConditionPanel.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      if (page.fileName.indexOf(''form'') >= 0) {\\n        insTabs.call(this, page)\\n      }\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\nimport { getHistProcInstance } from ''@/api/wf/procinst''\\nimport { getProcessByKey, getStartForm } from ''@/api/wf/processdefinition''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport WfMainUI from ''@/views/wf/common/wfMainUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: WfMainUI,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      wfForm:  null,    // 工作流表单\\n      currentRow: null,      // 当前查看申请\\n\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  {{if item.__config__.childClassName}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.childClassName + \\".\\" + item.__config__.field.name : ''''}}'',\\n                  {{else}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  {{/if}}\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.setLoad()\\n      getHistProcInstance(scope.row.procInst).then(responseData => {\\n        if(responseData.hasOwnProperty(''processDefinitionId'')) {\\n          let definitionId = responseData.processDefinitionId\\n          if(definitionId) {\\n            getStartForm(definitionId).then(startFormResp => {\\n              if(startFormResp.hasOwnProperty(''key'')) {\\n                if(startFormResp.key) {\\n                  this.currentRow = {\\n                    formKey: startFormResp.key,\\n                    definitionId: definitionId,\\n                    row: scope.row\\n                  }\\n                  this.loadWfForm(startFormResp.key)\\n                } else {\\n                  this.showMessage({type:''warning'' , msg: ''流程未配置form，请联系管理员。''})\\n                }\\n              }else{\\n                this.showMessage(startFormResp)\\n              }\\n              this.resetLoad()\\n            })\\n          } else {\\n            this.showMessage({type:''warning'' , msg: ''流程实例没有找到流程定义。''})\\n          }\\n        }else{\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    // 重写dcMain的方法\\n    onShowHistory(scope) {\\n      this.$refs.commentForm.$emit(''openComment'', scope.row.procInst)\\n    },\\n    afterWfFormload() {\\n      this.$refs.wfForm.$emit(''openViewBizDialog'', this.currentRow.formKey, this.currentRow.definitionId, this.currentRow.row)\\n    },\\n    onVLoading(loading) {\\n      loading ? this.setLoad() : this.resetLoad()\\n    },\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.38312242485439,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.35701408453102,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.434269404936,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.5490126615551,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":116,"renderKey":116.99870095104554,"componentName":"ElConditionPanel116","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.68924485629289,"componentName":"ElQueryForm107","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ProcessPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function processPanelLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var formKey = \\"wf/common/wfForm.vue#\\".concat(config.pcFormKey).concat(config.appFormKey ? ''$'' + config.appFormKey : '''');\\n    scheme.formKey = formKey;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function dashboardLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮权限'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':bizAdd'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"按钮权限\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':bizAdd''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':bizAdd'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::tenantId\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入租户id'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"租户id\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':tenantId'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入租户id\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':tenantId''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':tenantId'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"keyPrefix\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程前缀'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程前缀\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''keyPrefix'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程前缀\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''keyPrefix''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''keyPrefix'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procName\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procName'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procName''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procName'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程表单\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''formKey'')\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"基类\\"\\n    }\\n  }, [h(\\"span\\", [\\"wf/common/wfForm.vue#\\"])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"PC端\\",\\n      \\"prop\\": \\"__config__.pcFormKey\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入PC端表单地址'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入PC端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.pcFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"pcFormKey\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"移动端\\"\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入移动端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.appFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"appFormKey\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"$\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procTitile\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程标题'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程标题\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procTitile'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程标题\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procTitile''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procTitile'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"v-on:v-loading\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-on:v-loading'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"loading事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:v-loading''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:v-loading'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"process-panel","tagIcon":"process-panel","label":"流程配置","component":"processPanel","from":"@/views/wf/common/processPanel","pcFormKey":"XX/XX/form.vue","appFormKey":"","formId":117,"renderKey":117.662407894987,"componentName":"ProcessPanel117","locked":true},"v-if":null,"v-show":null,"ref":"processPanel",":bizAdd":"permission.add",":tenantId":"currentUser.company.id","keyPrefix":"PROC_","procName":"XX审批流程","formKey":"wf/common/wfForm.vue#XX/XX/form.vue","procTitile":"${start_user_name}发起${form.name}XX审批","v-on:v-loading":"onVLoading"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":108,"renderKey":108.48086423314105,"componentName":"ElRow108","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":151,"renderKey":151.08278337591267,"componentName":"ViewColumnsSelect151","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":149,"renderKey":149.49625368725438,"componentName":"ElPopover149","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":150,"renderKey":150.290011248767,"componentName":"IconButton150"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":154,"renderKey":154.14282585419062,"componentName":"IconButton154","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":114,"renderKey":114.19466545473841,"componentName":"TableOptColumnHeader114","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.58215474742958,"componentName":"TableOptColumnMain115","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":113,"renderKey":113.36096687419308,"componentName":"ElTableOptColumn113","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":111,"renderKey":111.79188979069511,"componentName":"QueryTable111","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":"undefined",":summary-method":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  function onInput(val) {\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''可选条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"可选条目数\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.sizes,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"10, 20, 30, 40, 50, 100","formId":120,"renderKey":120.68879761394614,"componentName":"ElPagination120","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"comment","tagIcon":"import","label":"引入组件","component":"Comment","from":"@/views/wf/common/comment","methousList":[],"attrsList":[],"formId":118,"renderKey":118.38314842272419,"componentName":"ElImport118","locked":true},"ref":"commentForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"component","tagIcon":"import","label":"引入组件","component":"component","from":"","methousList":[{"name":"save-finished","value":"getTaskList()"},{"name":"after-wfForm-load","value":"afterWfFormload()"}],"attrsList":[{"name":":is","value":"wfForm"}],"formId":119,"renderKey":119.80743291771468,"componentName":"ElImport119","locked":true},"ref":"wfForm","v-if":null,"v-show":null}]},"maxFormId":120,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, create{{table.className}}, reapply{{table.className}}, get{{table.className}}ByTaskId, agree{{table.className}}, forward{{table.className}}, commission{{table.className}}, propose{{table.className}}, back{{table.className}}, reject{{table.className}}, terminate{{table.className}}, reverse{{table.className}}, listBackActivity, saveDraft{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BizForm from ''@/views/wf/common/bizForm''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BizForm,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      dialogProps: {\\n        visible: false,\\n        title: ''''\\n      },\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      tabName: ''editForm'', // tab标签页\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getModelDataById(bizId) {\\n      this.setLoad()\\n      get{{table.className}}ById(bizId).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.editFormData = { ...this.initEditData(), ...responseData.data }\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    checkValid(object) {\\n      // 处理校验定位\\n      let validFlag = true\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{ if item.__config__.tag == ''el-form'' && item.__config__.elName == ''ElEditForm'' }}\\n            {{each item.__config__.children childItem}}\\n              {{if childItem.__config__.elName == ''EditTable''}}\\n        this.$refs[''{{item.ref}}''].validate(valid => {\\n          if (valid) {\\n          } else {\\n            this.tabName = ''{{childItem.ref}}''\\n            validFlag = false\\n            return false\\n          }\\n        })\\n              {{/if}}\\n            {{/each}}\\n        \\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''editForm''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      return validFlag\\n    },\\n    loadModelData(taskId) {\\n      this.setLoad()\\n      get{{table.className}}ByTaskId(taskId).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.editFormData = { ...this.initEditData(), ...responseData.data }\\n          this.$emit(''after-load-data'', this.editFormData)        // 表单数据对象传给父节点\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 保存草稿，files附件列表, draftModel 草稿对象\\n    doSaveDraft(draftModel, files) {\\n      if(!draftModel) {   // 不是从草稿打开创建，保存时更新原草稿\\n        draftModel = {\\n            procdefId: this.procDef.id,\\n            procdefName: this.procDef.name,\\n            name: this.procDef.name + ''-'' + this.editFormData.name\\n        }\\n      }\\n      this.setLoad()\\n      let formData = this.createWfData(this.editFormData, files)\\n      formData.append(''strDraft'', JSON.stringify(draftModel))\\n      saveDraft{{table.className}}(formData).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 创建一个新流程 process流程 actNodes是提交的用户任务节点及其审批用户\\n    doCreate(files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        create{{table.className}}(this.procDef.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n          \\n      }\\n    },\\n    // 重新发起申请 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doReApply(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        reapply{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 同意 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doAgree(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        agree{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 转派任务\\n    doForward(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        forward{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 委派任务\\n    doCommission(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n        \\n        let formData = this.createWfData(this.editFormData, files)\\n        commission{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },   \\n    // 拟办（办理委派过来的任务）\\n    doPropose(comment, files) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        propose{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    }, \\n    // 拒绝\\n    doReject(comment, files) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        reject{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    }, \\n    // 退回 comment 意见, actNodes退回节点和用户信息\\n    doBack(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        back{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n        this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 终止流程 comment 意见, actNodes退回节点和用户信息\\n    doTerminate(comment, files) {\\n      this.setLoad()\\n      this.editFormData.taskComement = comment  // 意见\\n\\n      let formData = this.createWfData(this.editFormData, files)\\n      terminate{{table.className}}(this.task.id, formData).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.$emit(''save-finished'')\\n        }\\n        this.showMessage(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 撤回任务\\n    doReverse(task) {\\n      this.setLoad()\\n      reverse{{table.className}}(task.id).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    doListActivity() {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        listBackActivity(this.task.id).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(formData, editFormData) {\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n    },\\n    {{/if}}\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDeleteChild(tableData, index) { // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.elName == ''EditTable''}}\\n    onAdd{{item['':data''] | upperCase}}() {\\n      this.editFormData.{{item['':data'']}}.push({\\n        {{each item.__config__.children columnItem}}\\n          {{if columnItem.__config__.tag == ''ux-table-column''}}\\n          {{each columnItem.__config__.children formItem}}\\n            {{if formItem.__config__.tag == ''el-form-item'' && formItem.__config__.children[0][''__vModel__'']}}\\n              {{set component = formItem.__config__.children[0]}}\\n              {{if columnItem.__config__.field && (columnItem.__config__.field.javaType.value == ''Custom'' || columnItem.__config__.field.javaType.value == ''This'')}}\\n      {{component[''__vModel__'']}}: {\\n                  {{each columnItem.__config__.field.childFields field}}\\n        {{field.value | camelCase ''_''}}: null,\\n                  {{/each}}\\n      },\\n                {{else if component.__config__.elName === ''PickerTimeRange'' || component.__config__.elName == ''PickerMonthRange'' || component.__config__.elName == ''PickerTimeDateRange''}}\\n                  {{if component[''__vModel__''].start && component[''__vModel__''].end}}\\n                    {{component[''__vModel__''].start}}: {{@ component.__config__.defaultValue[0] ? component.__config__.defaultValue[0] : null | stringify}}, // {{columnItem[''label'']}}\\n                    {{component[''__vModel__''].end}}: {{@ component.__config__.defaultValue[1] ? component.__config__.defaultValue[1] : null | stringify}}, // {{columnItem[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n      {{component[''__vModel__'']}}: {{@ component.__config__.defaultValue | stringify}}, // {{columnItem[''label'']}}\\n                {{/if}}\\n              {{/if}}\\n          {{/each}}\\n          {{/if}}\\n        {{/each}}\\n      })\\n    },\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    tabName(val, oldVal) {\\n      this.$nextTick(() => {\\n        if(this.$refs[val] && this.$refs[val].doLayout) {\\n          this.$refs[val].doLayout()\\n        }\\n      })\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.dialogProps.visible = true\\n      this.initOptions()\\n      if(this.wfAction == ''create'') {\\n        this.$refs[''editForm''].resetFields()\\n        // 从草稿创建\\n        if(this.bizData) {\\n          this.editFormData = { ...this.initEditData(), ...this.bizData }\\n        }\\n      } else if(this.wfAction == ''approve'') {\\n        // 重新申请\\n        let reApply = this.task.assignee == this.task.owner && this.task.assignee == this.task.extInfo.applicantId && this.task.taskDefinitionKey == this.task.extInfo.appActId\\n        if(!reApply) {\\n          this.action = \\"view\\"\\n        }\\n        this.loadModelData(this.task.id)\\n      } else if(this.wfAction == ''viewBiz'') {\\n        // 需从数据库获取，否则子表没有数据\\n        // this.expenseModel = this.bizData\\n        this.action = \\"view\\"\\n        this.getModelDataById(this.bizData.id)\\n      } else if(this.wfAction == ''viewTask'') {\\n        this.action = \\"view\\"\\n        this.loadModelData(this.task.id)\\n      } else {\\n        console.err(\\"=============== 业务审批单中，实现的：\\" + this.action)\\n      }\\n    })\\n  }\\n}\\n</script>\\n<style>\\n    .my-input-sc {\\n       display: inline-block;\\n       height: 30px;\\n       line-height: 30px;\\n       -webkit-appearance: none;\\n       background-color: #FFFFFF;\\n       background-image: none;\\n       border-radius: 4px;\\n       border: 1px solid #DCDFE6;\\n       box-sizing: border-box;\\n       color: #606266;\\n       font-size: inherit;\\n       outline: none;\\n       padding: 0 15px;\\n       transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n       width: 100%;\\n    }\\n  </style>","__config__":{"children":[]},"maxFormId":101,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1378415963488714752, remarks='前端-增删改查（工作流一对多）', create_by='超级管理员(super)', create_date='2023-02-06 15:24:57', update_by='超级管理员(super)', update_date='2023-05-26 13:54:03', del_flag='0'
WHERE id=1378415963488714753;
UPDATE dc_template
SET name='工作流一对多', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 工作流结构表 && 包含子表时\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  }) && dbModel.childTables.length > 0) {\\n    return true\\n  }\\n  \\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n      tabName: ''editForm'', // tab标签页\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在编辑form中根据数据模型插入编辑组件，并根据组件数初始化显示列数\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insEditFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElEditForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.isEdit && (field.isNotBaseField || field.name == ''parent_id'' || field.name == ''remarks'')) {\\n        const component = tools.createEfComponent(field, page, dbModel.table, dbModel.childTables)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    if (container.__config__.children.length > 0) {\\n      tools.createChildEfComponentCol(container)\\n    }\\n    // 初始化子表表单(一对一情况)\\n    dbModel.childTables.forEach((child, index) => {\\n      if(child.isOneToOne === ''1'') { // 一对一子表\\n        const childFormComponent = tools.createChildFormComponent(page, child, dbModel.childTables)\\n        container.__config__.children = container.__config__.children.concat(childFormComponent.__config__.children)\\n      }\\n    })\\n    // 初始化子表表单\\n    dbModel.childTables.forEach((child, index) => {\\n      if(child.isAssociation !== ''1'' && child.isOneToOne !== ''1'') { // 非关联表\\n        const childAddButtom = tools.createChildAddButtonComponent(page, child) // 添加按钮\\n        container.__config__.children.push(childAddButtom)\\n        const childTableComponent = tools.createChildEditTableComponent(page, child, dbModel, index) // 编辑表格\\n        container.__config__.children.push(childTableComponent)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') >= 0) {\\n      insConditionPanel.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      insEditFormItem.call(this, page)\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\nimport { getHistProcInstance } from ''@/api/wf/procinst''\\nimport { getProcessByKey, getStartForm } from ''@/api/wf/processdefinition''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport WfMainUI from ''@/views/wf/common/wfMainUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: WfMainUI,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      wfForm:  null,    // 工作流表单\\n      currentRow: null,      // 当前查看申请\\n\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  {{if item.__config__.childClassName}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.childClassName + \\".\\" + item.__config__.field.name : ''''}}'',\\n                  {{else}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  {{/if}}\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.setLoad()\\n      getHistProcInstance(scope.row.procInst).then(responseData => {\\n        if(responseData.hasOwnProperty(''processDefinitionId'')) {\\n          let definitionId = responseData.processDefinitionId\\n          if(definitionId) {\\n            getStartForm(definitionId).then(startFormResp => {\\n              if(startFormResp.hasOwnProperty(''key'')) {\\n                if(startFormResp.key) {\\n                  this.currentRow = {\\n                    formKey: startFormResp.key,\\n                    definitionId: definitionId,\\n                    row: scope.row\\n                  }\\n                  this.loadWfForm(startFormResp.key)\\n                } else {\\n                  this.showMessage({type:''warning'' , msg: ''流程未配置form，请联系管理员。''})\\n                }\\n              }else{\\n                this.showMessage(startFormResp)\\n              }\\n              this.resetLoad()\\n            })\\n          } else {\\n            this.showMessage({type:''warning'' , msg: ''流程实例没有找到流程定义。''})\\n          }\\n        }else{\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    // 重写dcMain的方法\\n    onShowHistory(scope) {\\n      this.$refs.commentForm.$emit(''openComment'', scope.row.procInst)\\n    },\\n    afterWfFormload() {\\n      this.$refs.wfForm.$emit(''openViewBizDialog'', this.currentRow.formKey, this.currentRow.definitionId, this.currentRow.row)\\n    },\\n    onVLoading(loading) {\\n      loading ? this.setLoad() : this.resetLoad()\\n    },\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.38312242485439,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.35701408453102,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.434269404936,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.5490126615551,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":116,"renderKey":116.99870095104554,"componentName":"ElConditionPanel116","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":107,"renderKey":107.68924485629289,"componentName":"ElQueryForm107","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ProcessPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function processPanelLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var formKey = \\"wf/common/wfForm.vue#\\".concat(config.pcFormKey).concat(config.appFormKey ? ''$'' + config.appFormKey : '''');\\n    scheme.formKey = formKey;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function dashboardLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮权限'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':bizAdd'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"按钮权限\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':bizAdd''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':bizAdd'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::tenantId\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入租户id'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"租户id\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':tenantId'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入租户id\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':tenantId''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':tenantId'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"keyPrefix\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程前缀'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程前缀\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''keyPrefix'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程前缀\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''keyPrefix''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''keyPrefix'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procName\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procName'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procName''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procName'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程表单\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''formKey'')\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"基类\\"\\n    }\\n  }, [h(\\"span\\", [\\"wf/common/wfForm.vue#\\"])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"PC端\\",\\n      \\"prop\\": \\"__config__.pcFormKey\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入PC端表单地址'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入PC端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.pcFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"pcFormKey\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"移动端\\"\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入移动端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.appFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"appFormKey\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"$\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procTitile\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程标题'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程标题\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procTitile'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程标题\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procTitile''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procTitile'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"v-on:v-loading\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-on:v-loading'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"loading事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:v-loading''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:v-loading'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"process-panel","tagIcon":"process-panel","label":"流程配置","component":"processPanel","from":"@/views/wf/common/processPanel","pcFormKey":"XX/XX/form.vue","appFormKey":"","formId":117,"renderKey":117.662407894987,"componentName":"ProcessPanel117","locked":true},"v-if":null,"v-show":null,"ref":"processPanel",":bizAdd":"permission.add",":tenantId":"currentUser.company.id","keyPrefix":"PROC_","procName":"XX审批流程","formKey":"wf/common/wfForm.vue#XX/XX/form.vue","procTitile":"${start_user_name}发起${form.name}XX审批","v-on:v-loading":"onVLoading"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":108,"renderKey":108.48086423314105,"componentName":"ElRow108","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":151,"renderKey":151.08278337591267,"componentName":"ViewColumnsSelect151","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":149,"renderKey":149.49625368725438,"componentName":"ElPopover149","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":150,"renderKey":150.290011248767,"componentName":"IconButton150"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":154,"renderKey":154.14282585419062,"componentName":"IconButton154","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":114,"renderKey":114.19466545473841,"componentName":"TableOptColumnHeader114","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.58215474742958,"componentName":"TableOptColumnMain115","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":113,"renderKey":113.36096687419308,"componentName":"ElTableOptColumn113","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":111,"renderKey":111.79188979069511,"componentName":"QueryTable111","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":true,":summary-method":"summaryMethod","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  function onInput(val) {\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''可选条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"可选条目数\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.sizes,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"10, 20, 30, 40, 50, 100","formId":120,"renderKey":120.30259981900096,"componentName":"ElPagination120","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"comment","tagIcon":"import","label":"引入组件","component":"Comment","from":"@/views/wf/common/comment","methousList":[],"attrsList":[],"formId":118,"renderKey":118.38314842272419,"componentName":"ElImport118","locked":true},"ref":"commentForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\r\\n    var componentColor = '''';\\r\\n    if (config.component) componentColor = ''color: #333'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"type\\": \\"flex\\",\\r\\n        \\"justify\\": \\"center\\"\\r\\n      },\\r\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\r\\n    }, [h(\\"span\\", {\\r\\n      \\"class\\": \\"importLayout\\",\\r\\n      \\"style\\": componentColor\\r\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    var getMethousAttrs = function getMethousAttrs() {\\r\\n      // 获取引入组件 属性和方法\\r\\n      var attrs = '''';\\r\\n      // 方法 非预览模式添加方法\\r\\n      !isView && config.methousList.forEach(function (me) {\\r\\n        if (me.name && me.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      // 属性\\r\\n      config.attrsList.forEach(function (att) {\\r\\n        if (att.name && att.value) {\\r\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\r\\n        }\\r\\n      });\\r\\n      return attrs;\\r\\n    };\\r\\n    var tag = config.tag;\\r\\n    var methousAttrs = getMethousAttrs();\\r\\n    // 属性\\r\\n    var attrs = this.getAttrs(scheme, isView);\\r\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\r\\n    return str;\\r\\n  }","propertyLayout":"function importLayout(h) {\\r\\n  var _this = this;\\r\\n  function addMethousList() {\\r\\n    this.activeData.__config__.methousList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function addAttrsList() {\\r\\n    this.activeData.__config__.attrsList.push({\\r\\n      name: '''',\\r\\n      value: ''''\\r\\n    });\\r\\n  }\\r\\n  function onInput(val) {\\r\\n    this.activeData.__config__.tag = this.lineCase(val);\\r\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\r\\n  }\\r\\n  return h(\\"el-collapse\\", {\\r\\n    \\"model\\": {\\r\\n      value: _this.activeNames,\\r\\n      callback: function callback($$v) {\\r\\n        _this.activeNames = $$v;\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"数据\\",\\r\\n      \\"name\\": \\"1\\"\\r\\n    }\\r\\n  }, [h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.component\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入组件名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import引入\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.component,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\r\\n      }\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"input\\": onInput.bind(this)\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.tag\\",\\r\\n      \\"rules\\": {\\r\\n        required: true,\\r\\n        message: ''请输入标签名称'',\\r\\n        trigger: ''blur''\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"标签名称\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"clearable\\": true,\\r\\n      \\"placeholder\\": \\"import标签\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.tag,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), h(\\"el-form-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"prop\\": \\"__config__.from\\"\\r\\n    }\\r\\n  }, [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"import\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\r\\n    }\\r\\n  }), h(\\"el-row\\", {\\r\\n    \\"class\\": \\"import-class\\"\\r\\n  }, [h(\\"div\\", {\\r\\n    \\"class\\": \\"components\\"\\r\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\r\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\r\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"路径\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"class\\": \\"froms\\",\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.__config__.from,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  }, [h(\\"template\\", {\\r\\n    \\"slot\\": \\"prefix\\"\\r\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\r\\n    \\"slot\\": \\"suffix\\"\\r\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"组件ref\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"disabled\\": this.activeData.__config__.locked,\\r\\n      \\"placeholder\\": \\"组件ref命名\\",\\r\\n      \\"clearable\\": true\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData.ref,\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\r\\n      }\\r\\n    }\\r\\n  })])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件属性\\",\\r\\n      \\"name\\": \\"2\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"属性值\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addAttrsList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"组件事件\\",\\r\\n      \\"name\\": \\"3\\"\\r\\n    }\\r\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\r\\n    return h(\\"div\\", {\\r\\n      \\"key\\": index,\\r\\n      \\"class\\": \\"reg-item\\"\\r\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\r\\n      \\"class\\": \\"close-btn\\",\\r\\n      \\"on\\": {\\r\\n        \\"click\\": function click() {\\r\\n          _this.activeData.__config__.methousList.splice(index, 1);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"i\\", {\\r\\n      \\"class\\": \\"el-icon-close\\"\\r\\n    })]), h(\\"el-row\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"gutter\\": 5\\r\\n      }\\r\\n    }, [h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"事件名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.name,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"name\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"template\\", {\\r\\n      \\"slot\\": \\"prepend\\"\\r\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"span\\": 12\\r\\n      }\\r\\n    }, [h(\\"el-form-item\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"label-width\\": \\"0\\"\\r\\n      }\\r\\n    }, [h(\\"el-input\\", {\\r\\n      \\"attrs\\": {\\r\\n        \\"disabled\\": _this.activeData.__config__.locked,\\r\\n        \\"clearable\\": true,\\r\\n        \\"placeholder\\": \\"方法名\\"\\r\\n      },\\r\\n      \\"model\\": {\\r\\n        value: item.value,\\r\\n        callback: function callback($$v) {\\r\\n          _this.$set(item, \\"value\\", $$v);\\r\\n        }\\r\\n      }\\r\\n    })])])])]);\\r\\n  }), h(\\"div\\", {\\r\\n    \\"style\\": \\"margin-left: 20px\\"\\r\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\r\\n      \\"type\\": \\"text\\"\\r\\n    },\\r\\n    \\"on\\": {\\r\\n      \\"click\\": addMethousList.bind(this)\\r\\n    }\\r\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"title\\": \\"显示\\",\\r\\n      \\"name\\": \\"4\\"\\r\\n    }\\r\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"渲染条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-if''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\r\\n    \\"slot\\": ''label'',\\r\\n    \\"attrs\\": {\\r\\n      \\"label\\": \\"显示条件\\",\\r\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\r\\n    }\\r\\n  }), h(\\"el-input\\", {\\r\\n    \\"attrs\\": {\\r\\n      \\"type\\": \\"textarea\\",\\r\\n      \\"rows\\": 2,\\r\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\r\\n    },\\r\\n    \\"model\\": {\\r\\n      value: _this.activeData[''v-show''],\\r\\n      callback: function callback($$v) {\\r\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\r\\n      }\\r\\n    }\\r\\n  })])])]);\\r\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\r\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\r\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\r\\n    } else if (config.tag == ''upload-file'') {\\r\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\r\\n    }\\r\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n    if (config.from) {\\r\\n      return (config.component || config.elName) + '','';\\r\\n    }\\r\\n  }","tag":"component","tagIcon":"import","label":"引入组件","component":"component","from":"","methousList":[{"name":"save-finished","value":"getTaskList()"},{"name":"after-wfForm-load","value":"afterWfFormload()"}],"attrsList":[{"name":":is","value":"wfForm"}],"formId":119,"renderKey":119.80743291771468,"componentName":"ElImport119","locked":true},"ref":"wfForm","v-if":null,"v-show":null}]},"maxFormId":120,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, create{{table.className}}, reapply{{table.className}}, get{{table.className}}ByTaskId, agree{{table.className}}, forward{{table.className}}, commission{{table.className}}, propose{{table.className}}, back{{table.className}}, reject{{table.className}}, terminate{{table.className}}, reverse{{table.className}}, listBackActivity, saveDraft{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BizForm from ''@/views/wf/common/bizForm''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BizForm,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      dialogProps: {\\n        visible: false,\\n        title: ''''\\n      },\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    getModelDataById(bizId) {\\n      this.setLoad()\\n      get{{table.className}}ById(bizId).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.editFormData = { ...this.initEditData(), ...responseData.data }\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    checkValid(object) {\\n      // 处理校验定位\\n      let validFlag = true\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n        } else {\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      return validFlag\\n    },\\n    loadModelData(taskId) {\\n      this.setLoad()\\n      get{{table.className}}ByTaskId(taskId).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.editFormData = { ...this.initEditData(), ...responseData.data }\\n          this.$emit(''after-load-data'', this.editFormData)        // 表单数据对象传给父节点\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 保存草稿，files附件列表, draftModel 草稿对象\\n    doSaveDraft(draftModel, files) {\\n      if(!draftModel) {   // 不是从草稿打开创建，保存时更新原草稿\\n        draftModel = {\\n            procdefId: this.procDef.id,\\n            procdefName: this.procDef.name,\\n            name: this.procDef.name + ''-'' + this.editFormData.name\\n        }\\n      }\\n      this.setLoad()\\n      let formData = this.createWfData(this.editFormData, files)\\n      formData.append(''strDraft'', JSON.stringify(draftModel))\\n      saveDraft{{table.className}}(formData).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 创建一个新流程 process流程 actNodes是提交的用户任务节点及其审批用户\\n    doCreate(files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        create{{table.className}}(this.procDef.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n          \\n      }\\n    },\\n    // 重新发起申请 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doReApply(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        reapply{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 同意 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doAgree(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        agree{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 转派任务\\n    doForward(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        forward{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 委派任务\\n    doCommission(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n        \\n        let formData = this.createWfData(this.editFormData, files)\\n        commission{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },   \\n    // 拟办（办理委派过来的任务）\\n    doPropose(comment, files) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        propose{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    }, \\n    // 拒绝\\n    doReject(comment, files) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        reject{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    }, \\n    // 退回 comment 意见, actNodes退回节点和用户信息\\n    doBack(comment, files, actNodes) {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n        this.editFormData.taskComement = comment  // 意见\\n\\n        let formData = this.createWfData(this.editFormData, files)\\n        back{{table.className}}(this.task.id, formData).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n        this.outputError(error)         \\n        })\\n      }\\n    },\\n    // 终止流程 comment 意见, actNodes退回节点和用户信息\\n    doTerminate(comment, files) {\\n      this.setLoad()\\n      this.editFormData.taskComement = comment  // 意见\\n\\n      let formData = this.createWfData(this.editFormData, files)\\n      terminate{{table.className}}(this.task.id, formData).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.$emit(''save-finished'')\\n        }\\n        this.showMessage(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 撤回任务\\n    doReverse(task) {\\n      this.setLoad()\\n      reverse{{table.className}}(task.id).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    doListActivity() {\\n      let valid = this.checkValid()\\n      if (valid) {\\n        this.setLoad()\\n        listBackActivity(this.task.id).then(responseData => {\\n          this.handleResponse(responseData)\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)         \\n        })\\n      }\\n    },\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(formData, editFormData) {\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n    },\\n    {{/if}}\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDeleteChild(tableData, index) { // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.elName == ''EditTable''}}\\n    onAdd{{item['':data''] | upperCase}}() {\\n      this.editFormData.{{item['':data'']}}.push({\\n        {{each item.__config__.children columnItem}}\\n          {{if columnItem.__config__.tag == ''ux-table-column''}}\\n          {{each columnItem.__config__.children formItem}}\\n            {{if formItem.__config__.tag == ''el-form-item'' && formItem.__config__.children[0][''__vModel__'']}}\\n              {{set component = formItem.__config__.children[0]}}\\n              {{if columnItem.__config__.field && (columnItem.__config__.field.javaType.value == ''Custom'' || columnItem.__config__.field.javaType.value == ''This'')}}\\n      {{component[''__vModel__'']}}: {\\n                  {{each columnItem.__config__.field.childFields field}}\\n        {{field.value | camelCase ''_''}}: null,\\n                  {{/each}}\\n      },\\n                {{else if component.__config__.elName === ''PickerTimeRange'' || component.__config__.elName == ''PickerMonthRange'' || component.__config__.elName == ''PickerTimeDateRange''}}\\n                  {{if component[''__vModel__''].start && component[''__vModel__''].end}}\\n                    {{component[''__vModel__''].start}}: {{@ component.__config__.defaultValue[0] ? component.__config__.defaultValue[0] : null | stringify}}, // {{columnItem[''label'']}}\\n                    {{component[''__vModel__''].end}}: {{@ component.__config__.defaultValue[1] ? component.__config__.defaultValue[1] : null | stringify}}, // {{columnItem[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n      {{component[''__vModel__'']}}: {{@ component.__config__.defaultValue | stringify}}, // {{columnItem[''label'']}}\\n                {{/if}}\\n              {{/if}}\\n          {{/each}}\\n          {{/if}}\\n        {{/each}}\\n      })\\n    },\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.dialogProps.visible = true\\n      this.initOptions()\\n      if(this.wfAction == ''create'') {\\n        this.$refs[''editForm''].resetFields()\\n        // 从草稿创建\\n        if(this.bizData) {\\n          this.editFormData = { ...this.initEditData(), ...this.bizData }\\n        }\\n      } else if(this.wfAction == ''approve'') {\\n        // 重新申请\\n        let reApply = this.task.assignee == this.task.owner && this.task.assignee == this.task.extInfo.applicantId && this.task.taskDefinitionKey == this.task.extInfo.appActId\\n        if(!reApply) {\\n          this.action = \\"view\\"\\n        }\\n        this.loadModelData(this.task.id)\\n      } else if(this.wfAction == ''viewBiz'') {\\n        // 需从数据库获取，否则子表没有数据\\n        // this.expenseModel = this.bizData\\n        this.action = \\"view\\"\\n        this.getModelDataById(this.bizData.id)\\n      } else if(this.wfAction == ''viewTask'') {\\n        this.action = \\"view\\"\\n        this.loadModelData(this.task.id)\\n      } else {\\n        console.err(\\"=============== 业务审批单中，实现的：\\" + this.action)\\n      }\\n    })\\n  }\\n}\\n</script>\\n<style>\\n    .my-input-sc {\\n       display: inline-block;\\n       height: 30px;\\n       line-height: 30px;\\n       -webkit-appearance: none;\\n       background-color: #FFFFFF;\\n       background-image: none;\\n       border-radius: 4px;\\n       border: 1px solid #DCDFE6;\\n       box-sizing: border-box;\\n       color: #606266;\\n       font-size: inherit;\\n       outline: none;\\n       padding: 0 15px;\\n       transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n       width: 100%;\\n    }\\n  </style>","__config__":{"children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function editFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名(ref)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单名\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"label\\": \\"数据对象\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单尺寸\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签对齐\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签宽度\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"行内提示\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''inline-message''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"form","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.49575553203782,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}]},"maxFormId":102,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1379581961210405042, remarks='前端-增删改查（工作流一对多）', create_by='超级管理员(super)', create_date='2023-02-07 10:23:11', update_by='超级管理员(super)', update_date='2023-05-26 13:53:27', del_flag='0'
WHERE id=1379581961210405043;
UPDATE dc_template
SET name='一对多树形-新版', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return false\\n  }\\n\\n  // 树型表结构、包含子表\\n  return dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id'' && dbModel.childTables.length > 0\\n  })\\n  \\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n      tabName: ''editForm'', // tab标签页\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 初始化弹窗标题\\n   */\\n  function insDialog(page) {\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    if (!dialog) return\\n    dialog.title = dbModel.name\\n  }\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n\\n  function insTabs(page) {\\n    let component\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    if (!dialog) return\\n    if (dbModel.mainChildTableExists) { // 只存在一个关联表, \\n      component = dialog\\n      // 初始化主表表单（不存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children.push(mainTableComponent)\\n    } else {\\n      const tab = tools.createTabComponent(page, dbModel.table)\\n      dialog.__config__.children.push(tab)\\n      component = tab\\n      // 初始化主表表单（存在tab切换）\\n      const mainTableComponent = tools.createMainTableComponent(page, dbModel.table, dbModel.childTables)\\n      component.__config__.children[0].__config__.children.push(mainTableComponent)\\n    }\\n    \\n    // 初始化子表表单\\n    dbModel.childTables.forEach((child, index) => {\\n      if(child.isAssociation !== ''1'' && child.isOneToOne !== ''1'') { // 非关联表\\n        const childTableComponent = tools.createChildTableComponent(page, child, dbModel, index)\\n        component.__config__.children.push(childTableComponent)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') > 0) {\\n      insConditionPanel.call(this, page)\\n      insDialog.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      insTabs.call(this, page)\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { tree{{table.className}}{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport DcMain from ''@/views/components/dcMain''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: DcMain,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n      this.setLoad()\\n      /* 查询参数 和数据权限 */\\n      this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  {{if item.__config__.childClassName}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.childClassName + \\".\\" + item.__config__.field.name : ''''}}'',\\n                  {{else}}\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  {{/if}}\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n      this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      tree{{table.className}}(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableData = responseData.data ? responseData.data : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.$refs.editForm.$emit(''openViewDialog'', scope.row.id)\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    onCreate(scope) {\\n      this.$refs.editForm.$emit(''openAddDialog'', scope.row)\\n    },\\n    onEdit(scope) {\\n      this.$refs.editForm.$emit(''openEditDialog'', scope.row.id)\\n    },\\n    onCopy(scope) {\\n      this.$refs.editForm.$emit(''openCopyDialog'', scope.row.id)\\n    },\\n    onDelete(scope) {\\n      this.$confirm(''确定删除吗？'', ''确认'', {\\n        confirmButtonText: ''确定'',\\n        cancelButtonText: ''取消'',\\n        type: ''warning''\\n      }).then(() => {\\n        this.setLoad()\\n        delete{{table.className}}(scope.row).then(responseData => {\\n          if(responseData.code == 100) {\\n            this.getList()\\n            this.showMessage({type: ''success'', msg: ''删除成功''})\\n          } else {\\n            this.showMessage(responseData)\\n          }\\n          this.resetLoad()\\n        }).catch(error => {\\n          this.outputError(error)\\n        })\\n      }).catch(() => {})\\n    },\\n{{/if}}\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.65303723101324,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"edit-form","tagIcon":"row","label":"引入组件","component":"EditForm","from":"./form","methousList":[{"name":"save-finished","value":"getList"},{"name":"before-load","value":"setLoad"},{"name":"after-load","value":"resetLoad"}],"attrsList":[{"name":":permission","value":"permission"}],"formId":102,"renderKey":102.71083538748525,"componentName":"ElImport102","locked":true},"ref":"editForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.54343918987628,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.57522994522306,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.36425791105546,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":115,"renderKey":115.75617569404264,"componentName":"ElConditionPanel115","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":106,"renderKey":106.99408390325414,"componentName":"ElQueryForm106","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","elName":"Button","tag":"el-tooltip","tagIcon":"button","label":"按钮","children":[{"__config__":{"designLayout":"function buttonLayout(h, element, index, parent) {\\n    var slots = {\\n      default: function _default(h, conf, key) {\\n        return conf.__slot__[key];\\n      }\\n    };\\n    var config = element.__config__;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode;\\n  }","outputHtml":"function buttonLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    return \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(scheme.__slot__.default, \\"</\\").concat(config.tag, \\">\\");\\n  }","elName":"Button","tag":"el-button","tagIcon":"button","label":"按钮","document":"https://element.eleme.cn/#/zh-CN/component/button","isInner":true,"formId":109,"renderKey":109.01486413270587,"componentName":"Button109","locked":true},"__slot__":{"default":"添加"},"type":"primary","icon":"el-icon-plus","size":null,"v-on:click":"onCreate",":disabled":null,"v-if":null,"v-show":null}],"document":"https://element.eleme.cn/#/zh-CN/component/tooltip","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center","propertyLayout":"function buttonLayout(h) {\\n  var _this = this;\\n  var isToolTip = false;\\n  isToolTip = this.activeData.disabled === ''undefined'';\\n  function onTooltipChange(val) {\\n    this.activeData.disabled = val ? ''undefined'' : true;\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮文字\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''default'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入按钮文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].__slot__.default,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0].__slot__, \\"default\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''icon'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].icon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"icon\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮类型\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0].size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"是否提示\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''isToolTip'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: isToolTip,\\n      callback: function callback($$v) {\\n        isToolTip = $$v;\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onTooltipChange.bind(this)\\n    }\\n  })]), isToolTip && h(\\"ToolTip\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.button'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0][''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.button'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.children[0]['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__.children[0], '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.button'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","formId":108,"renderKey":108.71415287945592,"componentName":"Button108","locked":true},"v-if":null,"v-show":"permission.add","disabled":true,"effect":"","content":"","placement":""}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":107,"renderKey":107.79524273153936,"componentName":"ElRow107","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":151,"renderKey":151.08278337591267,"componentName":"ViewColumnsSelect151","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":149,"renderKey":149.49625368725438,"componentName":"ElPopover149","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\r\\n    var activeItem = this.$listeners.activeItem;\\r\\n    var config = element.__config__;\\r\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\r\\n    return h(\\"el-col\\", {\\r\\n      \\"class\\": className,\\r\\n      \\"style\\": config.style,\\r\\n      \\"nativeOn\\": {\\r\\n        \\"click\\": function click(event) {\\r\\n          activeItem(element, parent, event);\\r\\n          event.stopPropagation();\\r\\n        }\\r\\n      }\\r\\n    }, [h(\\"render\\", {\\r\\n      \\"key\\": config.renderKey,\\r\\n      \\"attrs\\": {\\r\\n        \\"conf\\": element\\r\\n      }\\r\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\r\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\r\\n    var config = scheme.__config__;\\r\\n\\r\\n    var buildElButtonChild = function buildElButtonChild() {\\r\\n      var children = [];\\r\\n      var slot = scheme.__slot__ || {};\\r\\n\\r\\n      if (slot.default) {\\r\\n        children.push(slot.default);\\r\\n      }\\r\\n\\r\\n      return children.join(''\\\\n'');\\r\\n    };\\r\\n\\r\\n    var attrs = this.getAttrs(scheme, isView, []);\\r\\n    var tooltip = config.tooltip;\\r\\n    var child = buildElButtonChild();\\r\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\r\\n\\r\\n    if (tooltip === true) {\\r\\n      var effect = config.effect,\\r\\n          content = config.content,\\r\\n          placement = config.placement;\\r\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\r\\n    }\\r\\n\\r\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\r\\n    str = this.colWrapper(scheme, str, parent);\\r\\n    return str;\\r\\n  }","propertyLayout":"function iconButtonLayout(h){var _this18=this;return h(\\"div\\",[h(\\"el-collapse\\",{\\"model\\":{value:_this18.activeNames,callback:function callback($$v){_this18.activeNames=$$v;}}},[h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"布局\\",\\"name\\":\\"1\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"按钮图标\\"}},[h(\\"IconInput\\",{\\"model\\":{value:_this18.activeData[''icon-name''],callback:function callback($$v){_this18.$set(_this18.activeData,''icon-name'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"图标类型\\"}},[h(\\"el-select\\",{\\"style\\":\\"width: 100%\\",\\"attrs\\":{\\"clearable\\":true},\\"model\\":{value:_this18.activeData.type,callback:function callback($$v){_this18.$set(_this18.activeData,\\"type\\",$$v);}}},[h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"primary\\",\\"value\\":\\"primary\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"success\\",\\"value\\":\\"success\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"warning\\",\\"value\\":\\"warning\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"danger\\",\\"value\\":\\"danger\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"info\\",\\"value\\":\\"info\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"text\\",\\"value\\":\\"text\\"}}),h(\\"el-option\\",{\\"attrs\\":{\\"label\\":\\"默认\\",\\"value\\":\\"\\"}})])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"提示\\",\\"name\\":\\"2\\"}},[this.activeData.content!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"提示内容\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"placeholder\\":\\"请输入提示内容\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData.content,callback:function callback($$v){_this18.$set(_this18.activeData,\\"content\\",$$v);}}})]),this.activeData.placement!==undefined&&h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"方位\\"}},[h(\\"el-radio-group\\",{\\"model\\":{value:_this18.activeData.placement,callback:function callback($$v){_this18.$set(_this18.activeData,\\"placement\\",$$v);}}},[h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"top\\"}},[\\"\\\\u4E0A\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"bottom\\"}},[\\"\\\\u4E0B\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"left\\"}},[\\"\\\\u5DE6\\"]),h(\\"el-radio-button\\",{\\"attrs\\":{\\"label\\":\\"right\\"}},[\\"\\\\u53F3\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"事件\\",\\"name\\":\\"3\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"点击事件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"disabled\\":this.activeData.__config__.locked,\\"placeholder\\":\\"click事件（方法名）\\",\\"clearable\\":true},\\"model\\":{value:_this18.activeData[''v-on:click''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-on:click'',$$v);}}},[h(\\"template\\",{\\"slot\\":\\"prepend\\"},[\\"@\\"])])])]),h(\\"el-collapse-item\\",{\\"attrs\\":{\\"title\\":\\"显示\\",\\"name\\":\\"4\\"}},[h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"渲染条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"显示条件（v-if）\\"},\\"model\\":{value:_this18.activeData[''v-if''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-if'',$$v);}}})]),h(\\"el-form-item\\",{\\"attrs\\":{\\"label\\":\\"显示条件\\"}},[h(\\"el-input\\",{\\"attrs\\":{\\"type\\":\\"textarea\\",\\"rows\\":2,\\"placeholder\\":\\"渲染条件（v-show）\\"},\\"model\\":{value:_this18.activeData[''v-show''],callback:function callback($$v){_this18.$set(_this18.activeData,''v-show'',$$v);}}})])])])]);}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":150,"renderKey":150.290011248767,"componentName":"IconButton150"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":0,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":155,"renderKey":155.91842555535587,"componentName":"IconButton155","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":112,"renderKey":112.26977327429735,"componentName":"TableOptColumnHeader112","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":114,"renderKey":114.2314904351385,"componentName":"IconButton114","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":153,"renderKey":153.5170206410311,"componentName":"IconButton153","locked":true},"v-on:click":"onCreate(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"添加下级","placement":"top","icon-name":"el-icon-circle-plus-outline"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":115,"renderKey":115.02772091638913,"componentName":"IconButton115","locked":true},"v-on:click":"onEdit(scope)","type":"primary","v-if":null,"v-show":"permission.edit","content":"编辑","placement":"top","icon-name":"el-icon-edit"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":116,"renderKey":116.16428808115786,"componentName":"IconButton116","locked":true},"v-on:click":"onCopy(scope)","type":"primary","v-if":null,"v-show":"permission.add","content":"复制","placement":"top","icon-name":"el-icon-document"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":117,"renderKey":117.6882609662307,"componentName":"IconButton117","locked":true},"v-on:click":"onDelete(scope)","type":"danger","v-if":null,"v-show":"permission.remove && (!(scope.row.children) || scope.row.children.length <=0)","content":"删除","placement":"top","icon-name":"el-icon-delete"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.79887036730621,"componentName":"IconButton118","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":113,"renderKey":113.5409587866103,"componentName":"TableOptColumnMain113","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":111,"renderKey":111.98069824170435,"componentName":"ElTableOptColumn111","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"160px","min-width":"160px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":110,"renderKey":110.79135849013225,"componentName":"QueryTable110","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":"undefined",":summary-method":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"children","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}}]},"maxFormId":115,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, save{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport BaseUI from ''@/views/components/baseUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BaseUI,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      tabName: ''editForm'', // tab标签页\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n{{if table.source == ''BASE TABLE''}}\\n    onSubmit() {\\n      let validFlag = true\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{ if item.__config__.tag == ''el-form'' && item.__config__.elName == ''ElEditForm'' }}\\n            {{each item.__config__.children childItem}}\\n              {{if childItem.__config__.elName == ''EditTable''}}\\n        this.$refs[''{{item.ref}}''].validate(valid => {\\n          if (valid) {\\n          } else {\\n            this.tabName = ''{{childItem.ref}}''\\n            validFlag = false\\n            return false\\n          }\\n        })\\n              {{/if}}\\n            {{/each}}\\n        \\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n        } else {\\n          this.tabName = ''editForm''\\n          validFlag = false\\n          return false\\n        }\\n      })\\n      if(validFlag) {\\n        this.doSave()\\n      }\\n    },\\n    doSave() {\\n      this.setLoad()\\n{{if table.mutilFileUploadExists || table.imageUploadExists}}\\n      let formData = this.createFormData(this.editFormData)\\n      save{{table.className}}(formData).then(responseData => {\\n{{else}}\\n      save{{table.className}}(this.editFormData).then(responseData => {\\n{{/if}}\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.showMessage({type: ''success'', msg: ''保存成功''})\\n          this.$emit(''save-finished'')\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    switchEdit() {\\n      this.action = ''edit''\\n      this.dialogProps.title = `修改${this.dialogTitle}`\\n      this.initOptions(this.editFormData)\\n    },\\n\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(editFormData) {\\n      let formData = new FormData()\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''entity'', JSON.stringify(editFormData))\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n      return formData\\n    },\\n    {{/if}}\\n{{/if}}\\n    getFormById(id) {\\n      this.setLoad()\\n      return new Promise((resolve) => {\\n       get{{table.className}}ById(id).then((responseData) => {\\n        let form = {}\\n        if (responseData.code == 100) {\\n          form = responseData.data\\n          if(validatenull(form.parent)) {\\n            form.parent = {id: null}\\n          } \\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n        resolve(form)\\n      }).catch((error) => {\\n        this.outputError(error)\\n        })\\n      })\\n    },\\n    onDialogClose() {\\n      this.dialogProps.visible = false\\n    },\\n    onDialogOpen() {\\n      this.$nextTick(() => {\\n        this.$refs[''editForm''].clearValidate()\\n      })\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n    let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''ObjectSelect''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()  \\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    onDeleteChild(tableData, index) { // 根据下标删除子表数据\\n      tableData.splice(index, 1)\\n    },\\n    onParentChange() {\\n      let nodes = this.$refs[''parentCascader''].getCheckedNodes()\\n      if(nodes.length > 0) {\\n        if(nodes[0] && nodes[0].data && nodes[0].data.children) {\\n          this.editFormData.sort = (nodes[0].data.children.length + 1) * 10000\\n        } else if(nodes[0]){\\n            this.editFormData.sort = 10000\\n        } else {\\n          this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n        }\\n      }else{\\n        this.editFormData.sort = (this.parentOptions.length + 1) * 10000\\n      }\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.elName == ''EditTable''}}\\n    onAdd{{item['':data''] | upperCase}}() {\\n      this.editFormData.{{item['':data'']}}.push({\\n        {{each item.__config__.children columnItem}}\\n          {{if columnItem.__config__.tag == ''ux-table-column''}}\\n          {{each columnItem.__config__.children formItem}}\\n            {{if formItem.__config__.tag == ''el-form-item'' && formItem.__config__.children[0][''__vModel__'']}}\\n              {{set component = formItem.__config__.children[0]}}\\n              {{if columnItem.__config__.field && (columnItem.__config__.field.javaType.value == ''Custom'' || columnItem.__config__.field.javaType.value == ''This'')}}\\n      {{component[''__vModel__'']}}: {\\n                  {{each columnItem.__config__.field.childFields field}}\\n        {{field.value | camelCase ''_''}}: null,\\n                  {{/each}}\\n      },\\n                {{else if component.__config__.elName === ''PickerTimeRange'' || component.__config__.elName == ''PickerMonthRange'' || component.__config__.elName == ''PickerTimeDateRange''}}\\n                  {{if component[''__vModel__''].start && component[''__vModel__''].end}}\\n                    {{component[''__vModel__''].start}}: {{@ component.__config__.defaultValue[0] ? component.__config__.defaultValue[0] : null | stringify}}, // {{columnItem[''label'']}}\\n                    {{component[''__vModel__''].end}}: {{@ component.__config__.defaultValue[1] ? component.__config__.defaultValue[1] : null | stringify}}, // {{columnItem[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n      {{component[''__vModel__'']}}: {{@ component.__config__.defaultValue | stringify}}, // {{columnItem[''label'']}}\\n                {{/if}}\\n              {{/if}}\\n          {{/each}}\\n          {{/if}}\\n        {{/each}}\\n      })\\n    },\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n    parentOptions(newVal, oldVal) {\\n      if(newVal != oldVal && this.action == ''add'' ) {\\n        this.$nextTick(() => {\\n          this.onParentChange()\\n        })\\n      }\\n    },\\n    tabName(val, oldVal) {\\n      this.$nextTick(() => {\\n        if(this.$refs[val] && this.$refs[val].doLayout) {\\n          this.$refs[val].doLayout()\\n        }\\n      })\\n    }\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.$on(''openViewDialog'', async function(id) {\\n        this.action = ''view''\\n        this.dialogProps.title = `查看${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n{{if table.source == ''BASE TABLE''}}\\n      this.$on(''openEditDialog'', async function(id) {\\n        this.action = ''edit''\\n        this.dialogProps.title = `修改${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openAddDialog'', function(parent) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = this.initEditData(parent)\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.dialogProps.visible = true\\n      })\\n      this.$on(''openCopyDialog'', async function(id) {\\n        this.action = ''add''\\n        this.dialogProps.title = `添加${this.dialogTitle}`\\n        this.editFormData = { ...this.initEditData(), ...await this.getFormById(id) }\\n        this.initOptions(this.editFormData)\\n        this.tabName = ''editForm''\\n        this.editFormData.id = null   //把id设置为空，添加一个新的\\n        <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.elName == ''ElUploadImage'' || item.__config__.elName == ''ElUploadFile'') && item[''__vModel__'']}}\\n        this.editFormData.{{item[''__vModel__'']}} = null\\n          {{else if item.__config__.elName == ''EditTable''}}\\n        for (var i = 0; i <= this.editFormData.{{item['':data'']}}.length - 1; i++) {\\n          this.editFormData.{{item['':data'']}}[i].id = null\\n        } \\n          {{else if item.__config__.tag === ''el-select'' && item.__config__.elName == ''ObjectSelect''}}\\n        for (var i = 0; i <= this.editFormData.{{item[''__vModel__'']}}.length - 1; i++) {\\n          this.editFormData.{{item[''__vModel__'']}}[i].id = null\\n        }\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n    {{if table.hasPassWordInput}}\\n    //TODO 修改加密字段\\n        this.editFormData.loginPasswordUpdate = true   // 允许修改密码\\n    {{/if}}\\n        this.dialogProps.visible = true\\n      })\\n{{/if}}\\n    })\\n  }\\n}\\n</script>\\n<style>\\n    .my-input-sc {\\n       display: inline-block;\\n       height: 30px;\\n       line-height: 30px;\\n       -webkit-appearance: none;\\n       background-color: #FFFFFF;\\n       background-image: none;\\n       border-radius: 4px;\\n       border: 1px solid #DCDFE6;\\n       box-sizing: border-box;\\n       color: #606266;\\n       font-size: inherit;\\n       outline: none;\\n       padding: 0 15px;\\n       transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\n       width: 100%;\\n    }\\n  </style>","__config__":{"children":[{"__config__":{"elName":"ElDialog","designLayout":"function dialogLayout(h, element, index, parent) {\\n    var slots = {\\n      footerButtonArr: function footerButtonArr(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.footerButtonArr.forEach(function (item) {\\n          list.push(h(\\"el-button\\", {\\n            \\"attrs\\": {\\n              \\"type\\": item.type,\\n              \\"size\\": conf.__config__.size,\\n              \\"disabled\\": item.disabled\\n            }\\n          }, [item.__slot__.default]));\\n        });\\n        if (conf.__config__.footerAlign != ''null'') {\\n          var footerAlign = \\"text-align: \\".concat(conf.__config__.footerAlign);\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [h(\\"div\\", {\\n            \\"style\\": footerAlign\\n          }, [list])]);\\n        } else {\\n          return h(\\"span\\", {\\n            \\"slot\\": \\"footer\\"\\n          }, [list]);\\n        }\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": \\"overflow: hidden\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    // 设计模式下显示对话框\\n    var confDesigner = Object.assign({\\n      visible: true,\\n      modal: false,\\n      class: ''el-dialog__wrapper_cust'',\\n      width: element.width\\n    }, element);\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": confDesigner,\\n        \\"slots\\": slots\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function dialogLayout(scheme, parent, isView) {\\n    var _this2 = this;\\n    var config = scheme.__config__;\\n    var btnWrapper = function btnWrapper() {\\n      // 获取dialog组件 底部按钮数组\\n      var list = [];\\n      scheme.__slot__.footerButtonArr.forEach(function (item) {\\n        item.size = scheme.__config__.size;\\n        var attrs = _this2.getAttrs(item, isView);\\n        var str = \\"<el-button \\".concat(attrs, \\">\\\\n        \\").concat(item.__slot__.default, \\"\\\\n     </el-button>\\");\\n        list.push(str);\\n      });\\n      var style = '''';\\n      if (config.footerAlign) {\\n        style = \\"style=\\\\\\"text-align: \\".concat(config.footerAlign, \\";\\\\\\"\\");\\n      }\\n      var btnWrapperStr = \\"<span slot=\\\\\\"footer\\\\\\" class=\\\\\\"dialog-footer\\\\\\" \\".concat(style, \\">\\\\n                              \\").concat(list.join(''\\\\n''), \\"\\\\n                            </span>\\");\\n      return list.length > 0 ? btnWrapperStr : '''';\\n    };\\n    var children = this.createChildren(scheme, parent, isView);\\n    var btnWrapperStr = btnWrapper(); // 底部按钮\\n    var attrs = this.getAttrs(scheme, isView, [''title'']);\\n    var dialogProp = scheme.__config__.locked ? ''dialogProps'' : \\"dialog\\".concat(scheme.__config__.formId, \\"Props\\");\\n    var dialogPropAttrs = \\":title=\\\\\\"\\".concat(dialogProp, \\".title\\\\\\" :visible.sync=\\\\\\"\\").concat(dialogProp, \\".visible\\\\\\" :close-on-click-modal=\\\\\\"false\\\\\\"\\");\\n    var str = \\"<el-dialog \\".concat(attrs, \\" \\").concat(dialogPropAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        <el-row>\\\\n          \\").concat(children.join(''\\\\n''), \\"\\\\n        </el-row>\\\\n        \\").concat(btnWrapperStr, \\"\\\\n      </el-dialog>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function dialogLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否是全屏'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''fullscreen'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData.fullscreen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"fullscreen\\", $$v);\\n      }\\n    }\\n  })]), !this.activeData.fullscreen && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''open'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''open'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 打开的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:open''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:open'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"close\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''close'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''close'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Dialog 关闭的回调（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:close''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:close'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"底部按钮\\",\\n      \\"name\\": \\"8\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮布局'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''footerAlign'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.footerAlign,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"footerAlign\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u5C45\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件尺寸'',\\n      \\"guide\\": this.getHelp(''page.dailog'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"footerButton\\", {\\n    \\"attrs\\": {\\n      \\"activeData\\": this.activeData\\n    }\\n  })])]);\\n}","outputData":"function dialogData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 对话框属性变量'');\\n    list.push(\\"dialog\\".concat(scheme.__config__.locked ? '''' : scheme.__config__.formId, \\"Props: {\\"));\\n    list.push(\\"visible: \\".concat(isView ? true : false, \\",\\"));\\n    list.push(\\"title: ''\\".concat(scheme.title, \\"''\\"));\\n    list.push(''},'');\\n    list.push(\\"dialogTitle: ''\\".concat(scheme.title, \\"'',\\"));\\n    scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n      list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n    });\\n    return list;\\n  }","tag":"el-dialog","tagIcon":"row","label":"Dialog对话框","children":[],"footerAlign":null,"document":"https://element.eleme.cn/#/zh-CN/component/dialog","size":null,"formId":101,"renderKey":101.38059412739378,"componentName":"ElDialog101","locked":true},"__slot__":{"footerButtonArr":[{"__slot__":{"default":"保存"},"v-on:click":"onSubmit","type":"primary","v-show":"action != \\"view\\"","size":null},{"__slot__":{"default":"取消"},"v-on:click":"onDialogClose","type":"","v-if":"action != \\"view\\"","size":null},{"__slot__":{"default":"关闭"},"v-on:click":"onDialogClose","type":"","v-if":"action == \\"view\\"","size":null}]},"v-on:open":"onDialogOpen","v-on:close":"onDialogClose","title":"对话框标题","v-loading":"loading","width":"70%","fullscreen":false}]},"maxFormId":101,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n        id: ''{{table.id}}'',\\r\\n        schemeId: ''{{table.scheme.id}}'',\\r\\n        name: ''{{table.comments}}'',\\r\\n        conditionPanel: conditions,\\r\\n        type: ''main'',\\r\\n        dataRules:[]\\r\\n    }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1324962226446794898, remarks='前端-增删改查（一对多树形-新版）', create_by='超级管理员(super)', create_date='2023-01-01 16:53:47', update_by='超级管理员(super)', update_date='2023-05-26 13:53:08', del_flag='0'
WHERE id=1324962226446794899;
UPDATE dc_template
SET name='工作流-单表', `type`='0', json='{"name":"单表","descript":"","matchJs":"/**\\n * 根据数据模型，检查模型是否是配\\n * @param {Object} dbModel  后台配置的数据模型\\n * @returns  true 匹配， false 不匹配\\n */\\nfunction match(dbModel) {\\n  if(!dbModel) return false\\n\\n  // 包含子表时，不匹配\\n  if(dbModel.childTables.length > 0 ) {\\n    return false\\n  }\\n\\n  // 树型结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''parent_id''\\n  })) {\\n    return false\\n  }\\n\\n  // 工作流结构表\\n  if(dbModel.table.columns.some(col => {\\n    return col.name == ''proc_inst''\\n  })) {\\n    return true\\n  }\\n\\n  return false\\n}","viewJs":"export default {\\n\\n  data() {\\n    return {\\n      loading: false,\\n      permission: {\\n        view: true,\\n        add: true,\\n        edit: true,\\n        remove: true,\\n        export: true\\n      },\\n      search: {\\n        limit: 10\\n      },\\n      action: ''edit'',\\n      curentRow: {},\\n      moreCodition: false,\\n      moreParm: null,\\n      isQueryConditionPanel: false,\\n      queryEditObject: null,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form''}}\\n            {{if item['':model'']}}\\n              {{item['':model'']}}: {\\n                {{@ item | toCode tpl}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0][''__vModel__'']}}\\n              {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                {{if typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n                  {{if item.__config__.children[0][''__vModel__''].start && item.__config__.children[0][''__vModel__''].end}}\\n                    {{item.__config__.children[0][''__vModel__''].start}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[0] : null | stringify}}, // {{item[''label'']}}\\n                    {{item.__config__.children[0][''__vModel__''].end}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue[1] : null | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{else}}\\n                  {{if item.__config__.children[0].__config__.elName === ''PickerTimeRange''}}\\n                    timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerMonthRange''}}\\n                    monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{else if item.__config__.children[0].__config__.elName === ''PickerTimeDateRange''}}\\n                    dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}}, // {{item[''label'']}}\\n                  {{/if}}\\n                {{/if}}\\n                {{else if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n               {{item.__config__.children[0][''__vModel__'']}}: {\\n                 {{each item.__config__.field.childFields field}}\\n                   {{field.value | camelCase ''_''}}: null,\\n                 {{/each}}\\n               },\\n                      {{else}}\\n                {{item.__config__.children[0][''__vModel__'']}}: {{@ item.__config__.children[0].__config__.defaultValue | stringify}}, // {{item[''label'']}}\\n              {{/if}}\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            tableDataTotal: 0,\\n            tableDataPage: 1,\\n          {{else if item.__config__.tag == ''ux-grid''}}\\n            {{if item['':data'']}}\\n              {{item['':data'']}}: [],\\n              {{/if}}\\n            {{if item.__config__.elName == ''QueryTable''}}\\n              // 查询表格列头\\n              {{item.ref}}Columns: {\\n                version: {{element.version || 0}},\\n                {{each item.__config__.children filed index}}\\n                  {{filed.__config__.formId}}: { \\n                  {{if filed.label != ''undefined'' && filed.label != undefined}}title: ''{{filed.label}}'', {{/if}}          \\n         {{if filed.prop != ''undefined'' && filed.prop != undefined}}field: ''{{filed.prop | camelCase ''_''}}'', {{/if}}         \\n       {{if filed.width}}width: ''{{filed.width}}'',{{/if}}      \\n         visible: {{filed.visible != ''undefined'' && filed.visible != undefined ? false : true}},          \\n        order: {{index}}  \\n                  },\\n                {{/each}}\\n              },\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-pagination''}}\\n            // 分页属性\\n            {{if !item.__config__.locked && item['':page-size'']}}\\n            {{item['':page-size'']}}: 10,\\n            {{/if}}\\n            {{if item['':current-page'']}}\\n            {{item['':current-page'']}}: 1,            \\n            {{/if}}\\n            {{if item['':total'']}}\\n            {{item['':total'']}}: 0,            \\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-dialog''}}\\n           // 对话框属性变量\\n            dialog{{item.__config__.locked ? '''' : item.__config__.formId}}Props: {\\n                visible: true,\\n                title: ''{{item.title}}''\\n            },\\n            dialogTitle: ''{{item.title}}'',\\n            {{@ item | toCode tpl}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-checkbox''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if !item.__config__.isArray && item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : false | stringify}},\\n            {{/if}}\\n          {{else if item.__config__.tag == ''el-radio''}}\\n            {{if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''static''}}\\n              {{item.__config__.loopArray}}: {{@ item.__slot__.options | stringify }},\\n            {{else if item.__config__.isArray && item.__config__.loopArray && item.__config__.dataType == ''dynamic''}}\\n              {{item.__config__.loopArray}}: [],\\n            {{/if}}\\n            {{if item.__vModel__}}\\n              {{item.__vModel__}}: {{@ item.__config__.defaultValue ? item.__config__.defaultValue : ''0'' | stringify}},\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''\\n              && item.__config__.children[0][''__vModel__''] && typeof item.__config__.children[0][''__vModel__''] == ''object''}}\\n            {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange'' || item.__config__.children[0].__config__.elName == ''PickerMonthRange'' || item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n              {{if item.__config__.children[0].__config__.elName == ''PickerTimeRange''}}\\n                timeRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerMonthRange''}}\\n                monthRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{else if item.__config__.children[0].__config__.elName == ''PickerTimeDateRange''}}\\n                dateRange{{item.__config__.formId}}: {{@ item.__config__.children[0].__config__.defaultValue ? item.__config__.children[0].__config__.defaultValue : [] | stringify}},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n    {{@ element | toCode tpl}}\\n\\n      // 选项变量\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-select''\\n                || item.__config__.children[0].__config__.tag == ''el-radio-group''\\n                || item.__config__.children[0].__config__.tag == ''el-checkbox-group''}}\\n              // {{item.label}}选项\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0].__config__.loopArray}}: [],\\n              {{else}}\\n                {{item.__config__.children[0].__config__.loopArray}}: {{@ item.__config__.children[0][''__slot__''].options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n            {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{item.__config__.children[0]['':options'']}}: [],\\n              {{else}}\\n                {{item.__config__.children[0]['':options'']}}: {{@ item.__config__.children[0].__config__.options | stringify }},\\n              {{/if}}\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n    }\\n  }\\n}\\n","initJs":"/**\\n * 在首次打开时，初始化界面组件\\n * @param {Object} template 代码模版对象\\n * @param {Object} dbModel  后台配置的数据模型\\n * @param {Object} tools    工具包\\n * @returns\\n */\\nfunction init(template, dbModel, tools) {\\n\\n  // 处理参数化文件名\\n  template.pages.forEach(page => {\\n    page.fileName = tools.render(page.fileName, dbModel)\\n    page.filePath = tools.render(page.filePath, dbModel)\\n  })\\n\\n  /**\\n   * 在查询面板中根据数据模型插入初始化查询字段\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insConditionPanel(page) {\\n    const container = tools.findElemnt(page, ''ElConditionPanel'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n       if (field.name !== ''del_flag'') {\\n        const component = tools.createConditionPanel(dbModel.table, field)\\n        container.__config__.searchList.push(component)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * 在查询form中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryFormItem(page) {\\n    const container = tools.findElemnt(page, ''ElQueryForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.javaField == ''name'') {\\n        const component = tools.createQfComponent(field, page)\\n        container.__config__.children.unshift(component)\\n      }\\n    })\\n  }\\n  /**\\n   * 在编辑form中根据数据模型插入编辑组件，并根据组件数初始化显示列数\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insEditFormItem(page) {\\n    const dialog = tools.findElemnt(page, ''ElDialog'')\\n    const container = tools.findElemnt(page, ''ElEditForm'')\\n    if (!container) return\\n    dbModel.table.columns.forEach((field) => {\\n      if (field.isEdit && (field.isNotBaseField || field.name == ''remarks'')) {\\n        const component = tools.createEfComponent(field, page, dbModel.table, dbModel.childTables)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    if (container.__config__.children.length > 0) {\\n      tools.createEfComponentCol(container, dialog)\\n    }\\n  }\\n\\n  /**\\n   * 在查询表格中根据数据模型插入查询条件组件\\n   * @param {Object} page\\n   * @returns\\n   */\\n  function insQueryTableItem(page) {\\n    const container = tools.findElemnt(page, ''QueryTable'')\\n    if (!container) return\\n    const tableColumns = JSON.parse(JSON.stringify(dbModel.table.columns))\\n    for (let i = 0; i < tableColumns.length; i++) {\\n      const column = tableColumns[i]\\n      if ((column.javaType.value === ''Custom'' || column.javaType.value === ''This'') && column.childFields.length > 0 && column.javaField.indexOf(''.'') < 0) {\\n        tableColumns.splice(i, 1)\\n        column.childFields.forEach(field => {\\n          const childColumn = JSON.parse(JSON.stringify(column))\\n          childColumn.javaField += `.${field.value}`\\n          childColumn.name = `${column.javaField}.${field.value}`\\n          childColumn.comments = `${column.comments}.${field.label}`\\n          tableColumns.splice(i, 0, childColumn)\\n        })\\n      }\\n    }\\n    tableColumns.forEach((field) => {\\n      if (field.javaType.value != ''File'' && field.javaType.value != ''Image'' && field.name != ''del_flag'' && field.name != ''id'' && field.name.indexOf(''.id'') < 0) {\\n        const component = tools.createQtComponent(field, page)\\n        container.__config__.children.push(component)\\n      }\\n    })\\n    // 排序: 先按照固定排序，在按照锁定排序。右固定，锁定的排后面；左固定和不固定，锁定的排前面\\n    container.__config__.children.sort((a, b) => {\\n      let weightA = a.fixed == ''right'' ? (30 + (a.__config__.locked ? 1 : 0)) : ((a.fixed == ''left'' ? 10 : 20) - (a.__config__.locked ? 1 : 0))\\n      let weightB = b.fixed == ''right'' ? (30 + (b.__config__.locked ? 1 : 0)) : ((b.fixed == ''left'' ? 10 : 20) - (b.__config__.locked ? 1 : 0))\\n      return weightA - weightB\\n    })\\n  }\\n\\n  /**\\n   *\\n   * @param {*} page\\n   */\\n  function insEditTableItem(page) {}\\n\\n  template.pages.forEach((page) => {\\n    if (page.locked && page.fileName.indexOf(''.vue'') > 0) {\\n      insConditionPanel.call(this, page)\\n      insQueryFormItem.call(this, page)\\n      insEditFormItem.call(this, page)\\n      insQueryTableItem.call(this, page)\\n      insEditTableItem.call(this, page)\\n    }\\n  })\\n}","pages":[{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"index.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport { validatenull } from ''@/utils/validate''\\n\\nimport { list{{table.className}}Page{{if table.source == ''BASE TABLE''}}, delete{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{ if subModuleName }}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\n\\nimport { listResourcePermission } from ''@/api/admin/common/permission''\\nimport { getHistProcInstance } from ''@/api/wf/procinst''\\nimport { getProcessByKey, getStartForm } from ''@/api/wf/processdefinition''\\n\\n/** 根据用户界面配置import组件 开始 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport metadata from ''./metadata''\\nimport ExportExcelButton from ''@/components/ExportExcelButton''\\nimport WfMainUI from ''@/views/wf/common/wfMainUI''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: WfMainUI,\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n    ExportExcelButton,\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      wfForm:  null,    // 工作流表单\\n      currentRow: null,      // 当前查看申请\\n      \\n      permission: {\\n        view: false,\\n        add: false,\\n        edit: false,\\n        remove: false,\\n        export: false\\n      },\\n      metadata,\\n\\n      /** 根据用户界面配置生成data数据 开始 */\\n      {{@ element | makeUpData}}\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n      version: {{element.version || 0}},\\n      search: {\\n        // 查询条件   业务表设置的筛选条件\\n        params: [],\\n\\n        offset: 0,\\n        limit: 10,\\n        columnName: '''',      // 排序字段名\\n        order: ''''            // 排序\\n      },\\n      searchList: [],\\n      tableId: ''{{table.id}}'',\\n      schemeId: ''{{id}}''\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''ux-grid'' && item.__config__.elName == ''QueryTable''}}\\n            {{if item[''show-summary''] && item[''show-summary''] == true}}\\n    {{item['':summary-method'']}} ({ columns, data }) {\\n      const means = [] // 合计\\n      columns.forEach((column, columnIndex) => {\\n        if (columnIndex === 0) {\\n          means.push(''合计'')\\n        } else {\\n          const values = data.map(item => Number(item[column.property]));\\n          // 合计\\n          if (!values.every(value => isNaN(value)) && column.params.summary) {\\n            means[columnIndex] = values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n            {{if item.__config__[''summary-unit'']}}\\n            means[columnIndex] += '' {{item.__config__[''summary-unit'']}}''\\n            {{/if}}\\n          } else {\\n            means[columnIndex] = '''';\\n          }\\n        }\\n      })\\n      // 返回一个二维数组的表尾合计\\n      return [means]\\n    },\\n            {{/if}}\\n          {{else}}\\n            {{@ item | toCode tpl}}\\n          {{/if}}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n  getList() {\\n    this.setLoad()\\n    /* 查询参数 和数据权限 */\\n    this.search.params = []\\n      if(this.isQueryConditionPanel) {\\n        this.search.params = this.search.params.concat(this.compositeCondition())\\n      } else {\\n        <% var tpl = `\\n        {{if element.__config__.children}}\\n          {{each element.__config__.children item}}\\n            {{if item.__config__.tag == ''el-form-item''}}\\n              {{if item.__config__.children[0].__config__.operator && item.__config__.children[0][''__vModel__'']}}\\n                this.search.params.push({\\n                  columnName: ''{{item.__config__.field ? item.__config__.field.name : ''''}}'',\\n                  queryType: ''{{item.__config__.children[0].__config__.operator}}'',\\n                  {{if item.__config__.field && (item.__config__.field.javaType.value == ''Custom'' || item.__config__.field.javaType.value == ''This'')}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}.{{item.__config__.field ? item.__config__.field.associatedField : ''id''}} : null\\n                  {{else}}\\n                    value: !validatenull(this.queryFormData.{{item.__config__.children[0][''__vModel__'']}}) ? this.queryFormData.{{item.__config__.children[0][''__vModel__'']}} : null\\n                  {{/if}}\\n                })\\n              {{/if}}\\n            {{else}}\\n              {{@ item | toCode tpl}}\\n            {{/if}}\\n          {{/each}}\\n        {{/if}}\\n      ` %>\\n      {{@ element | toCode tpl}}\\n      }\\n      // 数据权限: {{table.comments}}{{table.name}}\\n        this.pushDataPermissions(this.search.params, this.$route.meta.routerId, this.tableId)\\n      list{{table.className}}Page(this.search).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.tableDataTotal = responseData.data.total\\n          this.tableData = responseData.data.rows ? responseData.data.rows : []\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onSearch() {\\n      if(this.isQueryConditionPanel) {\\n        this.search.offset = 0\\n        this.tableDataPage = 1\\n        this.getList()\\n      } else {\\n        this.$refs[''queryForm''].validate(valid => {\\n          if (valid) {\\n            this.search.offset = 0\\n            this.tableDataPage = 1\\n            this.getList()\\n          } else {\\n            return false\\n          }\\n        })\\n      }\\n    },\\n    onSizeChange(val) {\\n      this.tableDataPage = 1\\n      this.search.limit = val;\\n      this.search.offset = (this.tableDataPage - 1) * val\\n      this.getList()\\n    },\\n    onCurrentChange(val) {\\n      this.search.offset = (val - 1) * this.search.limit\\n      this.tableDataPage = val\\n      this.getList()\\n    },\\n    async pageInit() {\\n      this.setLoad()\\n      this.initOptions(this.queryModel)\\n      this.onSearch()\\n      listResourcePermission(this.$route.meta.routerId).then(responseData => {\\n        if( responseData.code == 100) {\\n          this.permission.view = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:read''\\n          })\\n          this.permission.export = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:export''\\n          })\\n{{if table.source == ''BASE TABLE''}}\\n          this.permission.add = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:create''\\n          })\\n          this.permission.edit = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:update''\\n          })\\n          this.permission.remove = responseData.data.find(item => {\\n            return item.permission === ''{{table.className | lowerCase}}:delete''\\n          })\\n{{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    onView(scope) {\\n      this.setLoad()\\n      getHistProcInstance(scope.row.procInst).then(responseData => {\\n        if(responseData.hasOwnProperty(''processDefinitionId'')) {\\n          let definitionId = responseData.processDefinitionId\\n          if(definitionId) {\\n            getStartForm(definitionId).then(startFormResp => {\\n              if(startFormResp.hasOwnProperty(''key'')) {\\n                if(startFormResp.key) {\\n                  this.currentRow = {\\n                    formKey: startFormResp.key,\\n                    definitionId: definitionId,\\n                    row: scope.row\\n                  }\\n                  this.loadWfForm(startFormResp.key)\\n                } else {\\n                  this.showMessage({type:''warning'' , msg: ''流程未配置form，请联系管理员。''})\\n                }\\n              }else{\\n                this.showMessage(startFormResp)\\n              }\\n              this.resetLoad()\\n            })\\n          } else {\\n            this.showMessage({type:''warning'' , msg: ''流程实例没有找到流程定义。''})\\n          }\\n        }else{\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)\\n      })\\n    },\\n    // 重写dcMain的方法\\n    onShowHistory(scope) {\\n      this.$refs.commentForm.$emit(''openComment'', scope.row.procInst)\\n    },\\n    afterWfFormload() {\\n      this.$refs.wfForm.$emit(''openViewBizDialog'', this.currentRow.formKey, this.currentRow.definitionId, this.currentRow.row)\\n    },\\n    onVLoading(loading) {\\n      loading ? this.setLoad() : this.resetLoad()\\n    },\\n    onSortChange( orderby ) {\\n      if(validatenull(orderby.prop)) {\\n        this.search.columnName = ''''\\n        this.search.order = ''''\\n      } else  {\\n        this.search.columnName = orderby.prop\\n        this.search.order = orderby.order\\n      }\\n      this.getList()\\n    },\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n          this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n          this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    // 初始化自定义类型选择框选项变量\\n    initOptions(This) {\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted() {\\n    this.pageInit()\\n\\n    this.columnDrop(this.$refs.table)\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\">\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"history","tagIcon":"row","label":"引入组件","component":"History","from":"@/views/components/history","methousList":[],"attrsList":[{"name":":bussObject","value":"curentRow"}],"formId":101,"renderKey":101.46251171279611,"componentName":"ElImport101","locked":true},"ref":"history","v-if":null,"v-show":null},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ElConditionTag","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionTagLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''事件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-on:search'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"search事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:search''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:search'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionTag'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-tag","tagIcon":"row","label":"查询标签","component":"QueryTag","from":"@/views/components/queryTag","searchList":[],"formId":104,"renderKey":104.79825800414977,"componentName":"ElConditionTag104","locked":true},"v-if":null,"v-show":null,"ref":"queryTag","v-model":"queryEditObject",":moreParm":"moreParm",":routerId":"$route && $route.meta.routerId",":isQueryConditionPanel":"isQueryConditionPanel","v-on:queryTagPanel":"onQueryTagPanel","v-on:queryTagClick":"onQueryTagClick","v-on:search":"onSearch"},{"__config__":{"elName":"ButtonGroup","designLayout":"function buttonGroupLayout(h, element, index, parent) {\\n    var slots = {\\n      options: function options(h, conf, key) {\\n        var list = [];\\n        conf.__slot__.options.forEach(function (item) {\\n          if (item.__config__.tooltip === true) {\\n            list.push(h(\\"el-tooltip\\", {\\n              \\"attrs\\": {\\n                \\"effect\\": item.__config__.effect,\\n                \\"content\\": item.__config__.content,\\n                \\"placement\\": item.__config__.placement\\n              }\\n            }, [h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled,\\n                \\"plain\\": item.plain == true ? true : false\\n              }\\n            }, [item.__slot__.default])]));\\n          } else {\\n            list.push(h(\\"el-button\\", {\\n              \\"attrs\\": {\\n                \\"type\\": item.type,\\n                \\"icon\\": item.icon,\\n                \\"plain\\": item.plain == true ? true : false,\\n                \\"size\\": conf.__config__.size,\\n                \\"disabled\\": item.disabled\\n              }\\n            }, [item.__slot__.default]));\\n          }\\n        });\\n        return list;\\n      }\\n    };\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item btnGroup-from-item'' : ''drawing-row-item btnGroup-from-item'';\\n    var conf = element;\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": conf,\\n        \\"slots\\": slots\\n      }\\n    });\\n    return elNode = h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      },\\n      \\"style\\": {\\n        textAlign: element.align\\n      }\\n    }, [elNode, this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function buttonGroupLayout(scheme, parent, isView) {\\n    var _this = this;\\n    var config = scheme.__config__;\\n    var buildElButtonGroupChild = function buildElButtonGroupChild() {\\n      var children = [];\\n      var slot = scheme.__slot__;\\n      if (slot && slot.options && slot.options.length) {\\n        slot.options.forEach(function (item) {\\n          item.size = scheme.__config__.size;\\n          var attrs = _this.getAttrs(item, isView);\\n          if (item.__config__.tooltip === true) {\\n            var obj = {\\n              effect: item.__config__.effect,\\n              content: item.__config__.content,\\n              placement: item.__config__.placement\\n            };\\n            var buttonSize = scheme.size ? \\"size = \\".concat(scheme.size) : '''';\\n            var tooltipAttrs = _this.getAttrs(obj, isView);\\n            children.push(\\"<el-tooltip \\".concat(tooltipAttrs, \\">\\\\n            <el-button \\").concat(attrs, \\" \\").concat(buttonSize, \\">\\").concat(item.__slot__.default, \\"</el-button>\\\\n          </el-tooltip>\\"));\\n          } else {\\n            children.push(\\"<el-button \\".concat(attrs, \\" >\\").concat(item.__slot__.default, \\"</el-button>\\"));\\n          }\\n        });\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView, [''align'']);\\n    var child = buildElButtonGroupChild(scheme, parent, isView);\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    var str = \\"<div style=\\\\\\"text-align: \\".concat(scheme.align, \\"\\\\\\"><\\").concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\"></div>\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function buttonGroupLayout(h) {\\n  var _this = this;\\n  function addReg() {\\n    this.activeData.__slot__.options.push({\\n      __config__: {\\n        tooltip: false,\\n        // 是否增加按钮提示\\n        effect: '''',\\n        // 提示主题\\n        content: '''',\\n        // 提示内容\\n        placement: '''' // 提示方向\\n      },\\n\\n      __slot__: {\\n        default: \\"\\\\u6309\\\\u94AE\\".concat(this.activeData.__slot__.options.length + 1)\\n      },\\n      ''v-on:click'': '''',\\n      type: ''primary'',\\n      icon: null,\\n      '':disabled'': undefined,\\n      ''v-if'': undefined,\\n      ''v-show'': undefined\\n    });\\n  }\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件尺寸\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.__config__.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"对齐方式\\",\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.buttonGroup'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"按钮\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-collapse\\", {\\n    \\"class\\": \\"drag-collapse query-filed\\"\\n  }, [h(\\"draggable\\", {\\n    \\"attrs\\": {\\n      \\"list\\": this.activeData.__slot__.options,\\n      \\"animation\\": 340,\\n      \\"group\\": \\"selectItem\\",\\n      \\"handle\\": \\".option-drag\\"\\n    }\\n  }, [this.activeData.__slot__.options.map(function (item, index) {\\n    return h(\\"el-collapse-item\\", [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"select-line-icon option-drag\\"\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-s-operation\\"\\n    })]), !item.__config__.locked && _this.activeData.__slot__.options.length > 2 && h(\\"div\\", {\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__slot__.options.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })])])]), h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮文字\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''default'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请输入按钮文字\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.__slot__.default,\\n        callback: function callback($$v) {\\n          _this.$set(item.__slot__, \\"default\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮图标\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''icon'')\\n      }\\n    }), h(\\"IconInput\\", {\\n      \\"model\\": {\\n        value: item.icon,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"icon\\", $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"按钮类型\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"style\\": \\"width: 100%\\",\\n      \\"attrs\\": {\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item.type,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"type\\", $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"primary\\",\\n        \\"value\\": \\"primary\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"success\\",\\n        \\"value\\": \\"success\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"warning\\",\\n        \\"value\\": \\"warning\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"danger\\",\\n        \\"value\\": \\"danger\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"info\\",\\n        \\"value\\": \\"info\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"text\\",\\n        \\"value\\": \\"text\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"默认\\",\\n        \\"value\\": \\"\\"\\n      }\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"是否提示\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''tooltip'')\\n      }\\n    }), h(\\"el-switch\\", {\\n      \\"attrs\\": {\\n        \\"inactive-value\\": ''undefined''\\n      },\\n      \\"model\\": {\\n        value: item.__config__.tooltip,\\n        callback: function callback($$v) {\\n          _this.$set(item.__config__, \\"tooltip\\", $$v);\\n        }\\n      }\\n    })]), item.__config__.tooltip === true && h(\\"tool-tip\\", {\\n      \\"attrs\\": {\\n        \\"activeData\\": item.__config__\\n      }\\n    }), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": \\"点击事件\\",\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-on:click'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": item.__config__.locked,\\n        \\"placeholder\\": \\"click事件（方法名）\\",\\n        \\"clearable\\": true\\n      },\\n      \\"model\\": {\\n        value: item[''v-on:click''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-on:click'', $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''禁用条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', '':disabled'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"禁用条件（disabled）\\"\\n      },\\n      \\"model\\": {\\n        value: item['':disabled''],\\n        callback: function callback($$v) {\\n          _this.$set(item, '':disabled'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''渲染条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-if'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"渲染条件（v-if）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-if''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-if'', $$v);\\n        }\\n      }\\n    })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示条件'',\\n        \\"guide\\": _this.getHelp(''page.buttonGroup'', ''v-show'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"rows\\": 2,\\n        \\"placeholder\\": \\"显示条件（v-show）\\"\\n      },\\n      \\"model\\": {\\n        value: item[''v-show''],\\n        callback: function callback($$v) {\\n          _this.$set(item, ''v-show'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addReg.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u6309\\\\u94AE\\"])])])])]);\\n}","tag":"el-button-group","label":"按钮组","tagIcon":"button","span":6,"size":null,"document":"https://element.eleme.cn/#/zh-CN/component/button","formId":105,"renderKey":105.46269633356056,"componentName":"ButtonGroup105","locked":true},"__slot__":{"options":[{"__config__":{"tooltip":true,"effect":"dark","content":"搜索","placement":"top"},"__slot__":{"default":""},"v-on:click":"onSearch","type":"primary","icon":"el-icon-search","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"重置","placement":"top"},"__slot__":{"default":""},"v-on:click":"isQueryConditionPanel ? $refs.conditionPanel.reset() : $refs.queryForm.resetFields()","type":"primary","icon":"el-icon-refresh-right","plain":"undefined","size":null},{"__config__":{"tooltip":true,"effect":"dark","content":"更多","placement":"top"},"__slot__":{"default":""},"v-on:click":"onQueryConditionPanel(\\"query\\")","type":"primary","icon":"el-icon-d-arrow-right","size":null}]},"align":"right"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":103,"renderKey":103.9343443321748,"componentName":"ElRow103","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"start","align":"top"},{"__config__":{"elName":"ElConditionPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function conditionPanelLayout(h, hasOneZOne) {\\n  var _this = this;\\n  var dateTypeOptions = [{\\n    id: ''date'',\\n    label: ''日期时间(yyyy-MM-dd HH:mm:ss)'',\\n    value: ''datetime''\\n  }, {\\n    id: ''date'',\\n    label: ''年月日(yyyy-MM-dd)'',\\n    value: ''date''\\n  }, {\\n    id: ''month'',\\n    label: ''年月(yyyy-MM)'',\\n    value: ''month''\\n  }, {\\n    id: ''month'',\\n    label: ''年(yyyy)'',\\n    value: ''year''\\n  }];\\n  var tagList = [{\\n    id: ''string'',\\n    component: ''单行文本'',\\n    tag: ''el-input'',\\n    queryType: ''like'',\\n    types: [''String'', ''Code'', ''Mutilple''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {}\\n  }, {\\n    id: ''boolean'',\\n    component: ''开关'',\\n    tag: ''el-switch'',\\n    types: [''Boolean''],\\n    queryType: ''='',\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      ''active-value'': true,\\n      ''inactive-value'': false\\n    }\\n  }, {\\n    id: ''date'',\\n    component: ''日期'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Date''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      type: ''datetime'',\\n      ''value-format'': ''yyyy-MM-dd HH:mm:ss''\\n    }\\n  }, {\\n    id: ''time'',\\n    component: ''时间'',\\n    tag: ''el-time-select'',\\n    queryType: ''='',\\n    types: [''Time''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      ''value-format'': ''HH:mm:ss''\\n    }\\n  }, {\\n    id: ''month'',\\n    component: ''年月'',\\n    tag: ''el-date-picker'',\\n    queryType: ''='',\\n    types: [''Month''],\\n    operations: [{\\n      value: ''like'',\\n      label: ''包含''\\n    }, {\\n      value: ''not like'',\\n      label: ''不包含''\\n    }, {\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }],\\n    attribute: {\\n      type: ''month'',\\n      ''value-format'': ''yyyy-MM''\\n    }\\n  }, {\\n    id: ''number'',\\n    component: ''金额/数值'',\\n    tag: ''number-input'',\\n    queryType: ''='',\\n    types: [''Month'', ''java.math.BigDecimal'', ''Double'', ''Float'', ''Integer'', ''Long''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''between'',\\n      label: ''介于''\\n    }, {\\n      value: ''not between'',\\n      label: ''不介于''\\n    }],\\n    attribute: {\\n      '':min'': 0,\\n      '':max'': 999999999999,\\n      '':precision'': 0\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''下拉选择'',\\n    tag: ''el-select'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }, {\\n    id: ''custom'',\\n    component: ''级联选择'',\\n    tag: ''el-cascader'',\\n    queryType: ''='',\\n    types: [''Custom'', ''This''],\\n    operations: [{\\n      value: ''='',\\n      label: ''等于''\\n    }, {\\n      value: ''<>'',\\n      label: ''不等于''\\n    }, {\\n      value: ''in'',\\n      label: ''在列表''\\n    }, {\\n      value: ''not in'',\\n      label: ''不在列表''\\n    }],\\n    attribute: {\\n      labelField: '''',\\n      // 级联显示标题\\n      className: '''',\\n      fieldId: '''',\\n      tableId: '''',\\n      apiPath: '''',\\n      filter: ''''\\n    }\\n  }];\\n  if (!this.params.activeSearchName) {\\n    this.$set(this.params, ''activeSearchName'', [''1'']);\\n  }\\n  if (!this.hasOwnProperty(this.params, ''currentKey'')) {\\n    this.$set(this.params, ''currentKey'', 0);\\n  }\\n  function onChangeSearchColumn(item, index) {\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    if (item) {\\n      var javaType = item.javaType.value;\\n      search.javaType = javaType; // 类型\\n      search.comments = item.comments; // 说明\\n      search.name = item.name; // 字段名\\n      var tags = tagList.filter(function (tag) {\\n        return tag.types.indexOf(javaType) >= 0;\\n      });\\n      if (tags != null && tags.length > 0) {\\n        for (var i = 0; i < tags.length; i++) {\\n          if (this.hasOwnProperty(tags[i].attribute, '':precision'')) tags[i].attribute['':precision''] = item.decimalLenth;\\n        }\\n      }\\n      // 自定义类型时，写入api和className、fieldId\\n      if (javaType == ''Custom'') {\\n        var className = item.customType.className;\\n        tags[0].attribute.className = className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = item.customType.scheme.moduleName + ''/'' + (item.customType.scheme.subModuleName ? item.customType.scheme.subModuleName + ''/'' : '''') + className.charAt(0).toLowerCase() + className.slice(1), tags[0].attribute.filter = item.customType ? item.customType.filter : '''';\\n      } else if (javaType == ''This'') {\\n        var _className = item.currentTable.className;\\n        tags[0].attribute.className = _className;\\n        tags[0].attribute.fieldId = item.associatedField;\\n        tags[0].attribute.tableId = item.dcTable.id;\\n        tags[0].attribute.apiPath = this.dbModel.table.scheme.moduleName + ''/'' + (this.dbModel.table.scheme.subModuleName ? this.dbModel.table.scheme.subModuleName + ''/'' : '''') + _className.charAt(0).toLowerCase() + _className.slice(1);\\n      }\\n      this.activeData.__config__.searchList[index] = Object.assign(search, tags[0]);\\n    }\\n  }\\n  function onChangeSearchTag(item, index) {\\n    // 修改\\n    this.params.currentKey++;\\n    var search = this.activeData.__config__.searchList[index];\\n    this.activeData.__config__.searchList[index] = Object.assign(search, item);\\n  }\\n  function addSearchCondition() {\\n    // 添加查询条件\\n    this.activeData.__config__.searchList.push({\\n      tag: '''',\\n      name: '''',\\n      javaType: '''',\\n      comments: '''',\\n      queryType: '''',\\n      operations: [],\\n      attribute: {}\\n    });\\n    var index = this.activeData.__config__.searchList.length;\\n    this.params.activeSearchName.push(index);\\n  }\\n  function dateTypeChange(type, attribute) {\\n    if (type.value === ''date'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd'');\\n    } else if (type.value === ''datetime'') {\\n      this.$set(attribute, ''value-format'', ''yyyy-MM-dd HH:mm:ss'');\\n    } else if (type.value === ''month'') {\\n      this.$set(attribute, ''value-format'', ''yyyyMM'');\\n    } else if (type.value === ''year'') {\\n      this.$set(attribute, ''value-format'', ''yyyy'');\\n    }\\n  }\\n  function onSwitchValueInput(val, name, searchIndex) {\\n    if ([''true'', ''false''].indexOf(val) > -1) {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, JSON.parse(val));\\n    } else {\\n      this.$set(this.activeData.__config__.searchList[searchIndex].attribute, name, /^[+-]?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?$/g.test(val) ? +val : val);\\n    }\\n  }\\n  var custProperties = []; // 自定义属性类型的属性列表\\n  return h(\\"el-collapse\\", {\\n    \\"attrs\\": {\\n      \\"className\\": \\"condition-panel\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入字段名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''字段名'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', '':conditionColumns'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入字段名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':conditionColumns''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':conditionColumns'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"查询字段\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''__config__'') && this.hasOwnProperty(this.activeData.__config__, ''searchList'') && h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"class\\": \\"query-filed\\",\\n    \\"model\\": {\\n      value: _this.params.activeSearchName,\\n      callback: function callback($$v) {\\n        _this.$set(_this.params, \\"activeSearchName\\", $$v);\\n      }\\n    }\\n  }, [this.activeData.__config__.searchList.map(function (search, searchIndex) {\\n    return h(\\"el-collapse-item\\", {\\n      \\"attrs\\": {\\n        \\"name\\": searchIndex + 1\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"title\\"\\n    }, [h(\\"div\\", {\\n      \\"key\\": _this.params.currentKey + searchIndex,\\n      \\"class\\": \\"header-inner\\"\\n    }, [h(\\"div\\", {\\n      \\"class\\": \\"close-btn select-line-icon\\",\\n      \\"style\\": \\"float: left; margin-right: 10px\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.searchList.splice(searchIndex, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"header-icon el-icon-remove-outline\\"\\n    })]), search.name ? \\"\\".concat(search.name, \\": \\").concat(search.comments) : ''''])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''字段'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''name'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择查询字段\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.name,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"name\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.name,\\n          \\"attrs\\": {\\n            \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n            \\"value\\": item.name\\n          },\\n          \\"nativeOn\\": {\\n            \\"click\\": function click(event) {\\n              onChangeSearchColumn.call(_this, item, searchIndex);\\n              event.stopPropagation();\\n            }\\n          }\\n        });\\n      })]);\\n    }), !hasOneZOne && _this.tableColumns.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.name,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(item.name, \\": \\").concat(item.comments),\\n          \\"value\\": item.name\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchColumn.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''控件'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''tag'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"filterable\\": true,\\n        \\"placeholder\\": \\"请选择控件\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.tag,\\n        callback: function callback($$v) {\\n          _this.$set(search, \\"tag\\", $$v);\\n        }\\n      }\\n    }, [tagList.filter(function (tag) {\\n      return tag.types.indexOf(search.javaType) >= 0;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.tag,\\n        \\"attrs\\": {\\n          \\"label\\": item.name,\\n          \\"value\\": item.tag\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            onChangeSearchTag.call(_this, item, searchIndex);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), search.tag && h(\\"div\\", [_this.hasOwnProperty(search.attribute, ''labelField'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''显示名'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''labelField'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择显示名\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.labelField,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"labelField\\", $$v);\\n        }\\n      }\\n    }, [hasOneZOne && _this.tableColumns.filter(function (table) {\\n      return table.name.indexOf(''子表'') < 0;\\n    }).map(function (group, groupIndex) {\\n      return h(\\"el-option-group\\", {\\n        \\"key\\": groupIndex,\\n        \\"attrs\\": {\\n          \\"label\\": \\"\\".concat(group.name).concat(group.comments),\\n          \\"value\\": groupIndex\\n        }\\n      }, [group.tableColumns.some(function (item) {\\n        if (item.name == search.name) {\\n          custProperties = item.childFields;\\n          return true;\\n        }\\n      }) && custProperties.map(function (item) {\\n        return h(\\"el-option\\", {\\n          \\"key\\": item.value,\\n          \\"attrs\\": {\\n            \\"label\\": item.label,\\n            \\"value\\": item.value\\n          }\\n        });\\n      })]);\\n    }), hasOneZOne && _this.tableColumns.some(function (item) {\\n      if (item.name == search.name) {\\n        custProperties = item.childFields;\\n        return true;\\n      }\\n    }) && custProperties.map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''filter'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''选项参数'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''filter'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"textarea\\",\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"请输入选项参数\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute.filter,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"filter\\", $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''type'') && (search.id == ''date'' || search.id == ''month'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间类型'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''type'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间类型\\",\\n        \\"clearable\\": true\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute.type,\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, \\"type\\", $$v);\\n        }\\n      }\\n    }, [dateTypeOptions.filter(function (type) {\\n      return type.id === search.id;\\n    }).map(function (item) {\\n      return h(\\"el-option\\", {\\n        \\"key\\": item.value,\\n        \\"attrs\\": {\\n          \\"label\\": item.label,\\n          \\"value\\": item.value\\n        },\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            dateTypeChange.call(_this, item, search.attribute);\\n            event.stopPropagation();\\n          }\\n        }\\n      });\\n    })])]), _this.hasOwnProperty(search.attribute, ''value-format'') && search.id === ''time'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''时间格式'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''value-format'')\\n      }\\n    }), h(\\"el-select\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"请选择时间格式\\"\\n      },\\n      \\"style\\": \\"width: 100%\\",\\n      \\"model\\": {\\n        value: search.attribute[''value-format''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, ''value-format'', $$v);\\n        }\\n      }\\n    }, [h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm:ss\\",\\n        \\"value\\": \\"HH:mm:ss\\"\\n      }\\n    }), h(\\"el-option\\", {\\n      \\"attrs\\": {\\n        \\"label\\": \\"HH:mm\\",\\n        \\"value\\": \\"HH:mm\\"\\n      }\\n    })])]), _this.hasOwnProperty(search.attribute, ''active-value'') && search.id === ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''开启值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''active-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''active-value'']),\\n        \\"placeholder\\": \\"请输入开启值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''active-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, ''inactive-value'') && search.id == ''boolean'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''关闭值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', ''inactive-value'')\\n      }\\n    }), h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"value\\": _this.setDefaultValue(search.attribute[''inactive-value'']),\\n        \\"placeholder\\": \\"请输入关闭值\\",\\n        \\"clearable\\": true\\n      },\\n      \\"on\\": {\\n        \\"input\\": function input(event) {\\n          onSwitchValueInput.call(_this, event, ''inactive-value'', searchIndex);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':min'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最小值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':min'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"max\\": search.attribute['':max''],\\n        \\"allow-negative\\": true,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最小值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':min''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':min'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':max'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''最大值'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':max'')\\n      }\\n    }), h(\\"number-input\\", {\\n      \\"attrs\\": {\\n        \\"min\\": search.attribute['':min''],\\n        \\"allow-negative\\": false,\\n        \\"precision\\": search.attribute['':precision''],\\n        \\"placeholder\\": \\"请输入最大值\\"\\n      },\\n      \\"model\\": {\\n        value: search.attribute['':max''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':max'', $$v);\\n        }\\n      }\\n    })]), _this.hasOwnProperty(search.attribute, '':precision'') && search.id === ''number'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n      \\"slot\\": ''label'',\\n      \\"attrs\\": {\\n        \\"label\\": ''精度'',\\n        \\"guide\\": _this.getHelp(''page.conditionPanel'', '':precision'')\\n      }\\n    }), h(\\"el-input-number\\", {\\n      \\"attrs\\": {\\n        \\"placeholder\\": \\"精度\\",\\n        \\"step\\": 1,\\n        \\"min\\": 0,\\n        \\"max\\": 10\\n      },\\n      \\"style\\": \\"width:100%;\\",\\n      \\"model\\": {\\n        value: search.attribute['':precision''],\\n        callback: function callback($$v) {\\n          _this.$set(search.attribute, '':precision'', $$v);\\n        }\\n      }\\n    })])])]);\\n  })])]), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px;\\"\\n  }, [h(\\"el-button\\", {\\n    \\"style\\": \\"padding-bottom: 0\\",\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addSearchCondition.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u9009\\\\u9879\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.conditionPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function conditionPanelData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.locked) return list;\\n    list.push(\\"\\".concat(scheme['':conditionColumns''], \\": [\\"));\\n    if (scheme.__config__.searchList && scheme.__config__.searchList.length > 0) {\\n      scheme.__config__.searchList.forEach(function (search) {\\n        list.push(\\"{\\\\n          name: \\".concat(search.name, \\",\\\\n          comments: ''\\").concat(search.comments, \\"'',\\\\n          tag: \\").concat(search.tag, \\",\\\\n          queryType: \\").concat(search.queryType, \\",\\\\n          operations: \\").concat(JSON.stringify(search.operations), \\",\\\\n          attribute: \\").concat(JSON.stringify(search.attribute), \\"\\\\n        }\\"));\\n      });\\n    }\\n    list.push(''],'');\\n    return list;\\n  }","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"query-condition-panel","tagIcon":"row","label":"查询面板","component":"QueryConditionPanel","from":"@/views/components/queryConditionPanel","searchList":[],"formId":127,"renderKey":127.02690361279011,"componentName":"ElConditionPanel127","locked":true},"v-if":"isQueryConditionPanel","v-show":null,"ref":"conditionPanel",":conditionColumns":"(metadata.find(item => {return item.type == \\"main\\"})).conditionPanel","v-model":"moreParm",":routerId":"$route.meta.routerId"},{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function queryFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单名'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表单尺寸'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签对齐'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标签宽度'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElQueryForm","label":"Form查询","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":108,"renderKey":108.52444451593873,"componentName":"ElQueryForm108","locked":true},"ref":"queryForm",":model":"queryFormData","size":null,"label-position":null,"label-width":"100px","v-if":"!isQueryConditionPanel","v-show":null,":disabled":""},{"__config__":{"elName":"ElRow","designLayout":"function rowLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var idFlex = element.type == ''flex'' ? true : false;\\n    var items;\\n    if (element.align == ''top'') {\\n      items = ''start'';\\n    } else if (element.align == ''bottom'') {\\n      items = ''end'';\\n    } else if (element.align == ''middle'') {\\n      items = ''center'';\\n    }\\n\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": idFlex ? {\\n          width: ''100%'',\\n          display: ''flex'',\\n          ''justify-content'': element.justify,\\n          ''align-items'': items\\n        } : '''',\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": config.gutter\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    })]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function rowLayout(h) {\\n  var _this = this;\\n  var justifyOptions = [{\\n    value: ''start'',\\n    label: ''左对齐''\\n  }, {\\n    value: ''end'',\\n    label: ''右对齐''\\n  }, {\\n    value: ''center'',\\n    label: ''居中对齐''\\n  }, {\\n    value: ''space-around'',\\n    label: ''两侧间隔相等''\\n  }, {\\n    value: ''space-between'',\\n    label: ''两端对齐''\\n  }];\\n  var alignOptions = [{\\n    value: ''top'',\\n    label: ''起点对齐''\\n  }, {\\n    value: ''bottom'',\\n    label: ''终点对齐''\\n  }, {\\n    value: ''middle'',\\n    label: ''居中对齐''\\n  }];\\n  function onChange(val) {\\n    if (val === ''flex'') {\\n      this.activeData.justify = ''start'';\\n      this.activeData.align = ''top'';\\n    } else {\\n      this.activeData.justify = undefined;\\n      this.activeData.align = undefined;\\n    }\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格间隔'',\\n      \\"guide\\": this.getHelp(''page.row'', ''gutter'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"max\\": 50,\\n      \\"label\\": \\"指定每一栏之间的间隔，默认间隔为 0\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.gutter,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"gutter\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''布局模式'',\\n      \\"guide\\": this.getHelp(''page.row'', ''type'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": onChange.bind(this)\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"default\\"\\n    }\\n  }), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"flex\\"\\n    }\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''水平排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''justify'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.justify,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"justify\\", $$v);\\n      }\\n    }\\n  }, [justifyOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])]), this.activeData.type === ''flex'' && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''垂直排列'',\\n      \\"guide\\": this.getHelp(''page.row'', ''align'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"attrs\\": {\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"请选择\\"\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [alignOptions.map(function (item) {\\n    return h(\\"el-option\\", {\\n      \\"key\\": item.value,\\n      \\"attrs\\": {\\n        \\"label\\": item.label,\\n        \\"value\\": item.value\\n      }\\n    });\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.row'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": \\"2\\",\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","tag":"el-row","tagIcon":"row","label":"行容器","children":[{"__config__":{"elName":"ProcessPanel","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function processPanelLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var formKey = \\"wf/common/wfForm.vue#\\".concat(config.pcFormKey).concat(config.appFormKey ? ''$'' + config.appFormKey : '''');\\n    scheme.formKey = formKey;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function dashboardLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''按钮权限'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':bizAdd'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"按钮权限\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':bizAdd''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':bizAdd'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::tenantId\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入租户id'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"租户id\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', '':tenantId'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入租户id\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':tenantId''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':tenantId'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"keyPrefix\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程前缀'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程前缀\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''keyPrefix'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程前缀\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''keyPrefix''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''keyPrefix'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procName\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程名'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程名\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procName'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procName''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procName'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程表单\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''formKey'')\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"基类\\"\\n    }\\n  }, [h(\\"span\\", [\\"wf/common/wfForm.vue#\\"])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"PC端\\",\\n      \\"prop\\": \\"__config__.pcFormKey\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入PC端表单地址'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入PC端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.pcFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"pcFormKey\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"移动端\\"\\n    }\\n  }, [h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入移动端表单地址\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.appFormKey,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"appFormKey\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"$\\"])])]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"procTitile\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入流程标题'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"流程标题\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''procTitile'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入流程标题\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''procTitile''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''procTitile'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"v-on:v-loading\\",\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-on:v-loading'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"loading事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:v-loading''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:v-loading'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.processPanel'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"process-panel","tagIcon":"process-panel","label":"流程配置","component":"processPanel","from":"@/views/wf/common/processPanel","pcFormKey":"XX/XX/form.vue","appFormKey":"","formId":134,"renderKey":134.85813374316993,"componentName":"ProcessPanel134","locked":true},"v-if":null,"v-show":null,"ref":"processPanel",":bizAdd":"permission.add",":tenantId":"currentUser.company.id","keyPrefix":"PROC_","procName":"XX审批流程","formKey":"wf/common/wfForm.vue#XX/XX/form.vue","procTitile":"${start_user_name}发起${form.name}XX审批","v-on:v-loading":"onVLoading"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","formId":109,"renderKey":109.95984262566932,"componentName":"ElRow109","locked":true},"v-if":null,"v-show":null,"gutter":0,"type":"flex","justify":"end","align":"top"},{"__config__":{"elName":"QueryTable","designLayout":"function tableLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    // fixed 时不能拖动\\n    config.children.forEach(function (item, i) {\\n      if (item.fixed !== ''undefined'') {\\n        child[i].data.class = \\"\\".concat(child[i].data.class, \\" forbid\\");\\n      }\\n    });\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"filter\\": \\".forbid\\",\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup,\\n          \\"move\\": function move(e) {\\n            // 固定列不允许停靠\\n            if (e.relatedContext.element) {\\n              return e.relatedContext.element.fixed == ''undefined'';\\n            }\\n            return false;\\n          }\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"component-name\\"\\n    }, [config.componentName]), h(\\"div\\", {\\n      \\"class\\": ''table-wrapper''\\n    }, [h(\\"div\\", [child, this.itemEmpty.apply(this, arguments)])]), this.itemBtns.apply(this, arguments)]);\\n  }","outputHtml":"function queryTableLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var children = this.createChildren(scheme, parent, isView);\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(Tag, \\" column-key \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </\\").concat(Tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function queryTableLayout(h) {\\n  var _this = this;\\n  function changeShowSummary(val) {\\n    this.activeData['':summary-method''] = '''';\\n    this.activeData.__config__[''summary-unit''] = '''';\\n    if (val && val == true) {\\n      this.activeData['':summary-method''] = ''summaryMethod'';\\n    }\\n  }\\n\\n  // 注册监听， 设置树形配置\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表格名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表格名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"数据对象\\",\\n      \\"prop\\": \\"::data\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入显示的数据名（data）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''data'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入显示的数据名（data）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':data''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':data'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''表尾合计行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-summary'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-summary''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-summary'', $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"change\\": changeShowSummary.bind(this)\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计函数名'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', '':summary-method'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计函数名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":summary-method\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\":summary-method\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[''show-summary''] == true && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''合计单位'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''summary-unit'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入合计单位\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__[\\"summary-unit\\"],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"summary-unit\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''栅格'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格高度（height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.height,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"height\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"最大高度(px)\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''最大高度(px)'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''max-height'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入表格最大高度（max-height）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''max-height''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''max-height'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''尺寸'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否斑马纹'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''stripe'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.stripe,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"stripe\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否有边框'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''border'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.border,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"border\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示表头'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''show-header'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"active-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''show-header''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''show-header'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''高亮当前行'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''highlight-current-row'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''highlight-current-row''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''highlight-current-row'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"树形\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''子节点属性'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''children'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"子节点属性名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].children,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"children\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''缩进长度'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''indent'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"缩进长度\\",\\n      \\"min\\": 0,\\n      \\"max\\": 50\\n    },\\n    \\"style\\": \\"width:100%;\\",\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].indent,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"indent\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''启用连接线'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''line'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].line,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"line\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''showIcon'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].showIcon,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"showIcon\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"展开后图标\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''展开后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconOpen'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconOpen,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconOpen\\", $$v);\\n      }\\n    }\\n  })]), this.activeData[\\":tree-config\\"].showIcon && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''收起后图标'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''iconClose'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[\\":tree-config\\"].iconClose,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData[\\":tree-config\\"], \\"iconClose\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"行变化\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行变化'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"当前行变化时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''排序'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:sort-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"排序条件变化时触发(sort-change)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:sort-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:sort-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''列宽'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:header-dragend'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"改变列宽时触发(header-dragend)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:header-dragend''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:header-dragend'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''单元格点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:cell-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"单元格被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:cell-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:cell-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''行点击'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-on:row-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"行被点击时触发\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:row-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:row-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.tableQ'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","outputData":"function tableData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme['':data'']) {\\n      list.push(\\"\\".concat(scheme['':data''], \\": [],\\"));\\n      if (scheme.__config__.elName == ''QueryTable'') {\\n        // 查询表格列头\\n        list.push(''// 查询表格列头'');\\n        list.push(\\"\\".concat(scheme.ref, \\"Columns: {\\"));\\n        scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n          list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n        });\\n        list.push(''},'');\\n      }\\n    }\\n    return list;\\n  }","tag":"ux-grid","label":"Table查询","tagIcon":"table","span":24,"children":[{"__config__":{"elName":"ElTableOptColumn","label":"操作列","designLayout":"function tableColOprLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var child = this.renderChildren.apply(this, arguments);\\n    var fixedIcon = element.fixed !== ''undefined'' ? h(\\"svg-icon\\", {\\n      \\"attrs\\": {\\n        \\"icon-class\\": \\"fixed\\"\\n      },\\n      \\"class\\": ''flag-icon''\\n    }) : '''';\\n    return h(\\"el-col\\", {\\n      \\"class\\": ''table-col-opt table-column-container'',\\n      \\"attrs\\": {\\n        \\"span\\": config.span\\n      },\\n      \\"style\\": {\\n        width: element.width ? \\"\\".concat(parseInt(element.width), \\"px\\") : ''200px'',\\n        ''min-width'': element[''min-width'']\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [fixedIcon, h(\\"div\\", {\\n      \\"key\\": config.renderKey,\\n      \\"class\\": \\"table-col-opt-inner\\"\\n    }, [child]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)])]);\\n  }","outputHtml":"function tableColOprLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var Tag = config.tag;\\n    var attrs = '''';\\n    if (parent.__config__.elName === ''QueryTable'') {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' :params=\\\\\\"{sortId: ''\\").concat(scheme.__config__.formId, \\"''}\\\\\\" \\") + this.getAttrs(scheme, isView, [''label'']);\\n    } else {\\n      attrs = \\"title=''\\".concat(scheme.label, \\"'' \\") + this.getAttrs(scheme, isView, [''label'']);\\n    }\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(Tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n                   <template v-slot:header=\\\\\\"scope\\\\\\">\\\\n                    <span>\\").concat(scheme.label, \\"</span>\\\\n                    \\").concat(children[0], \\"\\\\n                  </template>\\\\n                  <template slot-scope=\\\\\\"scope\\\\\\">\\\\n                  \\").concat(children[1], \\"\\\\n                  </template>\\\\n                </\\").concat(Tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function tableColOprLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标题\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''label'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（label）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.label,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"label\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"最小宽度\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''min-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入最小宽度（min-width）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''min-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''min-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表格行对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.align,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"align\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表头对齐\\",\\n      \\"guide\\": this.getHelp(''tableQ.tableOptColumn'', ''header-align'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''header-align''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''header-align'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"center\\"\\n    }\\n  }, [\\"\\\\u4E2D\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"])])])])]);\\n}","outputData":"function tableColumnData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(\\"\\".concat(scheme.__config__.formId, \\": {\\"));\\n    if (!this.validatenull(scheme.label)) {\\n      list.push(\\"title: ''\\".concat(scheme.label, \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.prop)) {\\n      list.push(\\"field: ''\\".concat(this.camelCase(scheme.prop, \\"_\\"), \\"'',\\"));\\n    }\\n    if (!this.validatenull(scheme.width)) {\\n      list.push(\\"width: ''\\".concat(scheme.width, \\"'',\\"));\\n    }\\n    list.push(\\"visible: \\".concat(this.validatenull(scheme.visible), \\",\\"));\\n    var index = parent.__config__.children.findIndex(function (children) {\\n      return children.__config__.formId === scheme.__config__.formId;\\n    });\\n    list.push(\\"order: \\".concat(index)); // TODO\\n    list.push(''},'');\\n    return list;\\n  }","children":[{"__config__":{"elName":"TableOptColumnHeader","designLayout":"function tableColOprRowHeaderLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    child.unshift(h(\\"span\\", [parent.label]));\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      },\\n      \\"style\\": {\\n        justifyContent: parent[''header-align'']\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"elName":"ElPopover","designLayout":"function popoverLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item popover-item active-from-item'' : ''drawing-row-item popover-item'';\\n\\n    // 以 slot 属性来存储\\n    var child = this.renderChildren.call(this, h, element.__slot__, index, parent);\\n    var conf = Object.assign({}, element, {\\n      width: ''''\\n    });\\n    child = h(\\"render\\", {\\n      \\"class\\": ''popover-item-container'',\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": conf\\n      }\\n    });\\n    var slotChildren = element.__slot__.__config__.children;\\n    var itemBtns = this.itemBtns.call(this, h, element.__slot__, index, parent);\\n    var itemEmpty = this.itemEmpty.call(this, h, element.__slot__, index, parent);\\n    var insertItem = slotChildren.length > 0 ? '''' : itemBtns.children[0];\\n    var copyItem = itemBtns.children[1];\\n    var DeleteItem = itemBtns.children.pop();\\n    return h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [child, h(\\"div\\", {\\n      \\"class\\": ''drawing-item-btns''\\n    }, [insertItem, copyItem, DeleteItem]), itemEmpty]);\\n  }","outputHtml":"function popoverLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var slotChildren = this.createChildren(scheme.__slot__, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      \\").concat(children.join(''\\\\n''), \\"\\\\n      <template slot=\\\\\\"reference\\\\\\">\\\\n        \\").concat(slotChildren.join(''\\\\n''), \\"\\\\n      </template>\\\\n    </\\").concat(tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function popoverLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''标题'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''title'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标题（title）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.title,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"title\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''组件ref'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入ref名称\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''width'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''宽度'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入宽度（最小值150）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.width,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"width\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"px\\"])])]), this.hasOwnProperty(this.activeData, ''placement'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示位置'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''placement'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\",\\n      \\"value\\": \\"top\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-start\\",\\n      \\"value\\": \\"top-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top-end\\",\\n      \\"value\\": \\"top-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\",\\n      \\"value\\": \\"bottom\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-start\\",\\n      \\"value\\": \\"bottom-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom-end\\",\\n      \\"value\\": \\"bottom-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\",\\n      \\"value\\": \\"left\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-start\\",\\n      \\"value\\": \\"left-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left-end\\",\\n      \\"value\\": \\"left-end\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\",\\n      \\"value\\": \\"right\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-start\\",\\n      \\"value\\": \\"right-start\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right-end\\",\\n      \\"value\\": \\"right-end\\"\\n    }\\n  })])]), this.hasOwnProperty(this.activeData, ''offset'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"位置偏移\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''位置偏移'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''offset'')\\n    }\\n  }), h(\\"el-input-number\\", {\\n    \\"style\\": \\"width:100%;\\",\\n    \\"attrs\\": {\\n      \\"min\\": 0,\\n      \\"placeholder\\": \\"请输入位置偏移量\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.offset,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"offset\\", $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''popper-class'') && h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"添加类名\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''添加类名'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''popper-class'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入类名（class）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''popper-class''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''popper-class'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''trigger'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''触发方式'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''trigger'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%;\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.trigger,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"trigger\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"click\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"focus激活\\",\\n      \\"value\\": \\"focus\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"hover激活\\",\\n      \\"value\\": \\"hover\\"\\n    }\\n  })])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''show'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-enter'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-enter'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 显示动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-enter''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-enter'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''hide'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:hide'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏时触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:hide''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:hide'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''after-leave'',\\n      \\"guide\\": this.getHelp(''page.popover'', ''v-on:after-leave'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"Popover 隐藏动画播放完毕后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:after-leave''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:after-leave'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","tag":"el-popover","tagIcon":"row","label":"Popover弹框","children":[{"__config__":{"elName":"ViewColumnsSelect","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function viewColumnsSelectLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名（ref）'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"保存回调\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:save-column-view'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列保存方法回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:save-column-view''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:save-column-view'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"全部显示\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-all-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列全部显示回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-all-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-all-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"恢复默认\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-on:show-default-column'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"自定义列恢复默认配置回调\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:show-default-column''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:show-default-column'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''popover.viewColumnsSelect'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）默认不显示\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"view-columns-select","tagIcon":"row","label":"自定义显示列","component":"ViewColumnsSelect","from":"@/views/components/DcViewColumnsSelect","viewColumns":[],"formId":119,"renderKey":119.91584943676851,"componentName":"ViewColumnsSelect119","locked":true},"v-model":"tableColumns","v-if":null,"v-show":null,"ref":"viewColumnsSelect","v-on:save-column-view":"saveColumn($event, \\"table\\")","v-on:show-all-column":"showAllColumn($event, \\"table\\")","v-on:show-default-column":"showDefaultColumn(\\"table\\")"}],"document":"https://element.eleme.cn/#/zh-CN/component/popover","formId":117,"renderKey":117.94459849233819,"componentName":"ElPopover117","locked":true},"__slot__":{"__config__":{"elName":"ElPopover","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":118,"renderKey":118.80204589631406,"componentName":"IconButton118"},"v-on:click":"","type":"primary","v-if":null,"v-show":null,"content":"自定义列","placement":"top","icon-name":"el-icon-tickets"}]}},"ref":"popover","title":"","width":"10","trigger":"click","placement":"bottom","offset":10,"popper-class":""},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":120,"renderKey":120.99308197488548,"componentName":"IconButton120","locked":true},"v-on:click":"onExport(tableData)","type":"primary","v-if":null,"v-show":"permission.export","content":"导出excel文件","placement":"top","icon-name":"el-icon-download"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":115,"renderKey":115.23031507843295,"componentName":"TableOptColumnHeader115","locked":true},"align":null},{"__config__":{"elName":"TableOptColumnMain","designLayout":"function tableColOprRowMainLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : ''drawing-row-item'';\\n    var child = this.renderChildren.apply(this, arguments);\\n    var itemEmpty = this.itemEmpty.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"style\\": {\\n          justifyContent: parent.align\\n        },\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    return h(\\"el-col\\", [h(\\"el-row\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), itemEmpty])]);\\n  }","outputHtml":"function tableColOprRowLayout(scheme, parent, isView) {\\n    var children = this.createChildren(scheme, parent, isView);\\n    return \\"\\".concat(children.join(''\\\\n''));\\n  }","tag":"el-row","tagIcon":"row","children":[{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":121,"renderKey":121.90536209441461,"componentName":"IconButton121","locked":true},"v-on:click":"onView(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"查看","placement":"top","icon-name":"el-icon-view"},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function toolTipLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var buildElButtonChild = function buildElButtonChild() {\\n      var children = [];\\n      var slot = scheme.__slot__ || {};\\n      if (slot.default) {\\n        children.push(slot.default);\\n      }\\n      return children.join(''\\\\n'');\\n    };\\n    var attrs = this.getAttrs(scheme, isView);\\n    var tooltip = config.tooltip;\\n    var child = buildElButtonChild();\\n    if (child) child = \\"\\\\n\\".concat(child, \\"\\\\n\\"); // 换行\\n    if (tooltip === true) {\\n      var effect = config.effect,\\n        content = config.content,\\n        placement = config.placement;\\n      return \\"<el-tooltip effect=\\\\\\"\\".concat(effect, \\"\\\\\\" content=\\\\\\"\\").concat(content, \\"\\\\\\" placement=\\\\\\"\\").concat(placement, \\"\\\\\\">\\\\n              <\\").concat(config.tag, \\" \\").concat(attrs, \\">\\").concat(child, \\"</\\").concat(config.tag, \\">\\\\n             </el-tooltip>\\");\\n    }\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(child, \\"</\\").concat(config.tag, \\">\\");\\n    str = this.colWrapper(scheme, str, parent);\\n    return str;\\n  }","propertyLayout":"function iconButtonLayout(h) {\\n  var _this = this;\\n  return h(\\"div\\", [h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"按钮图标\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''icon-name'')\\n    }\\n  }), h(\\"IconInput\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''icon-name''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''icon-name'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"图标类型\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''type'')\\n    }\\n  }), h(\\"el-select\\", {\\n    \\"style\\": \\"width: 100%\\",\\n    \\"attrs\\": {\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.type,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"type\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"primary\\",\\n      \\"value\\": \\"primary\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"success\\",\\n      \\"value\\": \\"success\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"warning\\",\\n      \\"value\\": \\"warning\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"danger\\",\\n      \\"value\\": \\"danger\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"info\\",\\n      \\"value\\": \\"info\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"text\\",\\n      \\"value\\": \\"text\\"\\n    }\\n  }), h(\\"el-option\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"默认\\",\\n      \\"value\\": \\"\\"\\n    }\\n  })])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"提示\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.content !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"提示内容\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''content'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入提示内容\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.content,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"content\\", $$v);\\n      }\\n    }\\n  })]), this.activeData.placement !== undefined && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"方位\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''placement'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData.placement,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"placement\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u4E0A\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"bottom\\"\\n    }\\n  }, [\\"\\\\u4E0B\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"right\\"\\n    }\\n  }, [\\"\\\\u53F3\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"点击事件\\",\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-on:click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"click事件（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.iconButton'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])])]);\\n}","elName":"IconButton","tag":"OperationIcon","tagIcon":"button","label":"图标按钮","style":"width: auto; padding: 3px; display: flex; align-items: center; justify-content: center; height: 24px","formId":125,"renderKey":125.3980851069734,"componentName":"IconButton125","locked":true},"v-on:click":"onShowHistory(scope)","type":"info","v-if":null,"v-show":"permission.view","content":"历史记录","placement":"top","icon-name":"el-icon-info"}],"document":"https://element.eleme.io/#/zh-CN/component/layout","isInner":true,"formId":116,"renderKey":116.84635625741926,"componentName":"TableOptColumnMain116","locked":true},"align":null}],"tag":"ux-table-column","tagIcon":"table","document":"http://www.umyui.com/umycomponent/ux-table-column-api","formId":114,"renderKey":114.23998415707428,"componentName":"ElTableOptColumn114","locked":true},"label":"操作","tree-node":true,"resizable":true,"width":"140px","min-width":"140px","fixed":"right","align":"left","header-align":"center","v-if":null}],"document":"http://www.umyui.com/umycomponent/uxGridApi","summary-unit":"","formId":112,"renderKey":112.46469119130208,"componentName":"QueryTable112","locked":true},"ref":"table",":data":"tableData","height":null,"max-height":null,"stripe":"undefined","border":true,"size":null,"empty-text":"","show-summary":"undefined",":summary-method":"","show-header":"undefined","highlight-current-row":"undefined","v-on:current-change":"","v-on:sort-change":"onSortChange","v-on:header-dragend":"onWidthChange($refs.table)","v-on:cell-click":"","v-on:row-click":"","v-if":null,"v-show":null,":tree-config":{"children":"","indent":20,"accordion":false,"line":false,"showIcon":true,"iconOpen":"","iconClose":""}},{"__config__":{"designLayout":"function rawItemLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"style\\": config.style,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"conf\\": element\\n      }\\n    }), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function defaultLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(config.tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\").concat(children.join(''\\\\n''), \\"</\\").concat(config.tag, \\">\\");\\n    return this.colWrapper(scheme, str, parent);\\n  }","propertyLayout":"function paginationLayout(h) {\\n  var _this = this;\\n  function onInput(val) {\\n    this.activeData['':page-sizes''] = \\"[\\".concat(this.activeData.__config__.sizes, \\"]\\");\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''总条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':total'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"总条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':total''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':total'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''当前页数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':current-page'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"当前页数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':current-page''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':current-page'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''每页条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-size'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"每页条目数变量\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':page-size''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':page-size'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''可选条目数'',\\n      \\"guide\\": this.getHelp(''page.pagination'', '':page-sizes'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"可选条目数\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.sizes,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"sizes\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"[\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"append\\"\\n  }, [\\"]\\"])])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''是否背景色'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''background'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.background,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"background\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''上一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''prev-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"上一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''prev-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''prev-text'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"下一页文字\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''下一页文字'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''next-text'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"下一页文字\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''next-text''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''next-text'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"事件\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''size-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:size-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"pageSize 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:size-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:size-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''current-change'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:current-change'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"currentPage 改变时会触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:current-change''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:current-change'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''prev-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:prev-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击上一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:prev-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:prev-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''next-click'',\\n      \\"guide\\": this.getHelp(''page.pagination'', ''v-on:next-click'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"点击下一页按钮后触发（方法名）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-on:next-click''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-on:next-click'', $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prepend\\"\\n  }, [\\"@\\"])])])])]);\\n}","outputData":"function paginationData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    list.push(''// 分页属性'');\\n    if (!scheme.__config__.locked && scheme['':page-size'']) {\\n      // 页数\\n      list.push(\\"\\".concat(scheme['':page-size''], \\": 10,\\"));\\n    }\\n    if (scheme['':current-page'']) {\\n      // 当前页\\n      list.push(\\"\\".concat(scheme['':current-page''], \\": 1,\\"));\\n    }\\n    if (scheme['':total'']) {\\n      // 总条数\\n      list.push(\\"\\".concat(scheme['':total''], \\": 0,\\"));\\n    }\\n    return list;\\n  }","elName":"ElPagination","label":"分页","tag":"el-pagination","tagIcon":"paging","document":"https://element.eleme.cn/#/zh-CN/component/pagination","sizes":"10, 20, 30, 40, 50, 100","formId":135,"renderKey":135.40423957326942,"componentName":"ElPagination135","locked":true},":total":"tableDataTotal",":page-size":"search.limit","background":true,":current-page":"tableDataPage",":page-sizes":[10,20,30,40,50,100],"layout":"total, sizes, prev, pager, next, jumper","prev-text":"","next-text":"","v-if":null,"v-show":null,":disabled":null,"v-on:size-change":"onSizeChange","v-on:current-change":"onCurrentChange","v-on:prev-click":"","v-on:next-click":""},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"comment","tagIcon":"import","label":"引入组件","component":"Comment","from":"@/views/wf/common/comment","methousList":[],"attrsList":[],"formId":129,"renderKey":129.33871685261192,"componentName":"ElImport129","locked":true},"ref":"commentForm","v-if":null,"v-show":null},{"__config__":{"elName":"ElImport","designLayout":"function importLayout(h, element, index, parent) {\\n    var activeItem = this.$listeners.activeItem;\\n    var config = element.__config__;\\n    var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n    var componentColor = '''';\\n    if (config.component) componentColor = ''color: #333'';\\n    return h(\\"el-col\\", {\\n      \\"class\\": className,\\n      \\"nativeOn\\": {\\n        \\"click\\": function click(event) {\\n          activeItem(element, parent, event);\\n          event.stopPropagation();\\n        }\\n      }\\n    }, [h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"type\\": \\"flex\\",\\n        \\"justify\\": \\"center\\"\\n      },\\n      \\"style\\": \\"background: #f2f6fc; padding: 5px\\"\\n    }, [h(\\"span\\", {\\n      \\"class\\": \\"importLayout\\",\\n      \\"style\\": componentColor\\n    }, [config.component ? ''< '' + (config.tag || config.component) + '' />'' : \\"请配置导入组件\\"])]), this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n  }","outputHtml":"function importLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var getMethousAttrs = function getMethousAttrs() {\\n      // 获取引入组件 属性和方法\\n      var attrs = '''';\\n      // 方法 非预览模式添加方法\\n      !isView && config.methousList.forEach(function (me) {\\n        if (me.name && me.value) {\\n          attrs = \\"\\".concat(attrs, \\" v-on:\\").concat(me.name, \\"=\\\\\\"\\").concat(me.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      // 属性\\n      config.attrsList.forEach(function (att) {\\n        if (att.name && att.value) {\\n          attrs = \\"\\".concat(attrs, \\" \\").concat(att.name, \\"=\\\\\\"\\").concat(att.value, \\"\\\\\\"\\");\\n        }\\n      });\\n      return attrs;\\n    };\\n    var tag = config.tag;\\n    var methousAttrs = getMethousAttrs();\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" \\").concat(methousAttrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function importLayout(h) {\\n  var _this = this;\\n  function addMethousList() {\\n    this.activeData.__config__.methousList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function addAttrsList() {\\n    this.activeData.__config__.attrsList.push({\\n      name: '''',\\n      value: ''''\\n    });\\n  }\\n  function onInput(val) {\\n    this.activeData.__config__.tag = this.lineCase(val);\\n    this.activeData.ref = this.lowerCase(val) + this.activeData.__config__.formId;\\n  }\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.component\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入组件名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''component'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import引入\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.component,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"component\\", $$v);\\n      }\\n    },\\n    \\"on\\": {\\n      \\"input\\": onInput.bind(this)\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.tag\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入标签名称'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签名称\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''tag'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"clearable\\": true,\\n      \\"placeholder\\": \\"import标签\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.tag,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"tag\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"__config__.from\\"\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"import\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''from'')\\n    }\\n  }), h(\\"el-row\\", {\\n    \\"class\\": \\"import-class\\"\\n  }, [h(\\"div\\", {\\n    \\"class\\": \\"components\\"\\n  }, [this.activeData.__config__.component]), h(\\"span\\", {\\n    \\"style\\": \\"color:#606266; padding: 0 5px\\"\\n  }, [\\"from\\"]), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"路径\\",\\n      \\"clearable\\": true\\n    },\\n    \\"class\\": \\"froms\\",\\n    \\"model\\": {\\n      value: _this.activeData.__config__.from,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"from\\", $$v);\\n      }\\n    }\\n  }, [h(\\"template\\", {\\n    \\"slot\\": \\"prefix\\"\\n  }, [\\"\\\\u201D\\"]), h(\\"template\\", {\\n    \\"slot\\": \\"suffix\\"\\n  }, [\\"\\\\u201D\\"])])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"组件ref\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"组件ref命名\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件属性\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [this.activeData.__config__.attrsList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.attrsList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    })])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"属性值\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addAttrsList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u5C5E\\\\u6027\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"组件事件\\",\\n      \\"name\\": \\"3\\"\\n    }\\n  }, [this.activeData.__config__.methousList.map(function (item, index) {\\n    return h(\\"div\\", {\\n      \\"key\\": index,\\n      \\"class\\": \\"reg-item\\"\\n    }, [!_this.activeData.__config__.locked && h(\\"span\\", {\\n      \\"class\\": \\"close-btn\\",\\n      \\"on\\": {\\n        \\"click\\": function click() {\\n          _this.activeData.__config__.methousList.splice(index, 1);\\n        }\\n      }\\n    }, [h(\\"i\\", {\\n      \\"class\\": \\"el-icon-close\\"\\n    })]), h(\\"el-row\\", {\\n      \\"attrs\\": {\\n        \\"gutter\\": 5\\n      }\\n    }, [h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"事件名\\"\\n      },\\n      \\"model\\": {\\n        value: item.name,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"name\\", $$v);\\n        }\\n      }\\n    }, [h(\\"template\\", {\\n      \\"slot\\": \\"prepend\\"\\n    }, [\\"@\\"])])])]), h(\\"el-col\\", {\\n      \\"attrs\\": {\\n        \\"span\\": 12\\n      }\\n    }, [h(\\"el-form-item\\", {\\n      \\"attrs\\": {\\n        \\"label-width\\": \\"0\\"\\n      }\\n    }, [h(\\"el-input\\", {\\n      \\"attrs\\": {\\n        \\"disabled\\": _this.activeData.__config__.locked,\\n        \\"clearable\\": true,\\n        \\"placeholder\\": \\"方法名\\"\\n      },\\n      \\"model\\": {\\n        value: item.value,\\n        callback: function callback($$v) {\\n          _this.$set(item, \\"value\\", $$v);\\n        }\\n      }\\n    })])])])]);\\n  }), h(\\"div\\", {\\n    \\"style\\": \\"margin-left: 20px\\"\\n  }, [!this.activeData.__config__.locked && h(\\"el-button\\", {\\n    \\"attrs\\": {\\n      \\"icon\\": \\"el-icon-circle-plus-outline\\",\\n      \\"type\\": \\"text\\"\\n    },\\n    \\"on\\": {\\n      \\"click\\": addMethousList.bind(this)\\n    }\\n  }, [\\"\\\\u6DFB\\\\u52A0\\\\u7EC4\\\\u4EF6\\\\u4E8B\\\\u4EF6\\"])])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"4\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, ''v-if'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"渲染条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), this.hasOwnProperty(this.activeData, ''v-show'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"显示条件\\",\\n      \\"guide\\": this.getHelp(''page.import'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputImport":"function outputImport(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return \\"import \\".concat(config.component || config.elName, \\" from \\\\\\"\\").concat(config.from, \\"\\\\\\"\\");\\n    } else if (config.dataType == ''dynamic'' || config.elName == ''ObjectSelect'') {\\n      return \\"import { \\".concat(config.apiFn, \\" } from ''\\").concat(config.apiFrom, \\"''\\");\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadFile from ''@/views/components/uploadFile''\\";\\n    } else if (config.tag == ''upload-file'') {\\n      return \\"import uploadImage from ''@/views/components/uploadImage''\\";\\n    }\\n  }","outputComponent":"function outputComponent(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    if (config.from) {\\n      return (config.component || config.elName) + '','';\\n    }\\n  }","tag":"component","tagIcon":"import","label":"引入组件","component":"component","from":"","methousList":[{"name":"save-finished","value":"getTaskList()"},{"name":"after-wfForm-load","value":"afterWfFormload()"}],"attrsList":[{"name":":is","value":"wfForm"}],"formId":130,"renderKey":130.4570362108601,"componentName":"ElImport130","locked":true},"ref":"wfForm","v-if":null,"v-show":null}]},"maxFormId":135,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"form.vue","source":"<template>\\n{{@ element | makeUpHtml}}\\n</template>\\n<script>\\nimport BizForm from ''@/views/wf/common/bizForm''\\nimport { validatenull } from ''@/utils/validate''\\n/** 根据用户界面配置import组件 结束 */\\n{{@ element | makeUpImport | rmDuplicate}}\\n/** 根据用户界面配置import组件 结束 */\\nimport { get{{table.className}}ById{{if table.source == ''BASE TABLE''}}, create{{table.className}}, reapply{{table.className}}, get{{table.className}}ByTaskId, agree{{table.className}}, forward{{table.className}}, commission{{table.className}}, propose{{table.className}}, back{{table.className}}, reject{{table.className}}, terminate{{table.className}}, reverse{{table.className}}, listBackActivity, saveDraft{{table.className}}{{/if}} } from ''@/api/{{moduleName}}/{{if subModuleName != ''''}}{{subModuleName}}/{{/if}}{{table.className | lowerCase}}''\\nimport OperationIcon from ''@/components/OperationIcon''\\nexport default {\\n  extends: BizForm,\\n  name: ''{{table.className | lowerCase}}-form'',\\n  components: {\\n    /** 根据用户界面配置组件 开始 */\\n    {{@ element | makeUpComponent | rmDuplicate}}\\n    /** 根据用户界面配置组件 结束 */\\n\\n    OperationIcon\\n  },\\n  data() {\\n    return {\\n      /** 根据用户界面配置生成data数据 开始 */\\n      editFormData: this.initEditData(),\\n      dialogProps: {\\n        visible: false,\\n        title: ''''\\n      },\\n      <%- $imports.makeUpData(element , [{elName:''ElEditForm'', locked: true}]) %>\\n      // 选项变量\\n      {{@ element | makeUpOptions}}\\n      /** 根据用户界面配置生成data数据 结束 */\\n\\n      // 窗口操作类型 view/edit/add\\n      action: ''''\\n    }\\n  },\\n  props: {\\n    // 权限\\n    permission: {\\n      type: Object\\n    }\\n  },\\n  computed: {},\\n  methods: {\\n    loadModelData(taskId) {\\n      this.setLoad()\\n      get{{table.className}}ByTaskId(taskId).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.editFormData = { ...this.initEditData(), ...responseData.data }\\n          this.$emit(''after-load-data'', this.editFormData)        // 表单数据对象传给父节点\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 保存草稿，files附件列表, draftModel 草稿对象\\n    doSaveDraft(draftModel, files) {\\n      if(!draftModel) {   // 不是从草稿打开创建，保存时更新原草稿\\n        draftModel = {\\n            procdefId: this.procDef.id,\\n            procdefName: this.procDef.name,\\n            name: this.procDef.name + ''-'' + this.editFormData.name\\n        }\\n      }\\n      this.setLoad()\\n      let formData = this.createWfData(this.editFormData, files)\\n      formData.append(''strDraft'', JSON.stringify(draftModel))\\n      saveDraft{{table.className}}(formData).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 创建一个新流程 process流程 actNodes是提交的用户任务节点及其审批用户\\n    doCreate(files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          let formData = this.createWfData(this.editFormData, files)\\n          create{{table.className}}(this.procDef.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n    // 重新发起申请 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doReApply(comment, files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          reapply{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n    // 同意 comment 意见, files文件附件列表，actNodes提交节点和用户信息\\n    doAgree(comment, files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          agree{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n    // 转派任务\\n    doForward(comment, files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          forward{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n    // 委派任务\\n    doCommission(comment, files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          this.editFormData.taskComement = comment  // 意见\\n          \\n          let formData = this.createWfData(this.editFormData, files)\\n          commission{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },  \\n    // 拟办（办理委派过来的任务）\\n    doPropose(comment, files) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          propose{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    }, \\n    // 拒绝\\n    doReject(comment, files) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          reject{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },  \\n    // 退回 comment 意见, actNodes退回节点和用户信息\\n    doBack(comment, files, actNodes) {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          this.editFormData.actNodes = actNodes   // 选择节点及审批用户\\n          this.editFormData.taskComement = comment  // 意见\\n\\n          let formData = this.createWfData(this.editFormData, files)\\n          back{{table.className}}(this.task.id, formData).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n    // 终止流程 comment 意见, actNodes退回节点和用户信息\\n    doTerminate(comment, files) {\\n      this.setLoad()\\n      this.editFormData.taskComement = comment  // 意见\\n\\n      let formData = this.createWfData(this.editFormData, files)\\n      terminate{{table.className}}(this.task.id, formData).then(responseData => {\\n        if(responseData.code == 100) {\\n          this.dialogProps.visible = false\\n          this.$emit(''save-finished'')\\n        }\\n        this.showMessage(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    // 撤回任务\\n    doReverse(task) {\\n      this.setLoad()\\n      reverse{{table.className}}(task.id).then(responseData => {\\n        this.handleResponse(responseData)\\n        this.resetLoad()\\n      }).catch(error => {\\n        this.outputError(error)         \\n      })\\n    },\\n    doListActivity() {\\n      this.$refs[''editForm''].validate(valid => {\\n        if (valid) {\\n          this.setLoad()\\n          listBackActivity(this.task.id).then(responseData => {\\n            this.handleResponse(responseData)\\n            this.resetLoad()\\n          }).catch(error => {\\n            this.outputError(error)         \\n          })\\n        }\\n      })\\n    },\\n{{if table.source == ''BASE TABLE''}}\\n    {{if table.mutilFileUploadExists || table.imageUploadExists}}\\n    createFormData(formData, editFormData) {\\n      let deletes = []\\n      <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if (item.__config__.tag == ''upload-file'' || item.__config__.tag == ''upload-image'') && item.__vModel__}}\\n      for(let idx in editFormData.{{item.__vModel__}}File.uploads) {\\n        formData.append(''{{item.__vModel__}}Uploads'', editFormData.{{item.__vModel__}}File.uploads[idx].raw)\\n      }\\n      deletes = deletes.concat(editFormData.{{item.__vModel__}}File.deletes)\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n      formData.append(''deleteIds'', JSON.stringify(deletes))\\n    },\\n    {{/if}}\\n{{/if}}\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName === ''CascaderInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n                {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n    list{{item.__config__.children[0]['':options''] | upperCase}}() {\\n                {{else}}\\n    list{{item.__config__.children[0].__config__.loopArray | upperCase}}() {\\n                {{/if}}\\n      let search_List = {\\n        params: []\\n      }\\n      // filter条件\\n      search_List.params.push.apply(search_List.params, [{{@ item.__config__.children[0].__config__.optionParams}}])\\n      {{if item.__config__.field}}\\n        {{if item.__config__.field.javaType.value == ''Custom''}}\\n      // 数据权限: {{item.__config__.field.customType ? item.__config__.field.customType.comments : ''''}}{{item.__config__.field.customType ? item.__config__.field.customType.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.customType ? item.__config__.field.customType.id : '''' | stringify}})\\n        {{else if item.__config__.field.javaType.value == ''This''}}\\n      // 数据权限: {{item.__config__.field.currentTable ? item.__config__.field.currentTable.comments : ''''}}{{item.__config__.field.currentTable ? item.__config__.field.currentTable.name : ''''}}\\n      this.pushDataPermissions(search_List.params, this.$route.meta.routerId, {{@ item.__config__.field.currentTable ? item.__config__.field.currentTable.id : '''' | stringify}})\\n        {{/if}}\\n      {{/if}}\\n      {{item.__config__.children[0].__config__.apiFn}}(search_List).then(responseData => {\\n        if(responseData.code == 100) {\\n          {{if item.__config__.children[0].__config__.tag == ''el-cascader''}}\\n            this.{{item.__config__.children[0]['':options'']}} = responseData.data\\n          {{else}}\\n            this.{{item.__config__.children[0].__config__.loopArray}} = responseData.data\\n          {{/if}}\\n        } else {\\n          this.showMessage(responseData)\\n        }\\n      })\\n    },\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n    {{@ element | toCode tpl}}\\n    initOptions(This) {\\n      // 初始化自定义类型选择框选项变量\\n    <% var tpl = `\\n      {{if element.__config__.children}}\\n        {{each element.__config__.children item}}\\n          {{if item.__config__.tag == ''el-form-item''}}\\n            {{if item.__config__.children[0].__config__.elName === ''SelectInput'' || item.__config__.children[0].__config__.elName == ''RadioGroup'' || item.__config__.children[0].__config__.elName == ''CheckboxGroup''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0].__config__.loopArray | upperCase}}()\\n              {{/if}}\\n            {{else if item.__config__.children[0].__config__.elName === ''CascaderInput''}}\\n              {{if item.__config__.children[0].__config__.dataType == ''dynamic''}}\\n      this.list{{item.__config__.children[0]['':options''] | upperCase}}()\\n              {{/if}}\\n            {{/if}}\\n          {{/if}}\\n          {{@ item | toCode tpl }}\\n        {{/each}}\\n      {{/if}}\\n    ` %>\\n      {{@ element | toCode tpl}}\\n    },\\n    initEditData(This) {\\n      return {\\n        <%- $imports.makeUpChildData(element , {elName:''ElEditForm''},{locked: true}) %>\\n      }\\n    }\\n  },\\n  watch: {\\n    {{@ element | makeUpWatch}}\\n  },\\n  mounted: function() {\\n    this.$nextTick(() => {\\n      this.dialogProps.visible = true\\n      this.initOptions()\\n      this.tabIndex = ''1''\\n      if(this.wfAction == ''create'') {\\n        this.$refs[''editForm''].resetFields()\\n        // 从草稿创建\\n        if(this.bizData) {\\n          this.editFormData = { ...this.initEditData(), ...this.bizData }\\n        }\\n      } else if(this.wfAction == ''approve'') {\\n        // 重新申请\\n        let reApply = this.task.assignee == this.task.owner && this.task.assignee == this.task.extInfo.applicantId && this.task.taskDefinitionKey == this.task.extInfo.appActId\\n        if(!reApply) {\\n          this.action = \\"view\\"\\n        }      \\n        this.loadModelData(this.task.id)\\n      } else if(this.wfAction == ''viewBiz'') {\\n        this.action = \\"view\\"\\n        this.editFormData = { ...this.initEditData(), ...this.bizData }\\n      } else if(this.wfAction == ''viewTask'') {\\n        this.action = \\"view\\"\\n        this.loadModelData(this.task.id)\\n      } else {\\n        console.err(\\"=============== 业务审批单中，实现的：\\" + this.wfAction)\\n      }\\n    })\\n  }\\n}\\n</script>\\n","__config__":{"children":[{"__config__":{"designLayout":"function generalCantainerLayout(h, element, index, parent) {\\n    var config = element.__config__;\\n    var child = this.renderChildren.apply(this, arguments);\\n    // 组合组件的子组件不允许拖拽\\n    if (!this.isMakeUp(element)) {\\n      child = [h(\\"span\\", {\\n        \\"class\\": \\"component-name\\"\\n      }, [config.componentName]), h(\\"draggable\\", {\\n        \\"attrs\\": {\\n          \\"data-elname\\": config.elName,\\n          \\"list\\": config.children,\\n          \\"animation\\": 340,\\n          \\"group\\": this.cantainerGroup\\n        },\\n        \\"class\\": \\"drag-wrapper\\",\\n        \\"on\\": {\\n          \\"choose\\": this.onChoose,\\n          \\"unchoose\\": this.onUnchoose\\n        }\\n      }, [child])];\\n    }\\n    var elNode = h(\\"render\\", {\\n      \\"key\\": config.renderKey,\\n      \\"attrs\\": {\\n        \\"child\\": child,\\n        \\"conf\\": element\\n      }\\n    });\\n    // 非组合组件内层节点，节点可以选择\\n    if (!config.isInner) {\\n      var activeItem = this.$listeners.activeItem;\\n      var className = this.activeIds.indexOf(config.formId) >= 0 ? ''drawing-row-item active-from-item'' : \\"drawing-row-item \\".concat(this.validClass(element));\\n      elNode = h(\\"el-col\\", {\\n        \\"class\\": className,\\n        \\"attrs\\": {\\n          \\"span\\": config.span\\n        },\\n        \\"style\\": config.style,\\n        \\"nativeOn\\": {\\n          \\"click\\": function click(event) {\\n            activeItem(element, parent, event);\\n            event.stopPropagation();\\n          }\\n        }\\n      }, [elNode, this.itemBtns.apply(this, arguments), this.itemEmpty.apply(this, arguments)]);\\n    }\\n    return elNode;\\n  }","outputHtml":"function formLayout(scheme, parent, isView) {\\n    var config = scheme.__config__;\\n    var tag = config.tag;\\n    // 属性\\n    var attrs = this.getAttrs(scheme, isView);\\n    var children = this.createChildren(scheme, parent, isView);\\n    var str = \\"<\\".concat(tag, \\" \\").concat(attrs, \\" class=''dc-\\").concat(config.tag, \\"_\\").concat(config.elName, \\"''>\\\\n      <el-row>\\\\n        \\").concat(children.join(''\\\\n''), \\"\\\\n      </el-row>\\\\n    </\\").concat(tag, \\">\\");\\n    return str;\\n  }","propertyLayout":"function editFormLayout(h) {\\n  var _this = this;\\n  return h(\\"el-collapse\\", {\\n    \\"model\\": {\\n      value: _this.activeNames,\\n      callback: function callback($$v) {\\n        _this.activeNames = $$v;\\n      }\\n    }\\n  }, [h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"数据\\",\\n      \\"name\\": \\"1\\"\\n    }\\n  }, [h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"ref\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入表单名(ref)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单名\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''ref'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入表单名（ref）\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.ref,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"ref\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", {\\n    \\"attrs\\": {\\n      \\"prop\\": \\"::model\\",\\n      \\"label\\": \\"数据对象\\",\\n      \\"rules\\": {\\n        required: true,\\n        message: ''请输入数据模型(model)'',\\n        trigger: ''blur''\\n      }\\n    }\\n  }, [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''数据对象'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':model'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"disabled\\": this.activeData.__config__.locked,\\n      \\"placeholder\\": \\"请输入数据模型(model)\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':model''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':model'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"布局\\",\\n      \\"name\\": \\"2\\"\\n    }\\n  }, [h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"栅格\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''span'')\\n    }\\n  }), h(\\"el-slider\\", {\\n    \\"attrs\\": {\\n      \\"max\\": 24,\\n      \\"min\\": 1,\\n      \\"marks\\": {\\n        12: ''''\\n      }\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.__config__.span,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData.__config__, \\"span\\", $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"表单尺寸\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''size'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"attrs\\": {\\n      \\"size\\": \\"mini\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData.size,\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, \\"size\\", $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u7CFB\\\\u7EDF\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"large\\"\\n    }\\n  }, [\\"\\\\u5927\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"medium\\"\\n    }\\n  }, [\\"\\\\u4E2D\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"small\\"\\n    }\\n  }, [\\"\\\\u5C0F\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"mini\\"\\n    }\\n  }, [\\"\\\\u8FF7\\\\u4F60\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签对齐\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-position'')\\n    }\\n  }), h(\\"el-radio-group\\", {\\n    \\"model\\": {\\n      value: _this.activeData[''label-position''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-position'', $$v);\\n      }\\n    }\\n  }, [h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"left\\"\\n    }\\n  }, [\\"\\\\u5DE6\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"null\\"\\n    }\\n  }, [\\"\\\\u53F3\\\\u5BF9\\\\u9F50\\"]), h(\\"el-radio-button\\", {\\n    \\"attrs\\": {\\n      \\"label\\": \\"top\\"\\n    }\\n  }, [\\"\\\\u9876\\\\u90E8\\\\u5BF9\\\\u9F50\\"])])]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"标签宽度\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''label-width'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"placeholder\\": \\"请输入标签宽度\\",\\n      \\"clearable\\": true\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''label-width''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''label-width'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": \\"行内提示\\",\\n      \\"guide\\": this.getHelp(''page.formE'', ''inline-message'')\\n    }\\n  }), h(\\"el-switch\\", {\\n    \\"attrs\\": {\\n      \\"inactive-value\\": ''undefined''\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''inline-message''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''inline-message'', $$v);\\n      }\\n    }\\n  })])]), h(\\"el-collapse-item\\", {\\n    \\"attrs\\": {\\n      \\"title\\": \\"显示\\",\\n      \\"name\\": \\"5\\"\\n    }\\n  }, [this.hasOwnProperty(this.activeData, '':disabled'') && h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''禁用条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', '':disabled'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"禁用条件（disabled）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData['':disabled''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, '':disabled'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''渲染条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-if'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"渲染条件（v-if）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-if''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-if'', $$v);\\n      }\\n    }\\n  })]), h(\\"el-form-item\\", [h(\\"guide-label\\", {\\n    \\"slot\\": ''label'',\\n    \\"attrs\\": {\\n      \\"label\\": ''显示条件'',\\n      \\"guide\\": this.getHelp(''page.formE'', ''v-show'')\\n    }\\n  }), h(\\"el-input\\", {\\n    \\"attrs\\": {\\n      \\"type\\": \\"textarea\\",\\n      \\"rows\\": 2,\\n      \\"placeholder\\": \\"显示条件（v-show）\\"\\n    },\\n    \\"model\\": {\\n      value: _this.activeData[''v-show''],\\n      callback: function callback($$v) {\\n        _this.$set(_this.activeData, ''v-show'', $$v);\\n      }\\n    }\\n  })])])]);\\n}","outputData":"function formData(scheme, parent, isView, loop, filters) {\\n    var list = [];\\n    if (scheme.__config__.elName == ''ElEditForm'' && scheme.__config__.locked) {\\n      // 判断编辑form是否是锁定状态，锁定状态调用方法\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n    } else if (scheme['':model'']) {\\n      list.push(\\"\\".concat(scheme['':model''], \\": {\\"));\\n      scheme.__config__.children && scheme.__config__.children.forEach(function (el) {\\n        list.push.apply(list, loop(el, scheme, isView, loop, filters));\\n      });\\n      list.push(''},'');\\n    }\\n    return list;\\n  }","elName":"ElEditForm","label":"Form编辑","tag":"el-form","tagIcon":"row","span":24,"children":[],"document":"https://element.eleme.cn/#/zh-CN/component/form","formId":102,"renderKey":102.41096242308288,"componentName":"ElEditForm102","locked":true},"ref":"editForm",":model":"editFormData","size":null,"label-position":null,"label-width":"100px","inline-message":"undefined","v-if":null,"v-show":null,":disabled":"action == \\"view\\""}]},"maxFormId":102,"locked":true},{"filePath":"client/src/views/{{moduleName}}/{{subModuleName}}/{{className | lowerCase}}","fileName":"metadata.js","source":"<% var tpl = `\\r\\n      {{if element.__config__.children}}\\r\\n        {{each element.__config__.children item}}\\r\\n          {{if item.__config__.elName == ''ElConditionPanel'' && item.__config__.locked}}\\r\\n            const conditions = [\\r\\n            {{if null != item.__config__.searchList && item.__config__.searchList.length > 0}}\\r\\n              {{each item.__config__.searchList search}}\\r\\n              {\\r\\n                name: ''{{search.name}}'',\\r\\n                comments: ''{{search.comments}}'',\\r\\n                tag: ''{{search.tag}}'',\\r\\n                queryType: ''{{search.queryType}}'',\\r\\n                operations: {{@ search.operations | stringify}},\\r\\n                attribute: {{@ search.attribute | stringify}}\\r\\n              },\\r\\n              {{/each}}\\r\\n            {{/if}}\\r\\n            ]\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{else}}\\r\\n            {{@ item | toCode tpl}}\\r\\n          {{/if}}\\r\\n        {{/each}}\\r\\n      {{/if}}\\r\\n      ` %>\\r\\n      {{@ element | toCode tpl}}\\r\\nconst metadata = [\\r\\n\\t{\\r\\n    id: ''{{table.id}}'',\\r\\n    schemeId: ''{{table.scheme.id}}'',\\r\\n    name: ''{{table.comments}}'',\\r\\n    conditionPanel: conditions,\\r\\n    type: ''main'',\\r\\n    dataRules:[]\\r\\n  }\\r\\n]\\r\\nexport default metadata","__config__":{"children":[]},"locked":true}]}', file_id=1369625385203523989, remarks='前端-增删改查（工作流-单表）', create_by='超级管理员(super)', create_date='2023-01-31 18:09:04', update_by='超级管理员(super)', update_date='2023-05-26 13:52:38', del_flag='0'
WHERE id=1369625385203523990;
