<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.databus.dao.MasterDataRecordsDao">
  <sql id="masterDataRecordsColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.master_data_batch_records_id AS "masterDataBatchRecords.id",
      a.order_number AS "orderNumber",
      a.tenant_id AS "tenantId",
      a.master_data_type_id AS "masterDataTypeId",
      a.data_key AS "dataKey",
      a.data_version AS "dataVersion",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="masterDataRecordsJoins">
    LEFT JOIN master_data_batch_records masterDataBatchRecords ON masterDataBatchRecords.id = a.master_data_batch_records_id
  </sql>
  <resultMap id="resultMasterDataRecordsMap" type="com.geeke.databus.entity.MasterDataRecords">
    <result property="id" column="id" />
    <result property="orderNumber" column="orderNumber" />
    <result property="tenantId" column="tenantId" />
    <result property="masterDataTypeId" column="masterDataTypeId" />
    <result property="dataKey" column="dataKey" />
    <result property="dataVersion" column="dataVersion" />
    <result property="remarks" column="remarks" />
    <result property="createBy" column="createBy" />
    <result property="createDate" column="createDate" />
    <result property="updateBy" column="updateBy" />
    <result property="updateDate" column="updateDate" />
    <result property="delFlag" column="delFlag" />
    <association property="masterDataBatchRecords" javaType="com.geeke.databus.entity.MasterDataBatchRecords">
      <result property="id" column="masterDataBatchRecords.id" />
    </association>
  </resultMap>
  <select id="get" resultMap="resultMasterDataRecordsMap">
    SELECT
    <include refid="masterDataRecordsColumns" />
    FROM master_data_records a
    <include refid="masterDataRecordsJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM master_data_records a
    <include refid="masterDataRecordsJoins" />
    <where>
      1=1
      AND a.id > 0
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultMap="resultMasterDataRecordsMap">
    SELECT
    <include refid="masterDataRecordsColumns" />
    FROM master_data_records a
    <include refid="masterDataRecordsJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultMap="resultMasterDataRecordsMap">
    SELECT
    <include refid="masterDataRecordsColumns" />
    FROM master_data_records a
    <include refid="masterDataRecordsJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <resultMap id="resultNewDataMap" type="com.geeke.databus.entity.DataVersion">
    <result property="dataVersion" column="dataVersion" />
    <collection property="jsonlist" javaType="com.geeke.databus.entity.RequestJson">
      <result property="code" column="masterDataInfoFiled" />
      <result property="value" column="masterDataInfoValue" />
    </collection>
  </resultMap>
    <select id="getNewData" resultMap="resultNewDataMap">

      select data_version  AS "dataVersion",
      standard_field_id AS "standardFieldId",
      master_data_info_filed AS "masterDataInfoFiled",
      master_data_info_value AS "masterDataInfoValue"
      from master_data_detail
      where data_version in (
      SELECT
      max(a.data_version)  AS "dataVersion"
      FROM master_data_detail a
      inner join app_standard_field asf on
      a.master_data_type_id=asf.master_data_type_id
      and a.standard_field_id =asf.standard_field_id
      where
      a.tenant_id = #{tenantId}
      AND a.master_data_type_id=#{id}
      AND a.del_flag = 0
      group by a.data_key,a.standard_field_id,a.master_data_info_filed
      )
      order by data_version
    </select>
    <insert id="insert">
    INSERT INTO master_data_records(
    <trim suffixOverrides=",">
      id,
      master_data_batch_records_id,
      order_number,
      tenant_id,
      master_data_type_id,
      data_key,
      data_version,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ masterDataBatchRecords.id },
      #{ orderNumber },
      #{ tenantId },
      #{ masterDataTypeId },
      #{ dataKey },
      #{ dataVersion },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE master_data_records SET
    <trim suffixOverrides=",">
      master_data_batch_records_id = #{ masterDataBatchRecords.id },
      order_number = #{ orderNumber },
      tenant_id = #{ tenantId },
      master_data_type_id = #{ masterDataTypeId },
      data_key = #{ dataKey },
      data_version = #{ dataVersion },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE master_data_records SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO master_data_records(
    <trim suffixOverrides=",">
      id,
      master_data_batch_records_id,
      order_number,
      tenant_id,
      master_data_type_id,
      data_key,
      data_version,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.masterDataBatchRecords.id},
        #{entity.orderNumber},
        #{entity.tenantId},
        #{entity.masterDataTypeId},
        #{entity.dataKey},
        #{entity.dataVersion},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE master_data_records
    <set>
      <trim prefix="master_data_batch_records_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.masterDataBatchRecords.id}
        </foreach>
      </trim>
      <trim prefix="order_number=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.orderNumber}
        </foreach>
      </trim>
      <trim prefix="tenant_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.tenantId}
        </foreach>
      </trim>
      <trim prefix="master_data_type_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.masterDataTypeId}
        </foreach>
      </trim>
      <trim prefix="data_key=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dataKey}
        </foreach>
      </trim>
      <trim prefix="data_version=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dataVersion}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE master_data_records
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>