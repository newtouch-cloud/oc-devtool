<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.dc.dao.DcSchemeDao">
  <sql id="dcSchemeColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.name AS "name",
      a.package_name AS "packageName",
      a.module_name AS "moduleName",
      a.sub_module_name AS "subModuleName",
      a.function_name AS "functionName",
      a.template_id AS "template.id",
      IFNULL(template.name,'') AS "template.name",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
      a.project_id AS "project.id",
      IFNULL(project.name,'') AS "project.name",
      IFNULL(project.status,'') AS "project.status",
    </trim>
  </sql>
  <sql id="dcSchemeJoins">
    LEFT JOIN dc_template template ON template.id = a.template_id
    LEFT JOIN prj_project project ON project.id = a.project_id
  </sql>
  <select id="get" resultType="com.geeke.dc.entity.DcSchemeEx">
    SELECT
    a.template_json AS "templateJson",
    IFNULL(template.json,'') AS "template.json",
    <include refid="dcSchemeColumns" />
    FROM dc_scheme a
    <include refid="dcSchemeJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM dc_scheme a
    <include refid="dcSchemeJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.dc.entity.DcScheme">
    SELECT
    <include refid="dcSchemeColumns" />
    FROM dc_scheme a
    <include refid="dcSchemeJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.dc.entity.DcScheme">
    SELECT
    <include refid="dcSchemeColumns" />
    FROM dc_scheme a
    <include refid="dcSchemeJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO dc_scheme(
    <trim suffixOverrides=",">
      id,
      name,
      package_name,
      module_name,
      sub_module_name,
      function_name,
      template_id,
      template_json,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      project_id,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ name },
      #{ packageName },
      #{ moduleName },
      #{ subModuleName },
      #{ functionName },
      #{ template.id },
      #{ templateJson },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ project.id },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE dc_scheme SET
    <trim suffixOverrides=",">
      name = #{ name },
      package_name = #{ packageName },
      module_name = #{ moduleName },
      sub_module_name = #{ subModuleName },
      function_name = #{ functionName },
      template_id = #{ template.id },
      template_json = #{ templateJson },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      project_id = #{ project.id },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE dc_scheme SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO dc_scheme(
    <trim suffixOverrides=",">
      id,
      name,
      package_name,
      module_name,
      sub_module_name,
      function_name,
      template_id,
      template_json,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      project_id,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.name},
        #{entity.packageName},
        #{entity.moduleName},
        #{entity.subModuleName},
        #{entity.functionName},
        #{entity.template.id},
        #{entity.templateJson},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
        #{entity.project.id},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE dc_scheme
    <set>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="package_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.packageName}
        </foreach>
      </trim>
      <trim prefix="module_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.moduleName}
        </foreach>
      </trim>
      <trim prefix="sub_module_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.subModuleName}
        </foreach>
      </trim>
      <trim prefix="function_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.functionName}
        </foreach>
      </trim>
      <trim prefix="template_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.template.id}
        </foreach>
      </trim>
      <trim prefix="template_json=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.templateJson}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="project_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.project.id}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE dc_scheme
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>

  <insert id="bulkInsertSchemeByProject">
    INSERT INTO dc_scheme(
    <trim suffixOverrides=",">
      id,
      name,
      package_name,
      module_name,
      sub_module_name,
      function_name,
      template_id,
      template_json,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      project_id,
    </trim>
    )
    select id + ${projectId}, name, package_name, module_name, sub_module_name, function_name,
    template_id, template_json, remarks, create_by, now(), update_by, now(), 0, #{projectId} from dc_scheme
    where del_flag = 0 and project_id  = #{emptyProject}
  </insert>
  <update id="bulkDeleteSchemeByProject">
    UPDATE dc_scheme SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE project_id = #{id}
  </update>

</mapper>