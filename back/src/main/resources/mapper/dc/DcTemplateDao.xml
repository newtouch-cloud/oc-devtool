<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.dc.dao.DcTemplateDao">
  <sql id="dcTemplateColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.name AS "name",
      a.type AS "type",
      a.file_id AS "fileId",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="dcTemplateJoins">
  </sql>
  <select id="get" resultType="com.geeke.dc.entity.DcTemplate">
    SELECT
    a.json AS "json",
    <include refid="dcTemplateColumns" />
    FROM dc_template a
    <include refid="dcTemplateJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM dc_template a
    <include refid="dcTemplateJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.dc.entity.DcTemplate">
    SELECT
    <include refid="dcTemplateColumns" />
    FROM dc_template a
    <include refid="dcTemplateJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.dc.entity.DcTemplate">
    SELECT
    <include refid="dcTemplateColumns" />
    FROM dc_template a
    <include refid="dcTemplateJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO dc_template(
    <trim suffixOverrides=",">
      id,
      name,
      type,
      json,
      file_id,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ name },
      #{ type },
      #{ json },
      #{ fileId },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE dc_template SET
    <trim suffixOverrides=",">
      name = #{ name },
      type = #{ type },
      json = #{ json },
      file_id = #{ fileId },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE dc_template SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO dc_template(
    <trim suffixOverrides=",">
      id,
      name,
      type,
      json,
      file_id,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.name},
        #{entity.type},
        #{entity.json},
        #{entity.fileId},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE dc_template
    <set>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="type=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.type}
        </foreach>
      </trim>
      <trim prefix="json=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.json}
        </foreach>
      </trim>
      <trim prefix="file_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.fileId}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE dc_template
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <resultMap id="getTemplateAndFile" type="com.geeke.dc.entity.DcTemplate">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="type" property="type" />
    <result column="remarks" property="remarks" />
    <result column="json" property="json" />
    <collection property="fileList" ofType="com.geeke.sys.entity.SysFile">
      <id property="id" column="fileId" />
      <result column="fileName" property="name" />
      <result column="fileType" property="fileType" />
      <result column="fileSize" property="fileSize" />
      <result column="fileByte" property="fileByte" />
    </collection>
  </resultMap>
  <!--查看所有模板包含文件信息-->
  <select id="listTemplateAndFile" resultMap="getTemplateAndFile">
    SELECT
    a.id as id,
    a.name as name,
    a.type as type,
    a.remarks as remarks,
    a.json AS "json",
    file.id as fileId,
    file.name as fileName,
    file.file_type as fileType,
    file.file_size as fileSize,
    content.byte as fileByte
    FROM dc_template a
    LEFT JOIN sys_file file ON a.file_id = file.object_id and file.del_flag = 0
    LEFT JOIN sys_file_content `content` ON `content`.id = file.id
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
</mapper>