<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.micro.dao.MicroVersionDao">
  <sql id="microVersionColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.app_id AS "app.id",
      IFNULL(app.name,'') AS "app.name",
      IFNULL(app.full_name,'') AS "app.fullName",
      IFNULL(app.is_locked,'') AS "app.isLocked",
      IFNULL(app.icon_id,'') AS "app.iconId",
      IFNULL(app.app_key,'') AS "app.appKey",
      a.type_id AS "type.id",
      IFNULL(type.name,'') AS "type.name",
      IFNULL(type.value,'') AS "type.value",
      a.url AS "url",
      a.is_locked AS "isLocked",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
      a.name AS "name",
      a.mobil_url AS "mobilUrl",
      a.db_type_id AS "dbType.id",
      IFNULL(dbType.name,'') AS "dbType.name",
      IFNULL(dbType.driver,'') AS "dbType.driver",
      IFNULL(dbType.rule,'') AS "dbType.rule",
    </trim>
  </sql>
  <sql id="microVersionJoins">
    LEFT JOIN micro_app app ON app.id = a.app_id
    LEFT JOIN sys_dict_item type ON type.id = a.type_id
    LEFT JOIN sys_db_type dbType ON dbType.id = a.db_type_id
  </sql>
  <select id="get" resultType="com.geeke.micro.entity.MicroVersion">
    SELECT
    <include refid="microVersionColumns" />
    FROM micro_version a
    <include refid="microVersionJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM micro_version a
    <include refid="microVersionJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.micro.entity.MicroVersion">
    SELECT
    <include refid="microVersionColumns" />
    FROM micro_version a
    <include refid="microVersionJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.micro.entity.MicroVersion">
    SELECT
    <include refid="microVersionColumns" />
    FROM micro_version a
    <include refid="microVersionJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO micro_version(
    <trim suffixOverrides=",">
      id,
      app_id,
      type_id,
      url,
      is_locked,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      name,
      mobil_url,
      db_type_id,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ app.id },
      #{ type.id },
      #{ url },
      #{ isLocked },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ name },
      #{ mobilUrl },
      #{ dbType.id },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE micro_version SET
    <trim suffixOverrides=",">
      app_id = #{ app.id },
      type_id = #{ type.id },
      url = #{ url },
      is_locked = #{ isLocked },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      name = #{ name },
      mobil_url = #{ mobilUrl },
      db_type_id = #{ dbType.id },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE micro_version SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO micro_version(
    <trim suffixOverrides=",">
      id,
      app_id,
      type_id,
      url,
      is_locked,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      name,
      mobil_url,
      db_type_id,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.app.id},
        #{entity.type.id},
        #{entity.url},
        #{entity.isLocked},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
        #{entity.name},
        #{entity.mobilUrl},
        #{entity.dbType.id},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE micro_version
    <set>
      <trim prefix="app_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.app.id}
        </foreach>
      </trim>
      <trim prefix="type_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.type.id}
        </foreach>
      </trim>
      <trim prefix="url=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.url}
        </foreach>
      </trim>
      <trim prefix="is_locked=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.isLocked}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="mobil_url=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.mobilUrl}
        </foreach>
      </trim>
      <trim prefix="db_type_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbType.id}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE micro_version
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>