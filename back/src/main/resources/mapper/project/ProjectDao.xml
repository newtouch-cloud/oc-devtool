<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.project.dao.ProjectDao">
  <sql id="projectColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.user_id AS "user.id",
      IFNULL(user.name,'') AS "user.name",
      a.name AS "name",
      a.status AS "status",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
      a.db_username AS "dbUsername",
      a.db_password AS "dbPassword",
      a.db_url AS "dbUrl",
      a.db_ip AS "dbIp",
      a.db_port AS "dbPort",
      a.db_name AS "dbName",
      a.db_type_id AS "dbType.id",
      IFNULL(dbType.name,'') AS "dbType.name",
      IFNULL(dbType.driver,'') AS "dbType.driver",
      IFNULL(dbType.rule,'') AS "dbType.rule",
      a.cloud_name AS "cloudName",
    </trim>
  </sql>
  <sql id="projectJoins">
    INNER JOIN prj_member member ON a.id = member.project_id
    INNER JOIN sys_user muser ON muser.id = member.user_id AND muser.id = ${@com.geeke.utils.SessionUtils@getUser().getId()}
    INNER JOIN sys_user user ON user.id = a.user_id
    INNER JOIN sys_db_type dbType ON dbType.id = a.db_type_id
  </sql>
  <select id="get" resultType="com.geeke.project.entity.Project">
    SELECT
    <include refid="projectColumns" />
    FROM prj_project a
    <include refid="projectJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM prj_project a
    <include refid="projectJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.project.entity.Project">
    SELECT
    <include refid="projectColumns" />
    FROM prj_project a
    <include refid="projectJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.project.entity.Project">
    SELECT
    <include refid="projectColumns" />
    FROM prj_project a
    <include refid="projectJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO prj_project(
    <trim suffixOverrides=",">
      id,
      user_id,
      name,
      status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      db_username,
      db_password,
      db_url,
      db_ip,
      db_port,
      db_name,
      db_type_id,
      cloud_name,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ user.id },
      #{ name },
      #{ status },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ dbUsername },
      #{ dbPassword },
      #{ dbUrl },
      #{ dbIp },
      #{ dbPort },
      #{ dbName },
      #{ dbType.id },
      #{ cloudName },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE prj_project SET
    <trim suffixOverrides=",">
      user_id = #{ user.id },
      name = #{ name },
      status = #{ status },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      db_username = #{ dbUsername },
      db_password = #{ dbPassword },
      db_url = #{ dbUrl },
      db_ip = #{ dbIp },
      db_port = #{ dbPort },
      db_name = #{ dbName },
      db_type_id = #{ dbType.id },
      cloud_name = #{ cloudName },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE prj_project SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO prj_project(
    <trim suffixOverrides=",">
      id,
      user_id,
      name,
      status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      db_username,
      db_password,
      db_url,
      db_ip,
      db_port,
      db_name,
      db_type_id,
      cloud_name,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.user.id},
        #{entity.name},
        #{entity.status},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
        #{entity.dbUsername},
        #{entity.dbPassword},
        #{entity.dbUrl},
        #{entity.dbIp},
        #{entity.dbPort},
        #{entity.dbName},
        #{entity.dbType.id},
        #{entity.cloudName},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE prj_project
    <set>
      <trim prefix="user_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.user.id}
        </foreach>
      </trim>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.status}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="db_username=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbUsername}
        </foreach>
      </trim>
      <trim prefix="db_password=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbPassword}
        </foreach>
      </trim>
      <trim prefix="db_url=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbUrl}
        </foreach>
      </trim>
      <trim prefix="db_ip=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbIp}
        </foreach>
      </trim>
      <trim prefix="db_port=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbPort}
        </foreach>
      </trim>
      <trim prefix="db_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbName}
        </foreach>
      </trim>
      <trim prefix="db_type_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbType.id}
        </foreach>
      </trim>
      <trim prefix="cloud_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.cloudName}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE prj_project
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <resultMap id="getProjectTableColumn" type="com.geeke.project.entity.Project">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="cloudName" property="cloudName" />
    <collection property="children" ofType="com.geeke.dc.entity.DcScheme">
      <id column="schemeId" property="id" />
      <result column="schemeName" property="name" />
      <result column="packageName" property="packageName" />
      <result column="moduleName" property="moduleName" />
      <result column="subModuleName" property="subModuleName" />
      <collection property="children" ofType="com.geeke.dc.entity.DcTable">
        <id column="tableId" property="id" />
        <result column="tableName" property="name" />
        <result column="className" property="className" />
        <result column="comments" property="comments" />
        <result column="filter" property="filter" />
        <result column="dcScheme.id" property="scheme.id" />
        <result column="dcScheme.name" property="scheme.name" />
        <result column="dcScheme.packageName" property="scheme.packageName" />
        <result column="dcScheme.moduleName" property="scheme.moduleName" />
        <result column="dcScheme.subModuleName" property="scheme.subModuleName" />
        <collection property="columnList" ofType="com.geeke.dc.entity.DcTableColumnEx">
          <id property="id" column="columnId" />
          <result column="columnName" property="name" />
          <result column="columnComments" property="comments" />
          <result column="dcTable.id" property="dcTable.id" />
          <result column="dcTable.name" property="dcTable.name" />
          <result column="dcTable.className" property="dcTable.className" />
          <result column="dcTable.scheme.name" property="dcTable.scheme.name" />
          <result column="dcTable.scheme.packageName" property="dcTable.scheme.packageName" />
          <result column="dcTable.scheme.moduleName" property="dcTable.scheme.moduleName" />
          <result column="dcTable.scheme.subModuleName" property="dcTable.scheme.subModuleName" />
          <result column="jdbcType" property="jdbcType" />
          <result column="javaType.id" property="javaType.id" />
          <result column="javaType.name" property="javaType.name" />
          <result column="javaType.value" property="javaType.value" />
          <result column="customType.id" property="customType.id" />
          <result column="customType.name" property="customType.name" />
          <result column="customType.comments" property="customType.comments" />
          <result column="customType.className" property="customType.className" />
          <result column="customType.filter" property="customType.filter" />
          <result column="customType.scheme.name" property="customType.scheme.name" />
          <result column="customType.scheme.packageName" property="customType.scheme.packageName" />
          <result column="customType.scheme.moduleName" property="customType.scheme.moduleName" />
          <result column="dcTable.scheme.subModuleName" property="dcTable.scheme.subModuleName" />
          <result column="currentSchemeTable" property="currentSchemeTable" />
          <result column="javaField" property="javaField" />
          <result column="associatedField" property="associatedField" />
        </collection>
      </collection>
    </collection>
  </resultMap>
  <!--查询项目包含后端方案包含业务表包含业务表字段-->
  <select id="listProjectTableColumn" resultMap="getProjectTableColumn">
    SELECT
    a.id as id,
    a.name as name,
    a.cloud_name as cloudName,
    `scheme`.id as schemeId,
    `scheme`.name as schemeName,
    `scheme`.package_name as packageName,
    `scheme`.module_name as moduleName,
    `scheme`.sub_module_name as subModuleName,
    table.id as tableId,
    table.name as tableName,
    table.class_name as className,
    table.comments as comments,
    table.filter as filter,
    table.scheme_id AS "dcScheme.id",
    IFNULL(dcScheme.name,'') AS "dcScheme.name",
    IFNULL(dcScheme.package_name,'') AS "dcScheme.packageName",
    IFNULL(dcScheme.module_name,'') AS "dcScheme.moduleName",
    IFNULL(scheme.sub_module_name,'') AS "dcScheme.subModuleName",
    column.id as columnId,
    column.name as columnName,
    column.comments as columnComments,
    column.dc_table_id AS "dcTable.id",
    IFNULL(table.name,'') AS "dcTable.name",
    IFNULL(table.class_name,'') AS "dcTable.className",
    IFNULL(columnScheme.name,'') AS "dcTable.scheme.name",
    IFNULL(columnScheme.package_name,'') AS "dcTable.scheme.packageName",
    IFNULL(columnScheme.module_name,'') AS "dcTable.scheme.moduleName",
    IFNULL(columnScheme.sub_module_name,'') AS "dcTable.scheme.subModuleName",
    column.jdbc_type AS "jdbcType",
    column.java_type AS "javaType.id",
    IFNULL(javaType.name,'') AS "javaType.name",
    javaType.value AS "javaType.value",
    column.custom_type AS "customType.id",
    IFNULL(customType.name,'') AS "customType.name",
    IFNULL(customType.comments,'') AS "customType.comments",
    IFNULL(customType.class_name,'') AS "customType.className",
    IFNULL(customType.filter,'') AS "customType.filter",
    IFNULL(customScheme.name,'') AS "customType.scheme.name",
    IFNULL(customScheme.package_name,'') AS "customType.scheme.packageName",
    IFNULL(customScheme.module_name,'') AS "customType.scheme.moduleName",
    IFNULL(customScheme.sub_module_name,'') AS "customType.scheme.subModuleName",
    column.current_scheme_table AS "currentSchemeTable",
    column.java_field AS "javaField",
    column.associated_field AS "associatedField"
    FROM prj_project a
    LEFT JOIN dc_scheme `scheme` ON `scheme`.project_id = a.id and `scheme`.del_flag = #{DEL_FLAG_NORMAL}
    LEFT JOIN dc_table `table` ON `scheme`.id = `table`.scheme_id and `table`.del_flag = #{DEL_FLAG_NORMAL}
    LEFT JOIN dc_scheme dcScheme ON table.scheme_id = dcScheme.id
    LEFT JOIN dc_table_column `column` ON table.id = column.dc_table_id and column.del_flag = #{DEL_FLAG_NORMAL}
    LEFT JOIN dc_scheme columnScheme ON table.scheme_id = columnScheme.id
    LEFT JOIN sys_dict_item javaType ON javaType.id = `column`.java_type
    LEFT JOIN dc_table customType ON customType.id = `column`.custom_type
    LEFT JOIN dc_scheme customScheme on customType.scheme_id = customScheme.id
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <!--数据源查询所有项目-->
  <select id="listForDataSource" resultType="com.geeke.project.entity.Project">
    SELECT
    a.id AS "id",
    a.user_id AS "user.id",
    a.name AS "name",
    a.status AS "status",
    a.remarks AS "remarks",
    a.create_by AS "createBy",
    a.create_date AS "createDate",
    a.update_by AS "updateBy",
    a.update_date AS "updateDate",
    a.del_flag AS "delFlag",
    a.db_username AS "dbUsername",
    a.db_password AS "dbPassword",
    a.db_url AS "dbUrl",
    a.db_ip AS "dbIp",
    a.db_port AS "dbPort",
    a.db_name AS "dbName",
    a.db_type_id AS "dbType.id",
    IFNULL(dbType.name,'') AS "dbType.name",
    IFNULL(dbType.driver,'') AS "dbType.driver",
    IFNULL(dbType.rule,'') AS "dbType.rule",
    a.cloud_name AS "cloudName"
    FROM prj_project a
    INNER JOIN sys_db_type dbType ON dbType.id = a.db_type_id
    <where>
      a.del_flag = 0
    </where>
  </select>
</mapper>